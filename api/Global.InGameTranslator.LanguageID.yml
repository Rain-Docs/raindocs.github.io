### YamlMime:ManagedReference
items:
- uid: Global.InGameTranslator.LanguageID
  commentId: T:Global.InGameTranslator.LanguageID
  id: InGameTranslator.LanguageID
  parent: Global
  children:
  - Global.InGameTranslator.LanguageID.#ctor(System.String,System.Boolean)
  - Global.InGameTranslator.LanguageID.Chinese
  - Global.InGameTranslator.LanguageID.EncryptIndex(InGameTranslator.LanguageID)
  - Global.InGameTranslator.LanguageID.English
  - Global.InGameTranslator.LanguageID.French
  - Global.InGameTranslator.LanguageID.German
  - Global.InGameTranslator.LanguageID.Italian
  - Global.InGameTranslator.LanguageID.Japanese
  - Global.InGameTranslator.LanguageID.Korean
  - Global.InGameTranslator.LanguageID.Parse(System.Int32)
  - Global.InGameTranslator.LanguageID.Portuguese
  - Global.InGameTranslator.LanguageID.Russian
  - Global.InGameTranslator.LanguageID.Spanish
  - Global.InGameTranslator.LanguageID.UsesCapitals(InGameTranslator.LanguageID)
  - Global.InGameTranslator.LanguageID.UsesLargeFont(InGameTranslator.LanguageID)
  - Global.InGameTranslator.LanguageID.UsesSpaces(InGameTranslator.LanguageID)
  - Global.InGameTranslator.LanguageID.WordWrappingAllowed(InGameTranslator.LanguageID)
  langs:
  - csharp
  - vb
  name: InGameTranslator.LanguageID
  nameWithType: InGameTranslator.LanguageID
  fullName: InGameTranslator.LanguageID
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:InGameTranslator.LanguageID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class InGameTranslator.LanguageID : ExtEnum<InGameTranslator.LanguageID>, IComparable, IEquatable<InGameTranslator.LanguageID>'
    content.vb: Public Class InGameTranslator.LanguageID Inherits ExtEnum(Of InGameTranslator.LanguageID) Implements IComparable, IEquatable(Of InGameTranslator.LanguageID)
  inheritance:
  - System.Object
  - Global.ExtEnumBase
  - Global.ExtEnum{InGameTranslator.LanguageID}
  implements:
  - System.IComparable
  - System.IEquatable{InGameTranslator.LanguageID}
  inheritedMembers:
  - Global.ExtEnum{InGameTranslator.LanguageID}.values
  - Global.ExtEnum{InGameTranslator.LanguageID}.Equals(System.Object)
  - Global.ExtEnum{InGameTranslator.LanguageID}.Equals(ExtEnum{InGameTranslator.LanguageID})
  - Global.ExtEnum{InGameTranslator.LanguageID}.Equals(InGameTranslator.LanguageID)
  - Global.ExtEnum{InGameTranslator.LanguageID}.GetHashCode
  - Global.ExtEnum{InGameTranslator.LanguageID}.Unregister
  - Global.ExtEnum{InGameTranslator.LanguageID}.valuesVersion
  - Global.ExtEnum{InGameTranslator.LanguageID}.Index
  - Global.ExtEnumBase.value
  - Global.ExtEnumBase.valueHash
  - Global.ExtEnumBase.index
  - Global.ExtEnumBase.localVersion
  - Global.ExtEnumBase.enumType
  - Global.ExtEnumBase.valueDictionary
  - Global.ExtEnumBase.ToString
  - Global.ExtEnumBase.CompareTo(System.Object)
  - Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  - Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  - Global.ExtEnumBase.GetExtEnumType(System.Type)
  - Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  - Global.ExtEnumBase.GetNames(System.Type)
  - Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  - Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.InGameTranslator.LanguageID.English
  commentId: F:Global.InGameTranslator.LanguageID.English
  id: English
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: English
  nameWithType: InGameTranslator.LanguageID.English
  fullName: InGameTranslator.LanguageID.English
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:InGameTranslator.LanguageID.English</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly InGameTranslator.LanguageID English
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public Shared ReadOnly English As InGameTranslator.LanguageID
- uid: Global.InGameTranslator.LanguageID.French
  commentId: F:Global.InGameTranslator.LanguageID.French
  id: French
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: French
  nameWithType: InGameTranslator.LanguageID.French
  fullName: InGameTranslator.LanguageID.French
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:InGameTranslator.LanguageID.French</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly InGameTranslator.LanguageID French
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public Shared ReadOnly French As InGameTranslator.LanguageID
- uid: Global.InGameTranslator.LanguageID.Italian
  commentId: F:Global.InGameTranslator.LanguageID.Italian
  id: Italian
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: Italian
  nameWithType: InGameTranslator.LanguageID.Italian
  fullName: InGameTranslator.LanguageID.Italian
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:InGameTranslator.LanguageID.Italian</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly InGameTranslator.LanguageID Italian
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public Shared ReadOnly Italian As InGameTranslator.LanguageID
- uid: Global.InGameTranslator.LanguageID.German
  commentId: F:Global.InGameTranslator.LanguageID.German
  id: German
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: German
  nameWithType: InGameTranslator.LanguageID.German
  fullName: InGameTranslator.LanguageID.German
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:InGameTranslator.LanguageID.German</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly InGameTranslator.LanguageID German
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public Shared ReadOnly German As InGameTranslator.LanguageID
- uid: Global.InGameTranslator.LanguageID.Spanish
  commentId: F:Global.InGameTranslator.LanguageID.Spanish
  id: Spanish
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: Spanish
  nameWithType: InGameTranslator.LanguageID.Spanish
  fullName: InGameTranslator.LanguageID.Spanish
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:InGameTranslator.LanguageID.Spanish</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly InGameTranslator.LanguageID Spanish
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public Shared ReadOnly Spanish As InGameTranslator.LanguageID
- uid: Global.InGameTranslator.LanguageID.Portuguese
  commentId: F:Global.InGameTranslator.LanguageID.Portuguese
  id: Portuguese
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: Portuguese
  nameWithType: InGameTranslator.LanguageID.Portuguese
  fullName: InGameTranslator.LanguageID.Portuguese
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:InGameTranslator.LanguageID.Portuguese</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly InGameTranslator.LanguageID Portuguese
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public Shared ReadOnly Portuguese As InGameTranslator.LanguageID
- uid: Global.InGameTranslator.LanguageID.Japanese
  commentId: F:Global.InGameTranslator.LanguageID.Japanese
  id: Japanese
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: Japanese
  nameWithType: InGameTranslator.LanguageID.Japanese
  fullName: InGameTranslator.LanguageID.Japanese
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:InGameTranslator.LanguageID.Japanese</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly InGameTranslator.LanguageID Japanese
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public Shared ReadOnly Japanese As InGameTranslator.LanguageID
- uid: Global.InGameTranslator.LanguageID.Korean
  commentId: F:Global.InGameTranslator.LanguageID.Korean
  id: Korean
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: Korean
  nameWithType: InGameTranslator.LanguageID.Korean
  fullName: InGameTranslator.LanguageID.Korean
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:InGameTranslator.LanguageID.Korean</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly InGameTranslator.LanguageID Korean
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public Shared ReadOnly Korean As InGameTranslator.LanguageID
- uid: Global.InGameTranslator.LanguageID.Russian
  commentId: F:Global.InGameTranslator.LanguageID.Russian
  id: Russian
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: Russian
  nameWithType: InGameTranslator.LanguageID.Russian
  fullName: InGameTranslator.LanguageID.Russian
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:InGameTranslator.LanguageID.Russian</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly InGameTranslator.LanguageID Russian
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public Shared ReadOnly Russian As InGameTranslator.LanguageID
- uid: Global.InGameTranslator.LanguageID.Chinese
  commentId: F:Global.InGameTranslator.LanguageID.Chinese
  id: Chinese
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: Chinese
  nameWithType: InGameTranslator.LanguageID.Chinese
  fullName: InGameTranslator.LanguageID.Chinese
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:InGameTranslator.LanguageID.Chinese</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly InGameTranslator.LanguageID Chinese
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public Shared ReadOnly Chinese As InGameTranslator.LanguageID
- uid: Global.InGameTranslator.LanguageID.#ctor(System.String,System.Boolean)
  commentId: M:Global.InGameTranslator.LanguageID.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: LanguageID(string, bool)
  nameWithType: InGameTranslator.LanguageID.LanguageID(string, bool)
  fullName: InGameTranslator.LanguageID.LanguageID(string, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>InGameTranslator.LanguageID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LanguageID(string value, bool register = false)
    parameters:
    - id: value
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:InGameTranslator.LanguageID.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: register
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>register</parameter>
            <parameter>M:InGameTranslator.LanguageID.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(value As String, register As Boolean = False)
  overload: Global.InGameTranslator.LanguageID.#ctor*
  nameWithType.vb: InGameTranslator.LanguageID.New(String, Boolean)
  fullName.vb: InGameTranslator.LanguageID.New(String, Boolean)
  name.vb: New(String, Boolean)
- uid: Global.InGameTranslator.LanguageID.Parse(System.Int32)
  commentId: M:Global.InGameTranslator.LanguageID.Parse(System.Int32)
  id: Parse(System.Int32)
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: Parse(int)
  nameWithType: InGameTranslator.LanguageID.Parse(int)
  fullName: InGameTranslator.LanguageID.Parse(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:InGameTranslator.LanguageID.Parse(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static InGameTranslator.LanguageID Parse(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:InGameTranslator.LanguageID.Parse(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.InGameTranslator.LanguageID
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:InGameTranslator.LanguageID.Parse(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Parse(index As Integer) As InGameTranslator.LanguageID
  overload: Global.InGameTranslator.LanguageID.Parse*
  nameWithType.vb: InGameTranslator.LanguageID.Parse(Integer)
  fullName.vb: InGameTranslator.LanguageID.Parse(Integer)
  name.vb: Parse(Integer)
- uid: Global.InGameTranslator.LanguageID.EncryptIndex(InGameTranslator.LanguageID)
  commentId: M:Global.InGameTranslator.LanguageID.EncryptIndex(InGameTranslator.LanguageID)
  id: EncryptIndex(InGameTranslator.LanguageID)
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: EncryptIndex(LanguageID)
  nameWithType: InGameTranslator.LanguageID.EncryptIndex(InGameTranslator.LanguageID)
  fullName: InGameTranslator.LanguageID.EncryptIndex(InGameTranslator.LanguageID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:InGameTranslator.LanguageID.EncryptIndex(InGameTranslator.LanguageID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int EncryptIndex(InGameTranslator.LanguageID lang)
    parameters:
    - id: lang
      type: Global.InGameTranslator.LanguageID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lang</parameter>
            <parameter>M:InGameTranslator.LanguageID.EncryptIndex(InGameTranslator.LanguageID)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:InGameTranslator.LanguageID.EncryptIndex(InGameTranslator.LanguageID)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function EncryptIndex(lang As InGameTranslator.LanguageID) As Integer
  overload: Global.InGameTranslator.LanguageID.EncryptIndex*
- uid: Global.InGameTranslator.LanguageID.UsesCapitals(InGameTranslator.LanguageID)
  commentId: M:Global.InGameTranslator.LanguageID.UsesCapitals(InGameTranslator.LanguageID)
  id: UsesCapitals(InGameTranslator.LanguageID)
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: UsesCapitals(LanguageID)
  nameWithType: InGameTranslator.LanguageID.UsesCapitals(InGameTranslator.LanguageID)
  fullName: InGameTranslator.LanguageID.UsesCapitals(InGameTranslator.LanguageID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:InGameTranslator.LanguageID.UsesCapitals(InGameTranslator.LanguageID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool UsesCapitals(InGameTranslator.LanguageID lang)
    parameters:
    - id: lang
      type: Global.InGameTranslator.LanguageID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lang</parameter>
            <parameter>M:InGameTranslator.LanguageID.UsesCapitals(InGameTranslator.LanguageID)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:InGameTranslator.LanguageID.UsesCapitals(InGameTranslator.LanguageID)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function UsesCapitals(lang As InGameTranslator.LanguageID) As Boolean
  overload: Global.InGameTranslator.LanguageID.UsesCapitals*
- uid: Global.InGameTranslator.LanguageID.UsesLargeFont(InGameTranslator.LanguageID)
  commentId: M:Global.InGameTranslator.LanguageID.UsesLargeFont(InGameTranslator.LanguageID)
  id: UsesLargeFont(InGameTranslator.LanguageID)
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: UsesLargeFont(LanguageID)
  nameWithType: InGameTranslator.LanguageID.UsesLargeFont(InGameTranslator.LanguageID)
  fullName: InGameTranslator.LanguageID.UsesLargeFont(InGameTranslator.LanguageID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:InGameTranslator.LanguageID.UsesLargeFont(InGameTranslator.LanguageID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool UsesLargeFont(InGameTranslator.LanguageID lang)
    parameters:
    - id: lang
      type: Global.InGameTranslator.LanguageID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lang</parameter>
            <parameter>M:InGameTranslator.LanguageID.UsesLargeFont(InGameTranslator.LanguageID)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:InGameTranslator.LanguageID.UsesLargeFont(InGameTranslator.LanguageID)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function UsesLargeFont(lang As InGameTranslator.LanguageID) As Boolean
  overload: Global.InGameTranslator.LanguageID.UsesLargeFont*
- uid: Global.InGameTranslator.LanguageID.UsesSpaces(InGameTranslator.LanguageID)
  commentId: M:Global.InGameTranslator.LanguageID.UsesSpaces(InGameTranslator.LanguageID)
  id: UsesSpaces(InGameTranslator.LanguageID)
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: UsesSpaces(LanguageID)
  nameWithType: InGameTranslator.LanguageID.UsesSpaces(InGameTranslator.LanguageID)
  fullName: InGameTranslator.LanguageID.UsesSpaces(InGameTranslator.LanguageID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:InGameTranslator.LanguageID.UsesSpaces(InGameTranslator.LanguageID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool UsesSpaces(InGameTranslator.LanguageID lang)
    parameters:
    - id: lang
      type: Global.InGameTranslator.LanguageID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lang</parameter>
            <parameter>M:InGameTranslator.LanguageID.UsesSpaces(InGameTranslator.LanguageID)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:InGameTranslator.LanguageID.UsesSpaces(InGameTranslator.LanguageID)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function UsesSpaces(lang As InGameTranslator.LanguageID) As Boolean
  overload: Global.InGameTranslator.LanguageID.UsesSpaces*
- uid: Global.InGameTranslator.LanguageID.WordWrappingAllowed(InGameTranslator.LanguageID)
  commentId: M:Global.InGameTranslator.LanguageID.WordWrappingAllowed(InGameTranslator.LanguageID)
  id: WordWrappingAllowed(InGameTranslator.LanguageID)
  parent: Global.InGameTranslator.LanguageID
  langs:
  - csharp
  - vb
  name: WordWrappingAllowed(LanguageID)
  nameWithType: InGameTranslator.LanguageID.WordWrappingAllowed(InGameTranslator.LanguageID)
  fullName: InGameTranslator.LanguageID.WordWrappingAllowed(InGameTranslator.LanguageID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:InGameTranslator.LanguageID.WordWrappingAllowed(InGameTranslator.LanguageID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool WordWrappingAllowed(InGameTranslator.LanguageID lang)
    parameters:
    - id: lang
      type: Global.InGameTranslator.LanguageID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lang</parameter>
            <parameter>M:InGameTranslator.LanguageID.WordWrappingAllowed(InGameTranslator.LanguageID)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:InGameTranslator.LanguageID.WordWrappingAllowed(InGameTranslator.LanguageID)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function WordWrappingAllowed(lang As InGameTranslator.LanguageID) As Boolean
  overload: Global.InGameTranslator.LanguageID.WordWrappingAllowed*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ExtEnumBase
  commentId: T:Global.ExtEnumBase
  isExternal: true
  href: ExtEnumBase.html
  name: ExtEnumBase
  nameWithType: ExtEnumBase
  fullName: ExtEnumBase
- uid: Global.ExtEnum{InGameTranslator.LanguageID}
  commentId: T:Global.ExtEnum{InGameTranslator.LanguageID}
  definition: Global.ExtEnum`1
  href: ExtEnum-1.html
  name: ExtEnum<InGameTranslator.LanguageID>
  nameWithType: ExtEnum<InGameTranslator.LanguageID>
  fullName: ExtEnum<InGameTranslator.LanguageID>
  nameWithType.vb: ExtEnum(Of InGameTranslator.LanguageID)
  fullName.vb: ExtEnum(Of InGameTranslator.LanguageID)
  name.vb: ExtEnum(Of InGameTranslator.LanguageID)
  spec.csharp:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - uid: Global.InGameTranslator
    name: InGameTranslator
    isExternal: true
    href: InGameTranslator.html
  - name: .
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
  - name: '>'
  spec.vb:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Global.InGameTranslator
    name: InGameTranslator
    isExternal: true
    href: InGameTranslator.html
  - name: .
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
  - name: )
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IEquatable{InGameTranslator.LanguageID}
  commentId: T:System.IEquatable{InGameTranslator.LanguageID}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<InGameTranslator.LanguageID>
  nameWithType: IEquatable<InGameTranslator.LanguageID>
  fullName: System.IEquatable<InGameTranslator.LanguageID>
  nameWithType.vb: IEquatable(Of InGameTranslator.LanguageID)
  fullName.vb: System.IEquatable(Of InGameTranslator.LanguageID)
  name.vb: IEquatable(Of InGameTranslator.LanguageID)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Global.InGameTranslator
    name: InGameTranslator
    isExternal: true
    href: InGameTranslator.html
  - name: .
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.InGameTranslator
    name: InGameTranslator
    isExternal: true
    href: InGameTranslator.html
  - name: .
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
  - name: )
- uid: Global.ExtEnum{InGameTranslator.LanguageID}.values
  commentId: F:Global.ExtEnum{InGameTranslator.LanguageID}.values
  parent: Global.ExtEnum{InGameTranslator.LanguageID}
  definition: Global.ExtEnum`1.values
  href: Global.ExtEnum-1.html#ExtEnum_1_values
  name: values
  nameWithType: ExtEnum<InGameTranslator.LanguageID>.values
  fullName: ExtEnum<InGameTranslator.LanguageID>.values
  nameWithType.vb: ExtEnum(Of InGameTranslator.LanguageID).values
  fullName.vb: ExtEnum(Of InGameTranslator.LanguageID).values
- uid: Global.ExtEnum{InGameTranslator.LanguageID}.Equals(System.Object)
  commentId: M:Global.ExtEnum{InGameTranslator.LanguageID}.Equals(System.Object)
  parent: Global.ExtEnum{InGameTranslator.LanguageID}
  definition: Global.ExtEnum`1.Equals(System.Object)
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  name: Equals(object)
  nameWithType: ExtEnum<InGameTranslator.LanguageID>.Equals(object)
  fullName: ExtEnum<InGameTranslator.LanguageID>.Equals(object)
  nameWithType.vb: ExtEnum(Of InGameTranslator.LanguageID).Equals(Object)
  fullName.vb: ExtEnum(Of InGameTranslator.LanguageID).Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Global.ExtEnum{InGameTranslator.LanguageID}.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{InGameTranslator.LanguageID}.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnum{InGameTranslator.LanguageID}.Equals(ExtEnum{InGameTranslator.LanguageID})
  commentId: M:Global.ExtEnum{InGameTranslator.LanguageID}.Equals(ExtEnum{InGameTranslator.LanguageID})
  parent: Global.ExtEnum{InGameTranslator.LanguageID}
  definition: Global.ExtEnum`1.Equals(ExtEnum{`0})
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  name: Equals(ExtEnum<LanguageID>)
  nameWithType: ExtEnum<InGameTranslator.LanguageID>.Equals(ExtEnum<InGameTranslator.LanguageID>)
  fullName: ExtEnum<InGameTranslator.LanguageID>.Equals(ExtEnum<InGameTranslator.LanguageID>)
  nameWithType.vb: ExtEnum(Of InGameTranslator.LanguageID).Equals(ExtEnum(Of InGameTranslator.LanguageID))
  fullName.vb: ExtEnum(Of InGameTranslator.LanguageID).Equals(ExtEnum(Of InGameTranslator.LanguageID))
  name.vb: Equals(ExtEnum(Of LanguageID))
  spec.csharp:
  - uid: Global.ExtEnum{InGameTranslator.LanguageID}.Equals(ExtEnum{InGameTranslator.LanguageID})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{InGameTranslator.LanguageID}.Equals(ExtEnum{InGameTranslator.LanguageID})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
  - name: )
  - name: )
- uid: Global.ExtEnum{InGameTranslator.LanguageID}.Equals(InGameTranslator.LanguageID)
  commentId: M:Global.ExtEnum{InGameTranslator.LanguageID}.Equals(InGameTranslator.LanguageID)
  parent: Global.ExtEnum{InGameTranslator.LanguageID}
  definition: Global.ExtEnum`1.Equals(`0)
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  name: Equals(LanguageID)
  nameWithType: ExtEnum<InGameTranslator.LanguageID>.Equals(InGameTranslator.LanguageID)
  fullName: ExtEnum<InGameTranslator.LanguageID>.Equals(InGameTranslator.LanguageID)
  nameWithType.vb: ExtEnum(Of InGameTranslator.LanguageID).Equals(InGameTranslator.LanguageID)
  fullName.vb: ExtEnum(Of InGameTranslator.LanguageID).Equals(InGameTranslator.LanguageID)
  spec.csharp:
  - uid: Global.ExtEnum{InGameTranslator.LanguageID}.Equals(InGameTranslator.LanguageID)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{InGameTranslator.LanguageID}.Equals(InGameTranslator.LanguageID)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
  - name: )
- uid: Global.ExtEnum{InGameTranslator.LanguageID}.GetHashCode
  commentId: M:Global.ExtEnum{InGameTranslator.LanguageID}.GetHashCode
  parent: Global.ExtEnum{InGameTranslator.LanguageID}
  definition: Global.ExtEnum`1.GetHashCode
  href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  name: GetHashCode()
  nameWithType: ExtEnum<InGameTranslator.LanguageID>.GetHashCode()
  fullName: ExtEnum<InGameTranslator.LanguageID>.GetHashCode()
  nameWithType.vb: ExtEnum(Of InGameTranslator.LanguageID).GetHashCode()
  fullName.vb: ExtEnum(Of InGameTranslator.LanguageID).GetHashCode()
  spec.csharp:
  - uid: Global.ExtEnum{InGameTranslator.LanguageID}.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{InGameTranslator.LanguageID}.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
- uid: Global.ExtEnum{InGameTranslator.LanguageID}.Unregister
  commentId: M:Global.ExtEnum{InGameTranslator.LanguageID}.Unregister
  parent: Global.ExtEnum{InGameTranslator.LanguageID}
  definition: Global.ExtEnum`1.Unregister
  href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  name: Unregister()
  nameWithType: ExtEnum<InGameTranslator.LanguageID>.Unregister()
  fullName: ExtEnum<InGameTranslator.LanguageID>.Unregister()
  nameWithType.vb: ExtEnum(Of InGameTranslator.LanguageID).Unregister()
  fullName.vb: ExtEnum(Of InGameTranslator.LanguageID).Unregister()
  spec.csharp:
  - uid: Global.ExtEnum{InGameTranslator.LanguageID}.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{InGameTranslator.LanguageID}.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
- uid: Global.ExtEnum{InGameTranslator.LanguageID}.valuesVersion
  commentId: P:Global.ExtEnum{InGameTranslator.LanguageID}.valuesVersion
  parent: Global.ExtEnum{InGameTranslator.LanguageID}
  definition: Global.ExtEnum`1.valuesVersion
  href: Global.ExtEnum-1.html#ExtEnum_1_valuesVersion
  name: valuesVersion
  nameWithType: ExtEnum<InGameTranslator.LanguageID>.valuesVersion
  fullName: ExtEnum<InGameTranslator.LanguageID>.valuesVersion
  nameWithType.vb: ExtEnum(Of InGameTranslator.LanguageID).valuesVersion
  fullName.vb: ExtEnum(Of InGameTranslator.LanguageID).valuesVersion
- uid: Global.ExtEnum{InGameTranslator.LanguageID}.Index
  commentId: P:Global.ExtEnum{InGameTranslator.LanguageID}.Index
  parent: Global.ExtEnum{InGameTranslator.LanguageID}
  definition: Global.ExtEnum`1.Index
  href: Global.ExtEnum-1.html#ExtEnum_1_Index
  name: Index
  nameWithType: ExtEnum<InGameTranslator.LanguageID>.Index
  fullName: ExtEnum<InGameTranslator.LanguageID>.Index
  nameWithType.vb: ExtEnum(Of InGameTranslator.LanguageID).Index
  fullName.vb: ExtEnum(Of InGameTranslator.LanguageID).Index
- uid: Global.ExtEnumBase.value
  commentId: F:Global.ExtEnumBase.value
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_value
  name: value
  nameWithType: ExtEnumBase.value
  fullName: ExtEnumBase.value
- uid: Global.ExtEnumBase.valueHash
  commentId: F:Global.ExtEnumBase.valueHash
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_valueHash
  name: valueHash
  nameWithType: ExtEnumBase.valueHash
  fullName: ExtEnumBase.valueHash
- uid: Global.ExtEnumBase.index
  commentId: F:Global.ExtEnumBase.index
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_index
  name: index
  nameWithType: ExtEnumBase.index
  fullName: ExtEnumBase.index
- uid: Global.ExtEnumBase.localVersion
  commentId: F:Global.ExtEnumBase.localVersion
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_localVersion
  name: localVersion
  nameWithType: ExtEnumBase.localVersion
  fullName: ExtEnumBase.localVersion
- uid: Global.ExtEnumBase.enumType
  commentId: F:Global.ExtEnumBase.enumType
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_enumType
  name: enumType
  nameWithType: ExtEnumBase.enumType
  fullName: ExtEnumBase.enumType
- uid: Global.ExtEnumBase.valueDictionary
  commentId: F:Global.ExtEnumBase.valueDictionary
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_valueDictionary
  name: valueDictionary
  nameWithType: ExtEnumBase.valueDictionary
  fullName: ExtEnumBase.valueDictionary
- uid: Global.ExtEnumBase.ToString
  commentId: M:Global.ExtEnumBase.ToString
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  name: ToString()
  nameWithType: ExtEnumBase.ToString()
  fullName: ExtEnumBase.ToString()
  spec.csharp:
  - uid: Global.ExtEnumBase.ToString
    name: ToString
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.ToString
    name: ToString
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  - name: (
  - name: )
- uid: Global.ExtEnumBase.CompareTo(System.Object)
  commentId: M:Global.ExtEnumBase.CompareTo(System.Object)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  name: CompareTo(object)
  nameWithType: ExtEnumBase.CompareTo(object)
  fullName: ExtEnumBase.CompareTo(object)
  nameWithType.vb: ExtEnumBase.CompareTo(Object)
  fullName.vb: ExtEnumBase.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: Global.ExtEnumBase.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  commentId: M:Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  name: Parse(Type, string, bool)
  nameWithType: ExtEnumBase.Parse(Type, string, bool)
  fullName: ExtEnumBase.Parse(System.Type, string, bool)
  nameWithType.vb: ExtEnumBase.Parse(Type, String, Boolean)
  fullName.vb: ExtEnumBase.Parse(System.Type, String, Boolean)
  name.vb: Parse(Type, String, Boolean)
  spec.csharp:
  - uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
    name: Parse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
    name: Parse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  commentId: M:Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  name: TryParse(Type, string, bool, out ExtEnumBase)
  nameWithType: ExtEnumBase.TryParse(Type, string, bool, out ExtEnumBase)
  fullName: ExtEnumBase.TryParse(System.Type, string, bool, out ExtEnumBase)
  nameWithType.vb: ExtEnumBase.TryParse(Type, String, Boolean, ExtEnumBase)
  fullName.vb: ExtEnumBase.TryParse(System.Type, String, Boolean, ExtEnumBase)
  name.vb: TryParse(Type, String, Boolean, ExtEnumBase)
  spec.csharp:
  - uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
    name: TryParse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Global.ExtEnumBase
    name: ExtEnumBase
    isExternal: true
    href: ExtEnumBase.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
    name: TryParse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Global.ExtEnumBase
    name: ExtEnumBase
    isExternal: true
    href: ExtEnumBase.html
  - name: )
- uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
  commentId: M:Global.ExtEnumBase.GetExtEnumType(System.Type)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  name: GetExtEnumType(Type)
  nameWithType: ExtEnumBase.GetExtEnumType(Type)
  fullName: ExtEnumBase.GetExtEnumType(System.Type)
  spec.csharp:
  - uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
    name: GetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
    name: GetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  commentId: M:Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  name: TryGetExtEnumType(Type, out ExtEnumType)
  nameWithType: ExtEnumBase.TryGetExtEnumType(Type, out ExtEnumType)
  fullName: ExtEnumBase.TryGetExtEnumType(System.Type, out ExtEnumType)
  nameWithType.vb: ExtEnumBase.TryGetExtEnumType(Type, ExtEnumType)
  fullName.vb: ExtEnumBase.TryGetExtEnumType(System.Type, ExtEnumType)
  name.vb: TryGetExtEnumType(Type, ExtEnumType)
  spec.csharp:
  - uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
    name: TryGetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Global.ExtEnumType
    name: ExtEnumType
    isExternal: true
    href: ExtEnumType.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
    name: TryGetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: Global.ExtEnumType
    name: ExtEnumType
    isExternal: true
    href: ExtEnumType.html
  - name: )
- uid: Global.ExtEnumBase.GetNames(System.Type)
  commentId: M:Global.ExtEnumBase.GetNames(System.Type)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  name: GetNames(Type)
  nameWithType: ExtEnumBase.GetNames(Type)
  fullName: ExtEnumBase.GetNames(System.Type)
  spec.csharp:
  - uid: Global.ExtEnumBase.GetNames(System.Type)
    name: GetNames
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.GetNames(System.Type)
    name: GetNames
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  commentId: M:Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  name: IsDefined(Type, string, bool)
  nameWithType: ExtEnumBase.IsDefined(Type, string, bool)
  fullName: ExtEnumBase.IsDefined(System.Type, string, bool)
  nameWithType.vb: ExtEnumBase.IsDefined(Type, String, Boolean)
  fullName.vb: ExtEnumBase.IsDefined(System.Type, String, Boolean)
  name.vb: IsDefined(Type, String, Boolean)
  spec.csharp:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  commentId: M:Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  name: IsDefined(Type, int)
  nameWithType: ExtEnumBase.IsDefined(Type, int)
  fullName: ExtEnumBase.IsDefined(System.Type, int)
  nameWithType.vb: ExtEnumBase.IsDefined(Type, Integer)
  fullName.vb: ExtEnumBase.IsDefined(System.Type, Integer)
  name.vb: IsDefined(Type, Integer)
  spec.csharp:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ExtEnum`1
  commentId: T:Global.ExtEnum`1
  isExternal: true
  href: ExtEnum-1.html
  name: ExtEnum<T>
  nameWithType: ExtEnum<T>
  fullName: ExtEnum<T>
  nameWithType.vb: ExtEnum(Of T)
  fullName.vb: ExtEnum(Of T)
  name.vb: ExtEnum(Of T)
  spec.csharp:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ExtEnum`1.values
  commentId: F:Global.ExtEnum`1.values
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_values
  name: values
  nameWithType: ExtEnum<T>.values
  fullName: ExtEnum<T>.values
  nameWithType.vb: ExtEnum(Of T).values
  fullName.vb: ExtEnum(Of T).values
- uid: Global.ExtEnum`1.Equals(System.Object)
  commentId: M:Global.ExtEnum`1.Equals(System.Object)
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  name: Equals(object)
  nameWithType: ExtEnum<T>.Equals(object)
  fullName: ExtEnum<T>.Equals(object)
  nameWithType.vb: ExtEnum(Of T).Equals(Object)
  fullName.vb: ExtEnum(Of T).Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Global.ExtEnum`1.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnum`1.Equals(ExtEnum{`0})
  commentId: M:Global.ExtEnum`1.Equals(ExtEnum{`0})
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  name: Equals(ExtEnum<T>)
  nameWithType: ExtEnum<T>.Equals(ExtEnum<T>)
  fullName: ExtEnum<T>.Equals(ExtEnum<T>)
  nameWithType.vb: ExtEnum(Of T).Equals(ExtEnum(Of T))
  fullName.vb: ExtEnum(Of T).Equals(ExtEnum(Of T))
  name.vb: Equals(ExtEnum(Of T))
  spec.csharp:
  - uid: Global.ExtEnum`1.Equals(ExtEnum{`0})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Equals(ExtEnum{`0})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Global.ExtEnum`1.Equals(`0)
  commentId: M:Global.ExtEnum`1.Equals(`0)
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  name: Equals(T)
  nameWithType: ExtEnum<T>.Equals(T)
  fullName: ExtEnum<T>.Equals(T)
  nameWithType.vb: ExtEnum(Of T).Equals(T)
  fullName.vb: ExtEnum(Of T).Equals(T)
  spec.csharp:
  - uid: Global.ExtEnum`1.Equals(`0)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Equals(`0)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - name: T
  - name: )
- uid: Global.ExtEnum`1.GetHashCode
  commentId: M:Global.ExtEnum`1.GetHashCode
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  name: GetHashCode()
  nameWithType: ExtEnum<T>.GetHashCode()
  fullName: ExtEnum<T>.GetHashCode()
  nameWithType.vb: ExtEnum(Of T).GetHashCode()
  fullName.vb: ExtEnum(Of T).GetHashCode()
  spec.csharp:
  - uid: Global.ExtEnum`1.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
- uid: Global.ExtEnum`1.Unregister
  commentId: M:Global.ExtEnum`1.Unregister
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  name: Unregister()
  nameWithType: ExtEnum<T>.Unregister()
  fullName: ExtEnum<T>.Unregister()
  nameWithType.vb: ExtEnum(Of T).Unregister()
  fullName.vb: ExtEnum(Of T).Unregister()
  spec.csharp:
  - uid: Global.ExtEnum`1.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
- uid: Global.ExtEnum`1.valuesVersion
  commentId: P:Global.ExtEnum`1.valuesVersion
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_valuesVersion
  name: valuesVersion
  nameWithType: ExtEnum<T>.valuesVersion
  fullName: ExtEnum<T>.valuesVersion
  nameWithType.vb: ExtEnum(Of T).valuesVersion
  fullName.vb: ExtEnum(Of T).valuesVersion
- uid: Global.ExtEnum`1.Index
  commentId: P:Global.ExtEnum`1.Index
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Index
  name: Index
  nameWithType: ExtEnum<T>.Index
  fullName: ExtEnum<T>.Index
  nameWithType.vb: ExtEnum(Of T).Index
  fullName.vb: ExtEnum(Of T).Index
- uid: Global.InGameTranslator.LanguageID
  commentId: T:Global.InGameTranslator.LanguageID
  isExternal: true
  href: InGameTranslator.html
  name: InGameTranslator.LanguageID
  nameWithType: InGameTranslator.LanguageID
  fullName: InGameTranslator.LanguageID
  spec.csharp:
  - uid: Global.InGameTranslator
    name: InGameTranslator
    isExternal: true
    href: InGameTranslator.html
  - name: .
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
  spec.vb:
  - uid: Global.InGameTranslator
    name: InGameTranslator
    isExternal: true
    href: InGameTranslator.html
  - name: .
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
- uid: Global.InGameTranslator.LanguageID.#ctor*
  commentId: Overload:Global.InGameTranslator.LanguageID.#ctor
  isExternal: true
  href: Global.InGameTranslator.LanguageID.html#InGameTranslator_LanguageID__ctor_System_String_System_Boolean_
  name: LanguageID
  nameWithType: InGameTranslator.LanguageID.LanguageID
  fullName: InGameTranslator.LanguageID.LanguageID
  nameWithType.vb: InGameTranslator.LanguageID.New
  fullName.vb: InGameTranslator.LanguageID.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.InGameTranslator.LanguageID.Parse*
  commentId: Overload:Global.InGameTranslator.LanguageID.Parse
  isExternal: true
  href: Global.InGameTranslator.LanguageID.html#InGameTranslator_LanguageID_Parse_System_Int32_
  name: Parse
  nameWithType: InGameTranslator.LanguageID.Parse
  fullName: InGameTranslator.LanguageID.Parse
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.InGameTranslator.LanguageID.EncryptIndex*
  commentId: Overload:Global.InGameTranslator.LanguageID.EncryptIndex
  isExternal: true
  href: Global.InGameTranslator.LanguageID.html#InGameTranslator_LanguageID_EncryptIndex_InGameTranslator_LanguageID_
  name: EncryptIndex
  nameWithType: InGameTranslator.LanguageID.EncryptIndex
  fullName: InGameTranslator.LanguageID.EncryptIndex
- uid: Global.InGameTranslator.LanguageID.UsesCapitals*
  commentId: Overload:Global.InGameTranslator.LanguageID.UsesCapitals
  isExternal: true
  href: Global.InGameTranslator.LanguageID.html#InGameTranslator_LanguageID_UsesCapitals_InGameTranslator_LanguageID_
  name: UsesCapitals
  nameWithType: InGameTranslator.LanguageID.UsesCapitals
  fullName: InGameTranslator.LanguageID.UsesCapitals
- uid: Global.InGameTranslator.LanguageID.UsesLargeFont*
  commentId: Overload:Global.InGameTranslator.LanguageID.UsesLargeFont
  isExternal: true
  href: Global.InGameTranslator.LanguageID.html#InGameTranslator_LanguageID_UsesLargeFont_InGameTranslator_LanguageID_
  name: UsesLargeFont
  nameWithType: InGameTranslator.LanguageID.UsesLargeFont
  fullName: InGameTranslator.LanguageID.UsesLargeFont
- uid: Global.InGameTranslator.LanguageID.UsesSpaces*
  commentId: Overload:Global.InGameTranslator.LanguageID.UsesSpaces
  isExternal: true
  href: Global.InGameTranslator.LanguageID.html#InGameTranslator_LanguageID_UsesSpaces_InGameTranslator_LanguageID_
  name: UsesSpaces
  nameWithType: InGameTranslator.LanguageID.UsesSpaces
  fullName: InGameTranslator.LanguageID.UsesSpaces
- uid: Global.InGameTranslator.LanguageID.WordWrappingAllowed*
  commentId: Overload:Global.InGameTranslator.LanguageID.WordWrappingAllowed
  isExternal: true
  href: Global.InGameTranslator.LanguageID.html#InGameTranslator_LanguageID_WordWrappingAllowed_InGameTranslator_LanguageID_
  name: WordWrappingAllowed
  nameWithType: InGameTranslator.LanguageID.WordWrappingAllowed
  fullName: InGameTranslator.LanguageID.WordWrappingAllowed
