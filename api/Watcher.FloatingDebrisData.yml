### YamlMime:ManagedReference
items:
- uid: Watcher.FloatingDebrisData
  commentId: T:Watcher.FloatingDebrisData
  id: FloatingDebrisData
  parent: Watcher
  children:
  - Watcher.FloatingDebrisData.#ctor(PlacedObject)
  - Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single)
  - Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)
  - Watcher.FloatingDebrisData.AddControlPointLeft
  - Watcher.FloatingDebrisData.AddControlPointRight
  - Watcher.FloatingDebrisData.ClearControlPoints
  - Watcher.FloatingDebrisData.ConPos(System.Int32)
  - Watcher.FloatingDebrisData.FromString(System.String)
  - Watcher.FloatingDebrisData.RemoveControlPointLeft
  - Watcher.FloatingDebrisData.RemoveControlPointRight
  - Watcher.FloatingDebrisData.ToString
  - Watcher.FloatingDebrisData.controlPointDepthOffset
  - Watcher.FloatingDebrisData.controlPointExtraOffset
  - Watcher.FloatingDebrisData.controlPointOffsetAmount
  - Watcher.FloatingDebrisData.controlPointPosX
  - Watcher.FloatingDebrisData.controlPointPosY
  - Watcher.FloatingDebrisData.controlPointScaleOffset
  - Watcher.FloatingDebrisData.depthFar
  - Watcher.FloatingDebrisData.depthNear
  - Watcher.FloatingDebrisData.movement
  - Watcher.FloatingDebrisData.numberOfFloaters
  - Watcher.FloatingDebrisData.obj
  - Watcher.FloatingDebrisData.panelPos
  - Watcher.FloatingDebrisData.rippleLayer
  - Watcher.FloatingDebrisData.scaleMaximum
  - Watcher.FloatingDebrisData.scaleMinimum
  - Watcher.FloatingDebrisData.seed
  - Watcher.FloatingDebrisData.type
  langs:
  - csharp
  - vb
  name: FloatingDebrisData
  nameWithType: FloatingDebrisData
  fullName: Watcher.FloatingDebrisData
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.FloatingDebrisData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class FloatingDebrisData : PlacedObject.Data'
    content.vb: Public Class FloatingDebrisData Inherits PlacedObject.Data
  inheritance:
  - System.Object
  - Global.PlacedObject.Data
  inheritedMembers:
  - Global.PlacedObject.Data.owner
  - Global.PlacedObject.Data.unrecognizedAttributes
  - Global.PlacedObject.Data.RefreshLiveVisuals
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.FloatingDebrisData.obj
  commentId: F:Watcher.FloatingDebrisData.obj
  id: obj
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: obj
  nameWithType: FloatingDebrisData.obj
  fullName: Watcher.FloatingDebrisData.obj
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.obj</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FloatingDebris obj
    return:
      type: Watcher.FloatingDebris
    content.vb: Public obj As FloatingDebris
- uid: Watcher.FloatingDebrisData.panelPos
  commentId: F:Watcher.FloatingDebrisData.panelPos
  id: panelPos
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: panelPos
  nameWithType: FloatingDebrisData.panelPos
  fullName: Watcher.FloatingDebrisData.panelPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.panelPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 panelPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public panelPos As Vector2
- uid: Watcher.FloatingDebrisData.seed
  commentId: F:Watcher.FloatingDebrisData.seed
  id: seed
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: seed
  nameWithType: FloatingDebrisData.seed
  fullName: Watcher.FloatingDebrisData.seed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.seed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int seed
    return:
      type: System.Int32
    content.vb: Public seed As Integer
- uid: Watcher.FloatingDebrisData.numberOfFloaters
  commentId: F:Watcher.FloatingDebrisData.numberOfFloaters
  id: numberOfFloaters
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: numberOfFloaters
  nameWithType: FloatingDebrisData.numberOfFloaters
  fullName: Watcher.FloatingDebrisData.numberOfFloaters
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.numberOfFloaters</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int numberOfFloaters
    return:
      type: System.Int32
    content.vb: Public numberOfFloaters As Integer
- uid: Watcher.FloatingDebrisData.movement
  commentId: F:Watcher.FloatingDebrisData.movement
  id: movement
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: movement
  nameWithType: FloatingDebrisData.movement
  fullName: Watcher.FloatingDebrisData.movement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.movement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float movement
    return:
      type: System.Single
    content.vb: Public movement As Single
- uid: Watcher.FloatingDebrisData.type
  commentId: F:Watcher.FloatingDebrisData.type
  id: type
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: type
  nameWithType: FloatingDebrisData.type
  fullName: Watcher.FloatingDebrisData.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string type
    return:
      type: System.String
    content.vb: Public type As String
- uid: Watcher.FloatingDebrisData.rippleLayer
  commentId: F:Watcher.FloatingDebrisData.rippleLayer
  id: rippleLayer
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: rippleLayer
  nameWithType: FloatingDebrisData.rippleLayer
  fullName: Watcher.FloatingDebrisData.rippleLayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.rippleLayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int rippleLayer
    return:
      type: System.Int32
    content.vb: Public rippleLayer As Integer
- uid: Watcher.FloatingDebrisData.controlPointPosX
  commentId: F:Watcher.FloatingDebrisData.controlPointPosX
  id: controlPointPosX
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: controlPointPosX
  nameWithType: FloatingDebrisData.controlPointPosX
  fullName: Watcher.FloatingDebrisData.controlPointPosX
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.controlPointPosX</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<float> controlPointPosX
    return:
      type: System.Collections.Generic.List{System.Single}
    content.vb: Public controlPointPosX As List(Of Single)
- uid: Watcher.FloatingDebrisData.controlPointPosY
  commentId: F:Watcher.FloatingDebrisData.controlPointPosY
  id: controlPointPosY
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: controlPointPosY
  nameWithType: FloatingDebrisData.controlPointPosY
  fullName: Watcher.FloatingDebrisData.controlPointPosY
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.controlPointPosY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<float> controlPointPosY
    return:
      type: System.Collections.Generic.List{System.Single}
    content.vb: Public controlPointPosY As List(Of Single)
- uid: Watcher.FloatingDebrisData.controlPointOffsetAmount
  commentId: F:Watcher.FloatingDebrisData.controlPointOffsetAmount
  id: controlPointOffsetAmount
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: controlPointOffsetAmount
  nameWithType: FloatingDebrisData.controlPointOffsetAmount
  fullName: Watcher.FloatingDebrisData.controlPointOffsetAmount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.controlPointOffsetAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<float> controlPointOffsetAmount
    return:
      type: System.Collections.Generic.List{System.Single}
    content.vb: Public controlPointOffsetAmount As List(Of Single)
- uid: Watcher.FloatingDebrisData.controlPointDepthOffset
  commentId: F:Watcher.FloatingDebrisData.controlPointDepthOffset
  id: controlPointDepthOffset
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: controlPointDepthOffset
  nameWithType: FloatingDebrisData.controlPointDepthOffset
  fullName: Watcher.FloatingDebrisData.controlPointDepthOffset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.controlPointDepthOffset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<float> controlPointDepthOffset
    return:
      type: System.Collections.Generic.List{System.Single}
    content.vb: Public controlPointDepthOffset As List(Of Single)
- uid: Watcher.FloatingDebrisData.controlPointScaleOffset
  commentId: F:Watcher.FloatingDebrisData.controlPointScaleOffset
  id: controlPointScaleOffset
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: controlPointScaleOffset
  nameWithType: FloatingDebrisData.controlPointScaleOffset
  fullName: Watcher.FloatingDebrisData.controlPointScaleOffset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.controlPointScaleOffset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<float> controlPointScaleOffset
    return:
      type: System.Collections.Generic.List{System.Single}
    content.vb: Public controlPointScaleOffset As List(Of Single)
- uid: Watcher.FloatingDebrisData.controlPointExtraOffset
  commentId: F:Watcher.FloatingDebrisData.controlPointExtraOffset
  id: controlPointExtraOffset
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: controlPointExtraOffset
  nameWithType: FloatingDebrisData.controlPointExtraOffset
  fullName: Watcher.FloatingDebrisData.controlPointExtraOffset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebrisData.controlPointExtraOffset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Vector4> controlPointExtraOffset
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector4}
    content.vb: Public controlPointExtraOffset As List(Of Vector4)
- uid: Watcher.FloatingDebrisData.ConPos(System.Int32)
  commentId: M:Watcher.FloatingDebrisData.ConPos(System.Int32)
  id: ConPos(System.Int32)
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: ConPos(int)
  nameWithType: FloatingDebrisData.ConPos(int)
  fullName: Watcher.FloatingDebrisData.ConPos(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FloatingDebrisData.ConPos(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 ConPos(int i)
    parameters:
    - id: i
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:Watcher.FloatingDebrisData.ConPos(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.FloatingDebrisData.ConPos(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ConPos(i As Integer) As Vector2
  overload: Watcher.FloatingDebrisData.ConPos*
  nameWithType.vb: FloatingDebrisData.ConPos(Integer)
  fullName.vb: Watcher.FloatingDebrisData.ConPos(Integer)
  name.vb: ConPos(Integer)
- uid: Watcher.FloatingDebrisData.#ctor(PlacedObject)
  commentId: M:Watcher.FloatingDebrisData.#ctor(PlacedObject)
  id: '#ctor(PlacedObject)'
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: FloatingDebrisData(PlacedObject)
  nameWithType: FloatingDebrisData.FloatingDebrisData(PlacedObject)
  fullName: Watcher.FloatingDebrisData.FloatingDebrisData(PlacedObject)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.FloatingDebrisData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FloatingDebrisData(PlacedObject owner)
    parameters:
    - id: owner
      type: Global.PlacedObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Watcher.FloatingDebrisData.#ctor(PlacedObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As PlacedObject)
  overload: Watcher.FloatingDebrisData.#ctor*
  nameWithType.vb: FloatingDebrisData.New(PlacedObject)
  fullName.vb: Watcher.FloatingDebrisData.New(PlacedObject)
  name.vb: New(PlacedObject)
- uid: Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)
  commentId: M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)
  id: AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: AddControlPoint(float, float, float, float, float, Vector4)
  nameWithType: FloatingDebrisData.AddControlPoint(float, float, float, float, float, Vector4)
  fullName: Watcher.FloatingDebrisData.AddControlPoint(float, float, float, float, float, UnityEngine.Vector4)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddControlPoint(float x, float y, float offsetAmount, float depthOffset, float scaleOffset, Vector4 extraOffsets)
    parameters:
    - id: x
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)</parameter>
          </include>
        </markup>
    - id: offsetAmount
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetAmount</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)</parameter>
          </include>
        </markup>
    - id: depthOffset
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>depthOffset</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)</parameter>
          </include>
        </markup>
    - id: scaleOffset
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>scaleOffset</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)</parameter>
          </include>
        </markup>
    - id: extraOffsets
      type: UnityEngine.Vector4
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>extraOffsets</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddControlPoint(x As Single, y As Single, offsetAmount As Single, depthOffset As Single, scaleOffset As Single, extraOffsets As Vector4)
  overload: Watcher.FloatingDebrisData.AddControlPoint*
  nameWithType.vb: FloatingDebrisData.AddControlPoint(Single, Single, Single, Single, Single, Vector4)
  fullName.vb: Watcher.FloatingDebrisData.AddControlPoint(Single, Single, Single, Single, Single, UnityEngine.Vector4)
  name.vb: AddControlPoint(Single, Single, Single, Single, Single, Vector4)
- uid: Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single)
  id: AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: AddControlPoint(float, float, float, float, float)
  nameWithType: FloatingDebrisData.AddControlPoint(float, float, float, float, float)
  fullName: Watcher.FloatingDebrisData.AddControlPoint(float, float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddControlPoint(float x, float y, float offsetAmount, float depthOffset, float scaleOffset)
    parameters:
    - id: x
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetAmount
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetAmount</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: depthOffset
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>depthOffset</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: scaleOffset
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>scaleOffset</parameter>
            <parameter>M:Watcher.FloatingDebrisData.AddControlPoint(System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddControlPoint(x As Single, y As Single, offsetAmount As Single, depthOffset As Single, scaleOffset As Single)
  overload: Watcher.FloatingDebrisData.AddControlPoint*
  nameWithType.vb: FloatingDebrisData.AddControlPoint(Single, Single, Single, Single, Single)
  fullName.vb: Watcher.FloatingDebrisData.AddControlPoint(Single, Single, Single, Single, Single)
  name.vb: AddControlPoint(Single, Single, Single, Single, Single)
- uid: Watcher.FloatingDebrisData.AddControlPointRight
  commentId: M:Watcher.FloatingDebrisData.AddControlPointRight
  id: AddControlPointRight
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: AddControlPointRight()
  nameWithType: FloatingDebrisData.AddControlPointRight()
  fullName: Watcher.FloatingDebrisData.AddControlPointRight()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FloatingDebrisData.AddControlPointRight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddControlPointRight()
    content.vb: Public Sub AddControlPointRight()
  overload: Watcher.FloatingDebrisData.AddControlPointRight*
- uid: Watcher.FloatingDebrisData.AddControlPointLeft
  commentId: M:Watcher.FloatingDebrisData.AddControlPointLeft
  id: AddControlPointLeft
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: AddControlPointLeft()
  nameWithType: FloatingDebrisData.AddControlPointLeft()
  fullName: Watcher.FloatingDebrisData.AddControlPointLeft()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FloatingDebrisData.AddControlPointLeft</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddControlPointLeft()
    content.vb: Public Sub AddControlPointLeft()
  overload: Watcher.FloatingDebrisData.AddControlPointLeft*
- uid: Watcher.FloatingDebrisData.RemoveControlPointRight
  commentId: M:Watcher.FloatingDebrisData.RemoveControlPointRight
  id: RemoveControlPointRight
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: RemoveControlPointRight()
  nameWithType: FloatingDebrisData.RemoveControlPointRight()
  fullName: Watcher.FloatingDebrisData.RemoveControlPointRight()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FloatingDebrisData.RemoveControlPointRight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveControlPointRight()
    content.vb: Public Sub RemoveControlPointRight()
  overload: Watcher.FloatingDebrisData.RemoveControlPointRight*
- uid: Watcher.FloatingDebrisData.RemoveControlPointLeft
  commentId: M:Watcher.FloatingDebrisData.RemoveControlPointLeft
  id: RemoveControlPointLeft
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: RemoveControlPointLeft()
  nameWithType: FloatingDebrisData.RemoveControlPointLeft()
  fullName: Watcher.FloatingDebrisData.RemoveControlPointLeft()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FloatingDebrisData.RemoveControlPointLeft</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveControlPointLeft()
    content.vb: Public Sub RemoveControlPointLeft()
  overload: Watcher.FloatingDebrisData.RemoveControlPointLeft*
- uid: Watcher.FloatingDebrisData.ClearControlPoints
  commentId: M:Watcher.FloatingDebrisData.ClearControlPoints
  id: ClearControlPoints
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: ClearControlPoints()
  nameWithType: FloatingDebrisData.ClearControlPoints()
  fullName: Watcher.FloatingDebrisData.ClearControlPoints()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FloatingDebrisData.ClearControlPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ClearControlPoints()
    content.vb: Public Sub ClearControlPoints()
  overload: Watcher.FloatingDebrisData.ClearControlPoints*
- uid: Watcher.FloatingDebrisData.FromString(System.String)
  commentId: M:Watcher.FloatingDebrisData.FromString(System.String)
  id: FromString(System.String)
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: FromString(string)
  nameWithType: FloatingDebrisData.FromString(string)
  fullName: Watcher.FloatingDebrisData.FromString(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FloatingDebrisData.FromString(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void FromString(string s)
    parameters:
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:Watcher.FloatingDebrisData.FromString(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub FromString(s As String)
  overridden: Global.PlacedObject.Data.FromString(System.String)
  overload: Watcher.FloatingDebrisData.FromString*
  nameWithType.vb: FloatingDebrisData.FromString(String)
  fullName.vb: Watcher.FloatingDebrisData.FromString(String)
  name.vb: FromString(String)
- uid: Watcher.FloatingDebrisData.ToString
  commentId: M:Watcher.FloatingDebrisData.ToString
  id: ToString
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FloatingDebrisData.ToString()
  fullName: Watcher.FloatingDebrisData.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FloatingDebrisData.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.FloatingDebrisData.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: Global.PlacedObject.Data.ToString
  overload: Watcher.FloatingDebrisData.ToString*
- uid: Watcher.FloatingDebrisData.depthNear
  commentId: P:Watcher.FloatingDebrisData.depthNear
  id: depthNear
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: depthNear
  nameWithType: FloatingDebrisData.depthNear
  fullName: Watcher.FloatingDebrisData.depthNear
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FloatingDebrisData.depthNear</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int depthNear { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property depthNear As Integer
  overload: Watcher.FloatingDebrisData.depthNear*
- uid: Watcher.FloatingDebrisData.depthFar
  commentId: P:Watcher.FloatingDebrisData.depthFar
  id: depthFar
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: depthFar
  nameWithType: FloatingDebrisData.depthFar
  fullName: Watcher.FloatingDebrisData.depthFar
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FloatingDebrisData.depthFar</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int depthFar { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property depthFar As Integer
  overload: Watcher.FloatingDebrisData.depthFar*
- uid: Watcher.FloatingDebrisData.scaleMinimum
  commentId: P:Watcher.FloatingDebrisData.scaleMinimum
  id: scaleMinimum
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: scaleMinimum
  nameWithType: FloatingDebrisData.scaleMinimum
  fullName: Watcher.FloatingDebrisData.scaleMinimum
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FloatingDebrisData.scaleMinimum</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float scaleMinimum { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property scaleMinimum As Single
  overload: Watcher.FloatingDebrisData.scaleMinimum*
- uid: Watcher.FloatingDebrisData.scaleMaximum
  commentId: P:Watcher.FloatingDebrisData.scaleMaximum
  id: scaleMaximum
  parent: Watcher.FloatingDebrisData
  langs:
  - csharp
  - vb
  name: scaleMaximum
  nameWithType: FloatingDebrisData.scaleMaximum
  fullName: Watcher.FloatingDebrisData.scaleMaximum
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FloatingDebrisData.scaleMaximum</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float scaleMaximum { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property scaleMaximum As Single
  overload: Watcher.FloatingDebrisData.scaleMaximum*
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.PlacedObject.Data
  commentId: T:Global.PlacedObject.Data
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject.Data
  nameWithType: PlacedObject.Data
  fullName: PlacedObject.Data
  spec.csharp:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.Data
    name: Data
    isExternal: true
    href: PlacedObject.Data.html
  spec.vb:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.Data
    name: Data
    isExternal: true
    href: PlacedObject.Data.html
- uid: Global.PlacedObject.Data.owner
  commentId: F:Global.PlacedObject.Data.owner
  parent: Global.PlacedObject.Data
  isExternal: true
  href: Global.PlacedObject.Data.html#PlacedObject_Data_owner
  name: owner
  nameWithType: PlacedObject.Data.owner
  fullName: PlacedObject.Data.owner
- uid: Global.PlacedObject.Data.unrecognizedAttributes
  commentId: F:Global.PlacedObject.Data.unrecognizedAttributes
  parent: Global.PlacedObject.Data
  isExternal: true
  href: Global.PlacedObject.Data.html#PlacedObject_Data_unrecognizedAttributes
  name: unrecognizedAttributes
  nameWithType: PlacedObject.Data.unrecognizedAttributes
  fullName: PlacedObject.Data.unrecognizedAttributes
- uid: Global.PlacedObject.Data.RefreshLiveVisuals
  commentId: M:Global.PlacedObject.Data.RefreshLiveVisuals
  parent: Global.PlacedObject.Data
  isExternal: true
  href: Global.PlacedObject.Data.html#PlacedObject_Data_RefreshLiveVisuals
  name: RefreshLiveVisuals()
  nameWithType: PlacedObject.Data.RefreshLiveVisuals()
  fullName: PlacedObject.Data.RefreshLiveVisuals()
  spec.csharp:
  - uid: Global.PlacedObject.Data.RefreshLiveVisuals
    name: RefreshLiveVisuals
    isExternal: true
    href: Global.PlacedObject.Data.html#PlacedObject_Data_RefreshLiveVisuals
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PlacedObject.Data.RefreshLiveVisuals
    name: RefreshLiveVisuals
    isExternal: true
    href: Global.PlacedObject.Data.html#PlacedObject_Data_RefreshLiveVisuals
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Watcher.FloatingDebris
  commentId: T:Watcher.FloatingDebris
  parent: Watcher
  isExternal: true
  href: Watcher.FloatingDebris.html
  name: FloatingDebris
  nameWithType: FloatingDebris
  fullName: Watcher.FloatingDebris
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{System.Single}
  commentId: T:System.Collections.Generic.List{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<float>
  nameWithType: List<float>
  fullName: System.Collections.Generic.List<float>
  nameWithType.vb: List(Of Single)
  fullName.vb: System.Collections.Generic.List(Of Single)
  name.vb: List(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{UnityEngine.Vector4}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector4}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector4>
  nameWithType: List<Vector4>
  fullName: System.Collections.Generic.List<UnityEngine.Vector4>
  nameWithType.vb: List(Of Vector4)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector4)
  name.vb: List(Of Vector4)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector4
    name: Vector4
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector4
    name: Vector4
    isExternal: true
  - name: )
- uid: Watcher.FloatingDebrisData.ConPos*
  commentId: Overload:Watcher.FloatingDebrisData.ConPos
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_ConPos_System_Int32_
  name: ConPos
  nameWithType: FloatingDebrisData.ConPos
  fullName: Watcher.FloatingDebrisData.ConPos
- uid: Watcher.FloatingDebrisData.#ctor*
  commentId: Overload:Watcher.FloatingDebrisData.#ctor
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData__ctor_PlacedObject_
  name: FloatingDebrisData
  nameWithType: FloatingDebrisData.FloatingDebrisData
  fullName: Watcher.FloatingDebrisData.FloatingDebrisData
  nameWithType.vb: FloatingDebrisData.New
  fullName.vb: Watcher.FloatingDebrisData.New
  name.vb: New
- uid: Global.PlacedObject
  commentId: T:Global.PlacedObject
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject
  nameWithType: PlacedObject
  fullName: PlacedObject
- uid: Watcher.FloatingDebrisData.AddControlPoint*
  commentId: Overload:Watcher.FloatingDebrisData.AddControlPoint
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_AddControlPoint_System_Single_System_Single_System_Single_System_Single_System_Single_UnityEngine_Vector4_
  name: AddControlPoint
  nameWithType: FloatingDebrisData.AddControlPoint
  fullName: Watcher.FloatingDebrisData.AddControlPoint
- uid: UnityEngine.Vector4
  isExternal: true
  name: Vector4
  nameWithType: Vector4
  fullName: UnityEngine.Vector4
- uid: Watcher.FloatingDebrisData.AddControlPointRight*
  commentId: Overload:Watcher.FloatingDebrisData.AddControlPointRight
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_AddControlPointRight
  name: AddControlPointRight
  nameWithType: FloatingDebrisData.AddControlPointRight
  fullName: Watcher.FloatingDebrisData.AddControlPointRight
- uid: Watcher.FloatingDebrisData.AddControlPointLeft*
  commentId: Overload:Watcher.FloatingDebrisData.AddControlPointLeft
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_AddControlPointLeft
  name: AddControlPointLeft
  nameWithType: FloatingDebrisData.AddControlPointLeft
  fullName: Watcher.FloatingDebrisData.AddControlPointLeft
- uid: Watcher.FloatingDebrisData.RemoveControlPointRight*
  commentId: Overload:Watcher.FloatingDebrisData.RemoveControlPointRight
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_RemoveControlPointRight
  name: RemoveControlPointRight
  nameWithType: FloatingDebrisData.RemoveControlPointRight
  fullName: Watcher.FloatingDebrisData.RemoveControlPointRight
- uid: Watcher.FloatingDebrisData.RemoveControlPointLeft*
  commentId: Overload:Watcher.FloatingDebrisData.RemoveControlPointLeft
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_RemoveControlPointLeft
  name: RemoveControlPointLeft
  nameWithType: FloatingDebrisData.RemoveControlPointLeft
  fullName: Watcher.FloatingDebrisData.RemoveControlPointLeft
- uid: Watcher.FloatingDebrisData.ClearControlPoints*
  commentId: Overload:Watcher.FloatingDebrisData.ClearControlPoints
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_ClearControlPoints
  name: ClearControlPoints
  nameWithType: FloatingDebrisData.ClearControlPoints
  fullName: Watcher.FloatingDebrisData.ClearControlPoints
- uid: Global.PlacedObject.Data.FromString(System.String)
  commentId: M:Global.PlacedObject.Data.FromString(System.String)
  parent: Global.PlacedObject.Data
  isExternal: true
  href: Global.PlacedObject.Data.html#PlacedObject_Data_FromString_System_String_
  name: FromString(string)
  nameWithType: PlacedObject.Data.FromString(string)
  fullName: PlacedObject.Data.FromString(string)
  nameWithType.vb: PlacedObject.Data.FromString(String)
  fullName.vb: PlacedObject.Data.FromString(String)
  name.vb: FromString(String)
  spec.csharp:
  - uid: Global.PlacedObject.Data.FromString(System.String)
    name: FromString
    isExternal: true
    href: Global.PlacedObject.Data.html#PlacedObject_Data_FromString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Global.PlacedObject.Data.FromString(System.String)
    name: FromString
    isExternal: true
    href: Global.PlacedObject.Data.html#PlacedObject_Data_FromString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Watcher.FloatingDebrisData.FromString*
  commentId: Overload:Watcher.FloatingDebrisData.FromString
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_FromString_System_String_
  name: FromString
  nameWithType: FloatingDebrisData.FromString
  fullName: Watcher.FloatingDebrisData.FromString
- uid: Global.PlacedObject.Data.ToString
  commentId: M:Global.PlacedObject.Data.ToString
  parent: Global.PlacedObject.Data
  isExternal: true
  href: Global.PlacedObject.Data.html#PlacedObject_Data_ToString
  name: ToString()
  nameWithType: PlacedObject.Data.ToString()
  fullName: PlacedObject.Data.ToString()
  spec.csharp:
  - uid: Global.PlacedObject.Data.ToString
    name: ToString
    isExternal: true
    href: Global.PlacedObject.Data.html#PlacedObject_Data_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PlacedObject.Data.ToString
    name: ToString
    isExternal: true
    href: Global.PlacedObject.Data.html#PlacedObject_Data_ToString
  - name: (
  - name: )
- uid: Watcher.FloatingDebrisData.ToString*
  commentId: Overload:Watcher.FloatingDebrisData.ToString
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_ToString
  name: ToString
  nameWithType: FloatingDebrisData.ToString
  fullName: Watcher.FloatingDebrisData.ToString
- uid: Watcher.FloatingDebrisData.depthNear*
  commentId: Overload:Watcher.FloatingDebrisData.depthNear
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_depthNear
  name: depthNear
  nameWithType: FloatingDebrisData.depthNear
  fullName: Watcher.FloatingDebrisData.depthNear
- uid: Watcher.FloatingDebrisData.depthFar*
  commentId: Overload:Watcher.FloatingDebrisData.depthFar
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_depthFar
  name: depthFar
  nameWithType: FloatingDebrisData.depthFar
  fullName: Watcher.FloatingDebrisData.depthFar
- uid: Watcher.FloatingDebrisData.scaleMinimum*
  commentId: Overload:Watcher.FloatingDebrisData.scaleMinimum
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_scaleMinimum
  name: scaleMinimum
  nameWithType: FloatingDebrisData.scaleMinimum
  fullName: Watcher.FloatingDebrisData.scaleMinimum
- uid: Watcher.FloatingDebrisData.scaleMaximum*
  commentId: Overload:Watcher.FloatingDebrisData.scaleMaximum
  isExternal: true
  href: Watcher.FloatingDebrisData.html#Watcher_FloatingDebrisData_scaleMaximum
  name: scaleMaximum
  nameWithType: FloatingDebrisData.scaleMaximum
  fullName: Watcher.FloatingDebrisData.scaleMaximum
