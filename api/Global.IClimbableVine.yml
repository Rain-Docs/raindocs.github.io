### YamlMime:ManagedReference
items:
- uid: Global.IClimbableVine
  commentId: T:Global.IClimbableVine
  id: IClimbableVine
  parent: Global
  children:
  - Global.IClimbableVine.BeingClimbedOn(Creature)
  - Global.IClimbableVine.CurrentlyClimbable
  - Global.IClimbableVine.Mass(System.Int32)
  - Global.IClimbableVine.Pos(System.Int32)
  - Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  - Global.IClimbableVine.Rad(System.Int32)
  - Global.IClimbableVine.TotalPositions
  langs:
  - csharp
  - vb
  name: IClimbableVine
  nameWithType: IClimbableVine
  fullName: IClimbableVine
  type: Interface
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:IClimbableVine</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public interface IClimbableVine
    content.vb: Public Interface IClimbableVine
- uid: Global.IClimbableVine.TotalPositions
  commentId: M:Global.IClimbableVine.TotalPositions
  id: TotalPositions
  parent: Global.IClimbableVine
  langs:
  - csharp
  - vb
  name: TotalPositions()
  nameWithType: IClimbableVine.TotalPositions()
  fullName: IClimbableVine.TotalPositions()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IClimbableVine.TotalPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: int TotalPositions()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IClimbableVine.TotalPositions</parameter>
          </include>
        </markup>
    content.vb: Function TotalPositions() As Integer
  overload: Global.IClimbableVine.TotalPositions*
- uid: Global.IClimbableVine.Pos(System.Int32)
  commentId: M:Global.IClimbableVine.Pos(System.Int32)
  id: Pos(System.Int32)
  parent: Global.IClimbableVine
  langs:
  - csharp
  - vb
  name: Pos(int)
  nameWithType: IClimbableVine.Pos(int)
  fullName: IClimbableVine.Pos(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IClimbableVine.Pos(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: Vector2 Pos(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:IClimbableVine.Pos(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IClimbableVine.Pos(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Function Pos(index As Integer) As Vector2
  overload: Global.IClimbableVine.Pos*
  nameWithType.vb: IClimbableVine.Pos(Integer)
  fullName.vb: IClimbableVine.Pos(Integer)
  name.vb: Pos(Integer)
- uid: Global.IClimbableVine.Rad(System.Int32)
  commentId: M:Global.IClimbableVine.Rad(System.Int32)
  id: Rad(System.Int32)
  parent: Global.IClimbableVine
  langs:
  - csharp
  - vb
  name: Rad(int)
  nameWithType: IClimbableVine.Rad(int)
  fullName: IClimbableVine.Rad(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IClimbableVine.Rad(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: float Rad(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:IClimbableVine.Rad(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IClimbableVine.Rad(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Function Rad(index As Integer) As Single
  overload: Global.IClimbableVine.Rad*
  nameWithType.vb: IClimbableVine.Rad(Integer)
  fullName.vb: IClimbableVine.Rad(Integer)
  name.vb: Rad(Integer)
- uid: Global.IClimbableVine.Mass(System.Int32)
  commentId: M:Global.IClimbableVine.Mass(System.Int32)
  id: Mass(System.Int32)
  parent: Global.IClimbableVine
  langs:
  - csharp
  - vb
  name: Mass(int)
  nameWithType: IClimbableVine.Mass(int)
  fullName: IClimbableVine.Mass(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IClimbableVine.Mass(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: float Mass(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:IClimbableVine.Mass(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IClimbableVine.Mass(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Function Mass(index As Integer) As Single
  overload: Global.IClimbableVine.Mass*
  nameWithType.vb: IClimbableVine.Mass(Integer)
  fullName.vb: IClimbableVine.Mass(Integer)
  name.vb: Mass(Integer)
- uid: Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  commentId: M:Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  id: Push(System.Int32,UnityEngine.Vector2)
  parent: Global.IClimbableVine
  langs:
  - csharp
  - vb
  name: Push(int, Vector2)
  nameWithType: IClimbableVine.Push(int, Vector2)
  fullName: IClimbableVine.Push(int, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IClimbableVine.Push(System.Int32,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: void Push(int index, Vector2 movement)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:IClimbableVine.Push(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: movement
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>movement</parameter>
            <parameter>M:IClimbableVine.Push(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Sub Push(index As Integer, movement As Vector2)
  overload: Global.IClimbableVine.Push*
  nameWithType.vb: IClimbableVine.Push(Integer, Vector2)
  fullName.vb: IClimbableVine.Push(Integer, UnityEngine.Vector2)
  name.vb: Push(Integer, Vector2)
- uid: Global.IClimbableVine.BeingClimbedOn(Creature)
  commentId: M:Global.IClimbableVine.BeingClimbedOn(Creature)
  id: BeingClimbedOn(Creature)
  parent: Global.IClimbableVine
  langs:
  - csharp
  - vb
  name: BeingClimbedOn(Creature)
  nameWithType: IClimbableVine.BeingClimbedOn(Creature)
  fullName: IClimbableVine.BeingClimbedOn(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IClimbableVine.BeingClimbedOn(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: void BeingClimbedOn(Creature crit)
    parameters:
    - id: crit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:IClimbableVine.BeingClimbedOn(Creature)</parameter>
          </include>
        </markup>
    content.vb: Sub BeingClimbedOn(crit As Creature)
  overload: Global.IClimbableVine.BeingClimbedOn*
- uid: Global.IClimbableVine.CurrentlyClimbable
  commentId: M:Global.IClimbableVine.CurrentlyClimbable
  id: CurrentlyClimbable
  parent: Global.IClimbableVine
  langs:
  - csharp
  - vb
  name: CurrentlyClimbable()
  nameWithType: IClimbableVine.CurrentlyClimbable()
  fullName: IClimbableVine.CurrentlyClimbable()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IClimbableVine.CurrentlyClimbable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: bool CurrentlyClimbable()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IClimbableVine.CurrentlyClimbable</parameter>
          </include>
        </markup>
    content.vb: Function CurrentlyClimbable() As Boolean
  overload: Global.IClimbableVine.CurrentlyClimbable*
references:
- uid: Global
- uid: Global.IClimbableVine.TotalPositions*
  commentId: Overload:Global.IClimbableVine.TotalPositions
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_TotalPositions
  name: TotalPositions
  nameWithType: IClimbableVine.TotalPositions
  fullName: IClimbableVine.TotalPositions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.IClimbableVine.Pos*
  commentId: Overload:Global.IClimbableVine.Pos
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Pos_System_Int32_
  name: Pos
  nameWithType: IClimbableVine.Pos
  fullName: IClimbableVine.Pos
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.IClimbableVine.Rad*
  commentId: Overload:Global.IClimbableVine.Rad
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Rad_System_Int32_
  name: Rad
  nameWithType: IClimbableVine.Rad
  fullName: IClimbableVine.Rad
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.IClimbableVine.Mass*
  commentId: Overload:Global.IClimbableVine.Mass
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Mass_System_Int32_
  name: Mass
  nameWithType: IClimbableVine.Mass
  fullName: IClimbableVine.Mass
- uid: Global.IClimbableVine.Push*
  commentId: Overload:Global.IClimbableVine.Push
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Push_System_Int32_UnityEngine_Vector2_
  name: Push
  nameWithType: IClimbableVine.Push
  fullName: IClimbableVine.Push
- uid: Global.IClimbableVine.BeingClimbedOn*
  commentId: Overload:Global.IClimbableVine.BeingClimbedOn
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_BeingClimbedOn_Creature_
  name: BeingClimbedOn
  nameWithType: IClimbableVine.BeingClimbedOn
  fullName: IClimbableVine.BeingClimbedOn
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.IClimbableVine.CurrentlyClimbable*
  commentId: Overload:Global.IClimbableVine.CurrentlyClimbable
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_CurrentlyClimbable
  name: CurrentlyClimbable
  nameWithType: IClimbableVine.CurrentlyClimbable
  fullName: IClimbableVine.CurrentlyClimbable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
