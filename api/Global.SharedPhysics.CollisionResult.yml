### YamlMime:ManagedReference
items:
- uid: Global.SharedPhysics.CollisionResult
  commentId: T:Global.SharedPhysics.CollisionResult
  id: SharedPhysics.CollisionResult
  parent: Global
  children:
  - Global.SharedPhysics.CollisionResult.#ctor(PhysicalObject,BodyChunk,PhysicalObject.Appendage.Pos,System.Boolean,UnityEngine.Vector2)
  - Global.SharedPhysics.CollisionResult.chunk
  - Global.SharedPhysics.CollisionResult.collisionPoint
  - Global.SharedPhysics.CollisionResult.hitSomething
  - Global.SharedPhysics.CollisionResult.obj
  - Global.SharedPhysics.CollisionResult.onAppendagePos
  langs:
  - csharp
  - vb
  name: SharedPhysics.CollisionResult
  nameWithType: SharedPhysics.CollisionResult
  fullName: SharedPhysics.CollisionResult
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SharedPhysics.CollisionResult</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct SharedPhysics.CollisionResult
    content.vb: Public Structure SharedPhysics.CollisionResult
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.SharedPhysics.CollisionResult.obj
  commentId: F:Global.SharedPhysics.CollisionResult.obj
  id: obj
  parent: Global.SharedPhysics.CollisionResult
  langs:
  - csharp
  - vb
  name: obj
  nameWithType: SharedPhysics.CollisionResult.obj
  fullName: SharedPhysics.CollisionResult.obj
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SharedPhysics.CollisionResult.obj</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject obj
    return:
      type: Global.PhysicalObject
    content.vb: Public obj As PhysicalObject
- uid: Global.SharedPhysics.CollisionResult.chunk
  commentId: F:Global.SharedPhysics.CollisionResult.chunk
  id: chunk
  parent: Global.SharedPhysics.CollisionResult
  langs:
  - csharp
  - vb
  name: chunk
  nameWithType: SharedPhysics.CollisionResult.chunk
  fullName: SharedPhysics.CollisionResult.chunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SharedPhysics.CollisionResult.chunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk chunk
    return:
      type: Global.BodyChunk
    content.vb: Public chunk As BodyChunk
- uid: Global.SharedPhysics.CollisionResult.onAppendagePos
  commentId: F:Global.SharedPhysics.CollisionResult.onAppendagePos
  id: onAppendagePos
  parent: Global.SharedPhysics.CollisionResult
  langs:
  - csharp
  - vb
  name: onAppendagePos
  nameWithType: SharedPhysics.CollisionResult.onAppendagePos
  fullName: SharedPhysics.CollisionResult.onAppendagePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SharedPhysics.CollisionResult.onAppendagePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject.Appendage.Pos onAppendagePos
    return:
      type: Global.PhysicalObject.Appendage.Pos
    content.vb: Public onAppendagePos As PhysicalObject.Appendage.Pos
- uid: Global.SharedPhysics.CollisionResult.hitSomething
  commentId: F:Global.SharedPhysics.CollisionResult.hitSomething
  id: hitSomething
  parent: Global.SharedPhysics.CollisionResult
  langs:
  - csharp
  - vb
  name: hitSomething
  nameWithType: SharedPhysics.CollisionResult.hitSomething
  fullName: SharedPhysics.CollisionResult.hitSomething
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SharedPhysics.CollisionResult.hitSomething</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hitSomething
    return:
      type: System.Boolean
    content.vb: Public hitSomething As Boolean
- uid: Global.SharedPhysics.CollisionResult.collisionPoint
  commentId: F:Global.SharedPhysics.CollisionResult.collisionPoint
  id: collisionPoint
  parent: Global.SharedPhysics.CollisionResult
  langs:
  - csharp
  - vb
  name: collisionPoint
  nameWithType: SharedPhysics.CollisionResult.collisionPoint
  fullName: SharedPhysics.CollisionResult.collisionPoint
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SharedPhysics.CollisionResult.collisionPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 collisionPoint
    return:
      type: UnityEngine.Vector2
    content.vb: Public collisionPoint As Vector2
- uid: Global.SharedPhysics.CollisionResult.#ctor(PhysicalObject,BodyChunk,PhysicalObject.Appendage.Pos,System.Boolean,UnityEngine.Vector2)
  commentId: M:Global.SharedPhysics.CollisionResult.#ctor(PhysicalObject,BodyChunk,PhysicalObject.Appendage.Pos,System.Boolean,UnityEngine.Vector2)
  id: '#ctor(PhysicalObject,BodyChunk,PhysicalObject.Appendage.Pos,System.Boolean,UnityEngine.Vector2)'
  parent: Global.SharedPhysics.CollisionResult
  langs:
  - csharp
  - vb
  name: CollisionResult(PhysicalObject, BodyChunk, Pos, bool, Vector2)
  nameWithType: SharedPhysics.CollisionResult.CollisionResult(PhysicalObject, BodyChunk, PhysicalObject.Appendage.Pos, bool, Vector2)
  fullName: SharedPhysics.CollisionResult.CollisionResult(PhysicalObject, BodyChunk, PhysicalObject.Appendage.Pos, bool, UnityEngine.Vector2)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SharedPhysics.CollisionResult</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CollisionResult(PhysicalObject obj, BodyChunk chunk, PhysicalObject.Appendage.Pos onAppendagePos, bool hitSomething, Vector2 collisionPoint)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:SharedPhysics.CollisionResult.#ctor(PhysicalObject,BodyChunk,PhysicalObject.Appendage.Pos,System.Boolean,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:SharedPhysics.CollisionResult.#ctor(PhysicalObject,BodyChunk,PhysicalObject.Appendage.Pos,System.Boolean,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: onAppendagePos
      type: Global.PhysicalObject.Appendage.Pos
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>onAppendagePos</parameter>
            <parameter>M:SharedPhysics.CollisionResult.#ctor(PhysicalObject,BodyChunk,PhysicalObject.Appendage.Pos,System.Boolean,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: hitSomething
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hitSomething</parameter>
            <parameter>M:SharedPhysics.CollisionResult.#ctor(PhysicalObject,BodyChunk,PhysicalObject.Appendage.Pos,System.Boolean,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: collisionPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>collisionPoint</parameter>
            <parameter>M:SharedPhysics.CollisionResult.#ctor(PhysicalObject,BodyChunk,PhysicalObject.Appendage.Pos,System.Boolean,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(obj As PhysicalObject, chunk As BodyChunk, onAppendagePos As PhysicalObject.Appendage.Pos, hitSomething As Boolean, collisionPoint As Vector2)
  overload: Global.SharedPhysics.CollisionResult.#ctor*
  nameWithType.vb: SharedPhysics.CollisionResult.New(PhysicalObject, BodyChunk, PhysicalObject.Appendage.Pos, Boolean, Vector2)
  fullName.vb: SharedPhysics.CollisionResult.New(PhysicalObject, BodyChunk, PhysicalObject.Appendage.Pos, Boolean, UnityEngine.Vector2)
  name.vb: New(PhysicalObject, BodyChunk, Pos, Boolean, Vector2)
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.PhysicalObject.Appendage.Pos
  commentId: T:Global.PhysicalObject.Appendage.Pos
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject.Appendage.Pos
  nameWithType: PhysicalObject.Appendage.Pos
  fullName: PhysicalObject.Appendage.Pos
  spec.csharp:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  spec.vb:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.SharedPhysics.CollisionResult.#ctor*
  commentId: Overload:Global.SharedPhysics.CollisionResult.#ctor
  isExternal: true
  href: Global.SharedPhysics.CollisionResult.html#SharedPhysics_CollisionResult__ctor_PhysicalObject_BodyChunk_PhysicalObject_Appendage_Pos_System_Boolean_UnityEngine_Vector2_
  name: CollisionResult
  nameWithType: SharedPhysics.CollisionResult.CollisionResult
  fullName: SharedPhysics.CollisionResult.CollisionResult
  nameWithType.vb: SharedPhysics.CollisionResult.New
  fullName.vb: SharedPhysics.CollisionResult.New
  name.vb: New
