### YamlMime:ManagedReference
items:
- uid: Global.QuickPath
  commentId: T:Global.QuickPath
  id: QuickPath
  parent: Global
  children:
  - Global.QuickPath.#ctor(CreatureTemplate,PathCost,RWCustom.IntVector2[])
  - Global.QuickPath.Length
  - Global.QuickPath.calculatedFor
  - Global.QuickPath.cost
  - Global.QuickPath.tiles
  langs:
  - csharp
  - vb
  name: QuickPath
  nameWithType: QuickPath
  fullName: QuickPath
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:QuickPath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class QuickPath
    content.vb: Public Class QuickPath
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.QuickPath.calculatedFor
  commentId: F:Global.QuickPath.calculatedFor
  id: calculatedFor
  parent: Global.QuickPath
  langs:
  - csharp
  - vb
  name: calculatedFor
  nameWithType: QuickPath.calculatedFor
  fullName: QuickPath.calculatedFor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:QuickPath.calculatedFor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate calculatedFor
    return:
      type: Global.CreatureTemplate
    content.vb: Public calculatedFor As CreatureTemplate
- uid: Global.QuickPath.cost
  commentId: F:Global.QuickPath.cost
  id: cost
  parent: Global.QuickPath
  langs:
  - csharp
  - vb
  name: cost
  nameWithType: QuickPath.cost
  fullName: QuickPath.cost
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:QuickPath.cost</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost cost
    return:
      type: Global.PathCost
    content.vb: Public cost As PathCost
- uid: Global.QuickPath.tiles
  commentId: F:Global.QuickPath.tiles
  id: tiles
  parent: Global.QuickPath
  langs:
  - csharp
  - vb
  name: tiles
  nameWithType: QuickPath.tiles
  fullName: QuickPath.tiles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:QuickPath.tiles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2[] tiles
    return:
      type: RWCustom.IntVector2[]
    content.vb: Public tiles As IntVector2()
- uid: Global.QuickPath.#ctor(CreatureTemplate,PathCost,RWCustom.IntVector2[])
  commentId: M:Global.QuickPath.#ctor(CreatureTemplate,PathCost,RWCustom.IntVector2[])
  id: '#ctor(CreatureTemplate,PathCost,RWCustom.IntVector2[])'
  parent: Global.QuickPath
  langs:
  - csharp
  - vb
  name: QuickPath(CreatureTemplate, PathCost, IntVector2[])
  nameWithType: QuickPath.QuickPath(CreatureTemplate, PathCost, IntVector2[])
  fullName: QuickPath.QuickPath(CreatureTemplate, PathCost, RWCustom.IntVector2[])
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>QuickPath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public QuickPath(CreatureTemplate calculatedFor, PathCost cost, IntVector2[] tiles)
    parameters:
    - id: calculatedFor
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>calculatedFor</parameter>
            <parameter>M:QuickPath.#ctor(CreatureTemplate,PathCost,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: cost
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cost</parameter>
            <parameter>M:QuickPath.#ctor(CreatureTemplate,PathCost,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: tiles
      type: RWCustom.IntVector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tiles</parameter>
            <parameter>M:QuickPath.#ctor(CreatureTemplate,PathCost,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(calculatedFor As CreatureTemplate, cost As PathCost, tiles As IntVector2())
  overload: Global.QuickPath.#ctor*
  nameWithType.vb: QuickPath.New(CreatureTemplate, PathCost, IntVector2())
  fullName.vb: QuickPath.New(CreatureTemplate, PathCost, RWCustom.IntVector2())
  name.vb: New(CreatureTemplate, PathCost, IntVector2())
- uid: Global.QuickPath.Length
  commentId: P:Global.QuickPath.Length
  id: Length
  parent: Global.QuickPath
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: QuickPath.Length
  fullName: QuickPath.Length
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:QuickPath.Length</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: Global.QuickPath.Length*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.CreatureTemplate
  commentId: T:Global.CreatureTemplate
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate
  nameWithType: CreatureTemplate
  fullName: CreatureTemplate
- uid: Global.PathCost
  commentId: T:Global.PathCost
  isExternal: true
  href: PathCost.html
  name: PathCost
  nameWithType: PathCost
  fullName: PathCost
- uid: RWCustom.IntVector2[]
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2[]
  nameWithType: IntVector2[]
  fullName: RWCustom.IntVector2[]
  nameWithType.vb: IntVector2()
  fullName.vb: RWCustom.IntVector2()
  name.vb: IntVector2()
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: (
  - name: )
- uid: Global.QuickPath.#ctor*
  commentId: Overload:Global.QuickPath.#ctor
  isExternal: true
  href: Global.QuickPath.html#QuickPath__ctor_CreatureTemplate_PathCost_RWCustom_IntVector2___
  name: QuickPath
  nameWithType: QuickPath.QuickPath
  fullName: QuickPath.QuickPath
  nameWithType.vb: QuickPath.New
  fullName.vb: QuickPath.New
  name.vb: New
- uid: Global.QuickPath.Length*
  commentId: Overload:Global.QuickPath.Length
  isExternal: true
  href: Global.QuickPath.html#QuickPath_Length
  name: Length
  nameWithType: QuickPath.Length
  fullName: QuickPath.Length
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
