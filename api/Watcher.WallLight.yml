### YamlMime:ManagedReference
items:
- uid: Watcher.WallLight
  commentId: T:Watcher.WallLight
  id: WallLight
  parent: Watcher
  children:
  - Watcher.WallLight.#ctor(Room,Watcher.WallLight.WallLightData)
  - Watcher.WallLight.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Watcher.WallLight.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Watcher.WallLight.CreateMesh
  - Watcher.WallLight.Destroy
  - Watcher.WallLight.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Watcher.WallLight.FromPlacedObject(Room,PlacedObject)
  - Watcher.WallLight.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Watcher.WallLight.Update(System.Boolean)
  - Watcher.WallLight.UpdatePaletteColor(RoomPalette)
  - Watcher.WallLight._softEdge
  - Watcher.WallLight.activeDuring
  - Watcher.WallLight.colorName
  - Watcher.WallLight.flat
  - Watcher.WallLight.hue
  - Watcher.WallLight.nLen
  - Watcher.WallLight.nWidth
  - Watcher.WallLight.one
  - Watcher.WallLight.pos
  - Watcher.WallLight.right
  - Watcher.WallLight.saturation
  - Watcher.WallLight.shadowType
  - Watcher.WallLight.up
  - Watcher.WallLight.useBrightestWaterColor
  - Watcher.WallLight.usePalette
  - Watcher.WallLight.value
  langs:
  - csharp
  - vb
  name: WallLight
  nameWithType: WallLight
  fullName: Watcher.WallLight
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.WallLight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class WallLight : UpdatableAndDeletable, IDrawable'
    content.vb: Public Class WallLight Inherits UpdatableAndDeletable Implements IDrawable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  implements:
  - Global.IDrawable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.WallLight.nLen
  commentId: F:Watcher.WallLight.nLen
  id: nLen
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: nLen
  nameWithType: WallLight.nLen
  fullName: Watcher.WallLight.nLen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WallLight.nLen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly int nLen
    return:
      type: System.Int32
    content.vb: Public ReadOnly nLen As Integer
- uid: Watcher.WallLight.nWidth
  commentId: F:Watcher.WallLight.nWidth
  id: nWidth
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: nWidth
  nameWithType: WallLight.nWidth
  fullName: Watcher.WallLight.nWidth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WallLight.nWidth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly int nWidth
    return:
      type: System.Int32
    content.vb: Public ReadOnly nWidth As Integer
- uid: Watcher.WallLight._softEdge
  commentId: F:Watcher.WallLight._softEdge
  id: _softEdge
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: _softEdge
  nameWithType: WallLight._softEdge
  fullName: Watcher.WallLight._softEdge
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WallLight._softEdge</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool _softEdge
    return:
      type: System.Boolean
    content.vb: Public _softEdge As Boolean
- uid: Watcher.WallLight.#ctor(Room,Watcher.WallLight.WallLightData)
  commentId: M:Watcher.WallLight.#ctor(Room,Watcher.WallLight.WallLightData)
  id: '#ctor(Room,Watcher.WallLight.WallLightData)'
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: WallLight(Room, WallLightData)
  nameWithType: WallLight.WallLight(Room, WallLight.WallLightData)
  fullName: Watcher.WallLight.WallLight(Room, Watcher.WallLight.WallLightData)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.WallLight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WallLight(Room room, WallLight.WallLightData data)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:Watcher.WallLight.#ctor(Room,Watcher.WallLight.WallLightData)</parameter>
          </include>
        </markup>
    - id: data
      type: Watcher.WallLight.WallLightData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:Watcher.WallLight.#ctor(Room,Watcher.WallLight.WallLightData)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room, data As WallLight.WallLightData)
  overload: Watcher.WallLight.#ctor*
  nameWithType.vb: WallLight.New(Room, WallLight.WallLightData)
  fullName.vb: Watcher.WallLight.New(Room, Watcher.WallLight.WallLightData)
  name.vb: New(Room, WallLightData)
- uid: Watcher.WallLight.FromPlacedObject(Room,PlacedObject)
  commentId: M:Watcher.WallLight.FromPlacedObject(Room,PlacedObject)
  id: FromPlacedObject(Room,PlacedObject)
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: FromPlacedObject(Room, PlacedObject)
  nameWithType: WallLight.FromPlacedObject(Room, PlacedObject)
  fullName: Watcher.WallLight.FromPlacedObject(Room, PlacedObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WallLight.FromPlacedObject(Room,PlacedObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static WallLight FromPlacedObject(Room room, PlacedObject pObj)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:Watcher.WallLight.FromPlacedObject(Room,PlacedObject)</parameter>
          </include>
        </markup>
    - id: pObj
      type: Global.PlacedObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pObj</parameter>
            <parameter>M:Watcher.WallLight.FromPlacedObject(Room,PlacedObject)</parameter>
          </include>
        </markup>
    return:
      type: Watcher.WallLight
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.WallLight.FromPlacedObject(Room,PlacedObject)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function FromPlacedObject(room As Room, pObj As PlacedObject) As WallLight
  overload: Watcher.WallLight.FromPlacedObject*
- uid: Watcher.WallLight.Destroy
  commentId: M:Watcher.WallLight.Destroy
  id: Destroy
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: WallLight.Destroy()
  fullName: Watcher.WallLight.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WallLight.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Destroy()
    content.vb: Public Overrides Sub Destroy()
  overridden: Global.UpdatableAndDeletable.Destroy
  overload: Watcher.WallLight.Destroy*
- uid: Watcher.WallLight.Update(System.Boolean)
  commentId: M:Watcher.WallLight.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: WallLight.Update(bool)
  fullName: Watcher.WallLight.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WallLight.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Watcher.WallLight.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Watcher.WallLight.Update*
  nameWithType.vb: WallLight.Update(Boolean)
  fullName.vb: Watcher.WallLight.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Watcher.WallLight.CreateMesh
  commentId: M:Watcher.WallLight.CreateMesh
  id: CreateMesh
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: CreateMesh()
  nameWithType: WallLight.CreateMesh()
  fullName: Watcher.WallLight.CreateMesh()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WallLight.CreateMesh</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TriangleMesh CreateMesh()
    return:
      type: Global.TriangleMesh
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.WallLight.CreateMesh</parameter>
          </include>
        </markup>
    content.vb: Public Function CreateMesh() As TriangleMesh
  overload: Watcher.WallLight.CreateMesh*
- uid: Watcher.WallLight.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Watcher.WallLight.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: WallLight.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: Watcher.WallLight.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WallLight.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Watcher.WallLight.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Watcher.WallLight.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Watcher.WallLight.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Watcher.WallLight.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Watcher.WallLight.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: WallLight.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: Watcher.WallLight.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WallLight.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Watcher.WallLight.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Watcher.WallLight.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Watcher.WallLight.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:Watcher.WallLight.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Watcher.WallLight.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: WallLight.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: Watcher.WallLight.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Watcher.WallLight.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Watcher.WallLight.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: WallLight.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: Watcher.WallLight.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WallLight.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Watcher.WallLight.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Watcher.WallLight.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:Watcher.WallLight.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Watcher.WallLight.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Watcher.WallLight.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Watcher.WallLight.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: WallLight.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: Watcher.WallLight.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WallLight.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Watcher.WallLight.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Watcher.WallLight.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:Watcher.WallLight.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Watcher.WallLight.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Watcher.WallLight.UpdatePaletteColor(RoomPalette)
  commentId: M:Watcher.WallLight.UpdatePaletteColor(RoomPalette)
  id: UpdatePaletteColor(RoomPalette)
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: UpdatePaletteColor(RoomPalette)
  nameWithType: WallLight.UpdatePaletteColor(RoomPalette)
  fullName: Watcher.WallLight.UpdatePaletteColor(RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WallLight.UpdatePaletteColor(RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdatePaletteColor(RoomPalette palette)
    parameters:
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:Watcher.WallLight.UpdatePaletteColor(RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub UpdatePaletteColor(palette As RoomPalette)
  overload: Watcher.WallLight.UpdatePaletteColor*
- uid: Watcher.WallLight.activeDuring
  commentId: P:Watcher.WallLight.activeDuring
  id: activeDuring
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: activeDuring
  nameWithType: WallLight.activeDuring
  fullName: Watcher.WallLight.activeDuring
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.activeDuring</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WallLight.ActiveDuring activeDuring { get; set; }
    parameters: []
    return:
      type: Watcher.WallLight.ActiveDuring
    content.vb: Public Property activeDuring As WallLight.ActiveDuring
  overload: Watcher.WallLight.activeDuring*
- uid: Watcher.WallLight.pos
  commentId: P:Watcher.WallLight.pos
  id: pos
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: WallLight.pos
  fullName: Watcher.WallLight.pos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos { get; set; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Property pos As Vector2
  overload: Watcher.WallLight.pos*
- uid: Watcher.WallLight.up
  commentId: P:Watcher.WallLight.up
  id: up
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: up
  nameWithType: WallLight.up
  fullName: Watcher.WallLight.up
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.up</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 up { get; set; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Property up As Vector2
  overload: Watcher.WallLight.up*
- uid: Watcher.WallLight.right
  commentId: P:Watcher.WallLight.right
  id: right
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: right
  nameWithType: WallLight.right
  fullName: Watcher.WallLight.right
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.right</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 right { get; set; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Property right As Vector2
  overload: Watcher.WallLight.right*
- uid: Watcher.WallLight.one
  commentId: P:Watcher.WallLight.one
  id: one
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: one
  nameWithType: WallLight.one
  fullName: Watcher.WallLight.one
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.one</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 one { get; set; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Property one As Vector2
  overload: Watcher.WallLight.one*
- uid: Watcher.WallLight.hue
  commentId: P:Watcher.WallLight.hue
  id: hue
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: hue
  nameWithType: WallLight.hue
  fullName: Watcher.WallLight.hue
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.hue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float hue { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property hue As Single
  overload: Watcher.WallLight.hue*
- uid: Watcher.WallLight.saturation
  commentId: P:Watcher.WallLight.saturation
  id: saturation
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: saturation
  nameWithType: WallLight.saturation
  fullName: Watcher.WallLight.saturation
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.saturation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float saturation { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property saturation As Single
  overload: Watcher.WallLight.saturation*
- uid: Watcher.WallLight.value
  commentId: P:Watcher.WallLight.value
  id: value
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: value
  nameWithType: WallLight.value
  fullName: Watcher.WallLight.value
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.value</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float value { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property value As Single
  overload: Watcher.WallLight.value*
- uid: Watcher.WallLight.usePalette
  commentId: P:Watcher.WallLight.usePalette
  id: usePalette
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: usePalette
  nameWithType: WallLight.usePalette
  fullName: Watcher.WallLight.usePalette
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.usePalette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool usePalette { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property usePalette As Boolean
  overload: Watcher.WallLight.usePalette*
- uid: Watcher.WallLight.useBrightestWaterColor
  commentId: P:Watcher.WallLight.useBrightestWaterColor
  id: useBrightestWaterColor
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: useBrightestWaterColor
  nameWithType: WallLight.useBrightestWaterColor
  fullName: Watcher.WallLight.useBrightestWaterColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.useBrightestWaterColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool useBrightestWaterColor { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property useBrightestWaterColor As Boolean
  overload: Watcher.WallLight.useBrightestWaterColor*
- uid: Watcher.WallLight.flat
  commentId: P:Watcher.WallLight.flat
  id: flat
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: flat
  nameWithType: WallLight.flat
  fullName: Watcher.WallLight.flat
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.flat</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool flat { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property flat As Boolean
  overload: Watcher.WallLight.flat*
- uid: Watcher.WallLight.shadowType
  commentId: P:Watcher.WallLight.shadowType
  id: shadowType
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: shadowType
  nameWithType: WallLight.shadowType
  fullName: Watcher.WallLight.shadowType
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.shadowType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WallLight.ShadowType shadowType { get; set; }
    parameters: []
    return:
      type: Watcher.WallLight.ShadowType
    content.vb: Public Property shadowType As WallLight.ShadowType
  overload: Watcher.WallLight.shadowType*
- uid: Watcher.WallLight.colorName
  commentId: P:Watcher.WallLight.colorName
  id: colorName
  parent: Watcher.WallLight
  langs:
  - csharp
  - vb
  name: colorName
  nameWithType: WallLight.colorName
  fullName: Watcher.WallLight.colorName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.WallLight.colorName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomPalette.ColorName colorName { get; set; }
    parameters: []
    return:
      type: Global.RoomPalette.ColorName
    content.vb: Public Property colorName As RoomPalette.ColorName
  overload: Watcher.WallLight.colorName*
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Watcher.WallLight.#ctor*
  commentId: Overload:Watcher.WallLight.#ctor
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight__ctor_Room_Watcher_WallLight_WallLightData_
  name: WallLight
  nameWithType: WallLight.WallLight
  fullName: Watcher.WallLight.WallLight
  nameWithType.vb: WallLight.New
  fullName.vb: Watcher.WallLight.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Watcher.WallLight.WallLightData
  commentId: T:Watcher.WallLight.WallLightData
  parent: Watcher
  isExternal: true
  href: Watcher.WallLight.html
  name: WallLight.WallLightData
  nameWithType: WallLight.WallLightData
  fullName: Watcher.WallLight.WallLightData
  spec.csharp:
  - uid: Watcher.WallLight
    name: WallLight
    isExternal: true
    href: Watcher.WallLight.html
  - name: .
  - uid: Watcher.WallLight.WallLightData
    name: WallLightData
    isExternal: true
    href: Watcher.WallLight.WallLightData.html
  spec.vb:
  - uid: Watcher.WallLight
    name: WallLight
    isExternal: true
    href: Watcher.WallLight.html
  - name: .
  - uid: Watcher.WallLight.WallLightData
    name: WallLightData
    isExternal: true
    href: Watcher.WallLight.WallLightData.html
- uid: Watcher.WallLight.FromPlacedObject*
  commentId: Overload:Watcher.WallLight.FromPlacedObject
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_FromPlacedObject_Room_PlacedObject_
  name: FromPlacedObject
  nameWithType: WallLight.FromPlacedObject
  fullName: Watcher.WallLight.FromPlacedObject
- uid: Global.PlacedObject
  commentId: T:Global.PlacedObject
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject
  nameWithType: PlacedObject
  fullName: PlacedObject
- uid: Watcher.WallLight
  commentId: T:Watcher.WallLight
  parent: Watcher
  isExternal: true
  href: Watcher.WallLight.html
  name: WallLight
  nameWithType: WallLight
  fullName: Watcher.WallLight
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Watcher.WallLight.Destroy*
  commentId: Overload:Watcher.WallLight.Destroy
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_Destroy
  name: Destroy
  nameWithType: WallLight.Destroy
  fullName: Watcher.WallLight.Destroy
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Watcher.WallLight.Update*
  commentId: Overload:Watcher.WallLight.Update
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_Update_System_Boolean_
  name: Update
  nameWithType: WallLight.Update
  fullName: Watcher.WallLight.Update
- uid: Watcher.WallLight.CreateMesh*
  commentId: Overload:Watcher.WallLight.CreateMesh
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_CreateMesh
  name: CreateMesh
  nameWithType: WallLight.CreateMesh
  fullName: Watcher.WallLight.CreateMesh
- uid: Global.TriangleMesh
  commentId: T:Global.TriangleMesh
  isExternal: true
  href: TriangleMesh.html
  name: TriangleMesh
  nameWithType: TriangleMesh
  fullName: TriangleMesh
- uid: Watcher.WallLight.InitiateSprites*
  commentId: Overload:Watcher.WallLight.InitiateSprites
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: WallLight.InitiateSprites
  fullName: Watcher.WallLight.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Watcher.WallLight.DrawSprites*
  commentId: Overload:Watcher.WallLight.DrawSprites
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: WallLight.DrawSprites
  fullName: Watcher.WallLight.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Watcher.WallLight.AddToContainer*
  commentId: Overload:Watcher.WallLight.AddToContainer
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: WallLight.AddToContainer
  fullName: Watcher.WallLight.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Watcher.WallLight.ApplyPalette*
  commentId: Overload:Watcher.WallLight.ApplyPalette
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: WallLight.ApplyPalette
  fullName: Watcher.WallLight.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Watcher.WallLight.UpdatePaletteColor*
  commentId: Overload:Watcher.WallLight.UpdatePaletteColor
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_UpdatePaletteColor_RoomPalette_
  name: UpdatePaletteColor
  nameWithType: WallLight.UpdatePaletteColor
  fullName: Watcher.WallLight.UpdatePaletteColor
- uid: Watcher.WallLight.activeDuring*
  commentId: Overload:Watcher.WallLight.activeDuring
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_activeDuring
  name: activeDuring
  nameWithType: WallLight.activeDuring
  fullName: Watcher.WallLight.activeDuring
- uid: Watcher.WallLight.ActiveDuring
  commentId: T:Watcher.WallLight.ActiveDuring
  parent: Watcher
  isExternal: true
  href: Watcher.WallLight.html
  name: WallLight.ActiveDuring
  nameWithType: WallLight.ActiveDuring
  fullName: Watcher.WallLight.ActiveDuring
  spec.csharp:
  - uid: Watcher.WallLight
    name: WallLight
    isExternal: true
    href: Watcher.WallLight.html
  - name: .
  - uid: Watcher.WallLight.ActiveDuring
    name: ActiveDuring
    isExternal: true
    href: Watcher.WallLight.ActiveDuring.html
  spec.vb:
  - uid: Watcher.WallLight
    name: WallLight
    isExternal: true
    href: Watcher.WallLight.html
  - name: .
  - uid: Watcher.WallLight.ActiveDuring
    name: ActiveDuring
    isExternal: true
    href: Watcher.WallLight.ActiveDuring.html
- uid: Watcher.WallLight.pos*
  commentId: Overload:Watcher.WallLight.pos
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_pos
  name: pos
  nameWithType: WallLight.pos
  fullName: Watcher.WallLight.pos
- uid: Watcher.WallLight.up*
  commentId: Overload:Watcher.WallLight.up
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_up
  name: up
  nameWithType: WallLight.up
  fullName: Watcher.WallLight.up
- uid: Watcher.WallLight.right*
  commentId: Overload:Watcher.WallLight.right
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_right
  name: right
  nameWithType: WallLight.right
  fullName: Watcher.WallLight.right
- uid: Watcher.WallLight.one*
  commentId: Overload:Watcher.WallLight.one
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_one
  name: one
  nameWithType: WallLight.one
  fullName: Watcher.WallLight.one
- uid: Watcher.WallLight.hue*
  commentId: Overload:Watcher.WallLight.hue
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_hue
  name: hue
  nameWithType: WallLight.hue
  fullName: Watcher.WallLight.hue
- uid: Watcher.WallLight.saturation*
  commentId: Overload:Watcher.WallLight.saturation
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_saturation
  name: saturation
  nameWithType: WallLight.saturation
  fullName: Watcher.WallLight.saturation
- uid: Watcher.WallLight.value*
  commentId: Overload:Watcher.WallLight.value
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_value
  name: value
  nameWithType: WallLight.value
  fullName: Watcher.WallLight.value
- uid: Watcher.WallLight.usePalette*
  commentId: Overload:Watcher.WallLight.usePalette
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_usePalette
  name: usePalette
  nameWithType: WallLight.usePalette
  fullName: Watcher.WallLight.usePalette
- uid: Watcher.WallLight.useBrightestWaterColor*
  commentId: Overload:Watcher.WallLight.useBrightestWaterColor
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_useBrightestWaterColor
  name: useBrightestWaterColor
  nameWithType: WallLight.useBrightestWaterColor
  fullName: Watcher.WallLight.useBrightestWaterColor
- uid: Watcher.WallLight.flat*
  commentId: Overload:Watcher.WallLight.flat
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_flat
  name: flat
  nameWithType: WallLight.flat
  fullName: Watcher.WallLight.flat
- uid: Watcher.WallLight.shadowType*
  commentId: Overload:Watcher.WallLight.shadowType
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_shadowType
  name: shadowType
  nameWithType: WallLight.shadowType
  fullName: Watcher.WallLight.shadowType
- uid: Watcher.WallLight.ShadowType
  commentId: T:Watcher.WallLight.ShadowType
  parent: Watcher
  isExternal: true
  href: Watcher.WallLight.html
  name: WallLight.ShadowType
  nameWithType: WallLight.ShadowType
  fullName: Watcher.WallLight.ShadowType
  spec.csharp:
  - uid: Watcher.WallLight
    name: WallLight
    isExternal: true
    href: Watcher.WallLight.html
  - name: .
  - uid: Watcher.WallLight.ShadowType
    name: ShadowType
    isExternal: true
    href: Watcher.WallLight.ShadowType.html
  spec.vb:
  - uid: Watcher.WallLight
    name: WallLight
    isExternal: true
    href: Watcher.WallLight.html
  - name: .
  - uid: Watcher.WallLight.ShadowType
    name: ShadowType
    isExternal: true
    href: Watcher.WallLight.ShadowType.html
- uid: Watcher.WallLight.colorName*
  commentId: Overload:Watcher.WallLight.colorName
  isExternal: true
  href: Watcher.WallLight.html#Watcher_WallLight_colorName
  name: colorName
  nameWithType: WallLight.colorName
  fullName: Watcher.WallLight.colorName
- uid: Global.RoomPalette.ColorName
  commentId: T:Global.RoomPalette.ColorName
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette.ColorName
  nameWithType: RoomPalette.ColorName
  fullName: RoomPalette.ColorName
  spec.csharp:
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: .
  - uid: Global.RoomPalette.ColorName
    name: ColorName
    isExternal: true
    href: RoomPalette.ColorName.html
  spec.vb:
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: .
  - uid: Global.RoomPalette.ColorName
    name: ColorName
    isExternal: true
    href: RoomPalette.ColorName.html
