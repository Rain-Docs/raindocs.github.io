### YamlMime:ManagedReference
items:
- uid: Global.YellowAI.YellowPack.PackMember
  commentId: T:Global.YellowAI.YellowPack.PackMember
  id: YellowAI.YellowPack.PackMember
  parent: Global
  children:
  - Global.YellowAI.YellowPack.PackMember.#ctor(AbstractCreature,YellowAI.YellowPack.Role)
  - Global.YellowAI.YellowPack.PackMember.lizard
  - Global.YellowAI.YellowPack.PackMember.role
  langs:
  - csharp
  - vb
  name: YellowAI.YellowPack.PackMember
  nameWithType: YellowAI.YellowPack.PackMember
  fullName: YellowAI.YellowPack.PackMember
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:YellowAI.YellowPack.PackMember</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class YellowAI.YellowPack.PackMember
    content.vb: Public Class YellowAI.YellowPack.PackMember
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.YellowAI.YellowPack.PackMember.lizard
  commentId: F:Global.YellowAI.YellowPack.PackMember.lizard
  id: lizard
  parent: Global.YellowAI.YellowPack.PackMember
  langs:
  - csharp
  - vb
  name: lizard
  nameWithType: YellowAI.YellowPack.PackMember.lizard
  fullName: YellowAI.YellowPack.PackMember.lizard
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:YellowAI.YellowPack.PackMember.lizard</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractCreature lizard
    return:
      type: Global.AbstractCreature
    content.vb: Public lizard As AbstractCreature
- uid: Global.YellowAI.YellowPack.PackMember.role
  commentId: F:Global.YellowAI.YellowPack.PackMember.role
  id: role
  parent: Global.YellowAI.YellowPack.PackMember
  langs:
  - csharp
  - vb
  name: role
  nameWithType: YellowAI.YellowPack.PackMember.role
  fullName: YellowAI.YellowPack.PackMember.role
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:YellowAI.YellowPack.PackMember.role</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public YellowAI.YellowPack.Role role
    return:
      type: Global.YellowAI.YellowPack.Role
    content.vb: Public role As YellowAI.YellowPack.Role
- uid: Global.YellowAI.YellowPack.PackMember.#ctor(AbstractCreature,YellowAI.YellowPack.Role)
  commentId: M:Global.YellowAI.YellowPack.PackMember.#ctor(AbstractCreature,YellowAI.YellowPack.Role)
  id: '#ctor(AbstractCreature,YellowAI.YellowPack.Role)'
  parent: Global.YellowAI.YellowPack.PackMember
  langs:
  - csharp
  - vb
  name: PackMember(AbstractCreature, Role)
  nameWithType: YellowAI.YellowPack.PackMember.PackMember(AbstractCreature, YellowAI.YellowPack.Role)
  fullName: YellowAI.YellowPack.PackMember.PackMember(AbstractCreature, YellowAI.YellowPack.Role)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>YellowAI.YellowPack.PackMember</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PackMember(AbstractCreature lizard, YellowAI.YellowPack.Role role)
    parameters:
    - id: lizard
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lizard</parameter>
            <parameter>M:YellowAI.YellowPack.PackMember.#ctor(AbstractCreature,YellowAI.YellowPack.Role)</parameter>
          </include>
        </markup>
    - id: role
      type: Global.YellowAI.YellowPack.Role
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>role</parameter>
            <parameter>M:YellowAI.YellowPack.PackMember.#ctor(AbstractCreature,YellowAI.YellowPack.Role)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(lizard As AbstractCreature, role As YellowAI.YellowPack.Role)
  overload: Global.YellowAI.YellowPack.PackMember.#ctor*
  nameWithType.vb: YellowAI.YellowPack.PackMember.New(AbstractCreature, YellowAI.YellowPack.Role)
  fullName.vb: YellowAI.YellowPack.PackMember.New(AbstractCreature, YellowAI.YellowPack.Role)
  name.vb: New(AbstractCreature, Role)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.YellowAI.YellowPack.Role
  commentId: T:Global.YellowAI.YellowPack.Role
  isExternal: true
  href: YellowAI.html
  name: YellowAI.YellowPack.Role
  nameWithType: YellowAI.YellowPack.Role
  fullName: YellowAI.YellowPack.Role
  spec.csharp:
  - uid: Global.YellowAI
    name: YellowAI
    isExternal: true
    href: YellowAI.html
  - name: .
  - uid: Global.YellowAI.YellowPack
    name: YellowPack
    isExternal: true
    href: YellowAI.YellowPack.html
  - name: .
  - uid: Global.YellowAI.YellowPack.Role
    name: Role
    isExternal: true
    href: YellowAI.YellowPack.Role.html
  spec.vb:
  - uid: Global.YellowAI
    name: YellowAI
    isExternal: true
    href: YellowAI.html
  - name: .
  - uid: Global.YellowAI.YellowPack
    name: YellowPack
    isExternal: true
    href: YellowAI.YellowPack.html
  - name: .
  - uid: Global.YellowAI.YellowPack.Role
    name: Role
    isExternal: true
    href: YellowAI.YellowPack.Role.html
- uid: Global.YellowAI.YellowPack.PackMember.#ctor*
  commentId: Overload:Global.YellowAI.YellowPack.PackMember.#ctor
  isExternal: true
  href: Global.YellowAI.YellowPack.PackMember.html#YellowAI_YellowPack_PackMember__ctor_AbstractCreature_YellowAI_YellowPack_Role_
  name: PackMember
  nameWithType: YellowAI.YellowPack.PackMember.PackMember
  fullName: YellowAI.YellowPack.PackMember.PackMember
  nameWithType.vb: YellowAI.YellowPack.PackMember.New
  fullName.vb: YellowAI.YellowPack.PackMember.New
  name.vb: New
