### YamlMime:ManagedReference
items:
- uid: Expedition.ChallengeOrganizer
  commentId: T:Expedition.ChallengeOrganizer
  id: ChallengeOrganizer
  parent: Expedition
  children:
  - Expedition.ChallengeOrganizer.AssignChallenge(System.Int32,System.Boolean)
  - Expedition.ChallengeOrganizer.GetTypesSafely(System.Reflection.Assembly,System.Reflection.ReflectionTypeLoadException@)
  - Expedition.ChallengeOrganizer.InitCreatureBlacklist
  - Expedition.ChallengeOrganizer.RandomChallenge(System.Boolean)
  - Expedition.ChallengeOrganizer.SetupChallengeTypes
  - Expedition.ChallengeOrganizer.availableChallengeTypes
  - Expedition.ChallengeOrganizer.creatureBlacklist
  - Expedition.ChallengeOrganizer.filterChallengeTypes
  langs:
  - csharp
  - vb
  name: ChallengeOrganizer
  nameWithType: ChallengeOrganizer
  fullName: Expedition.ChallengeOrganizer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Expedition.ChallengeOrganizer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class ChallengeOrganizer
    content.vb: Public Module ChallengeOrganizer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Expedition.ChallengeOrganizer.availableChallengeTypes
  commentId: F:Expedition.ChallengeOrganizer.availableChallengeTypes
  id: availableChallengeTypes
  parent: Expedition.ChallengeOrganizer
  langs:
  - csharp
  - vb
  name: availableChallengeTypes
  nameWithType: ChallengeOrganizer.availableChallengeTypes
  fullName: Expedition.ChallengeOrganizer.availableChallengeTypes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeOrganizer.availableChallengeTypes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<Challenge> availableChallengeTypes
    return:
      type: System.Collections.Generic.List{Expedition.Challenge}
    content.vb: Public Shared availableChallengeTypes As List(Of Challenge)
- uid: Expedition.ChallengeOrganizer.filterChallengeTypes
  commentId: F:Expedition.ChallengeOrganizer.filterChallengeTypes
  id: filterChallengeTypes
  parent: Expedition.ChallengeOrganizer
  langs:
  - csharp
  - vb
  name: filterChallengeTypes
  nameWithType: ChallengeOrganizer.filterChallengeTypes
  fullName: Expedition.ChallengeOrganizer.filterChallengeTypes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeOrganizer.filterChallengeTypes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> filterChallengeTypes
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared filterChallengeTypes As List(Of String)
- uid: Expedition.ChallengeOrganizer.creatureBlacklist
  commentId: F:Expedition.ChallengeOrganizer.creatureBlacklist
  id: creatureBlacklist
  parent: Expedition.ChallengeOrganizer
  langs:
  - csharp
  - vb
  name: creatureBlacklist
  nameWithType: ChallengeOrganizer.creatureBlacklist
  fullName: Expedition.ChallengeOrganizer.creatureBlacklist
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeOrganizer.creatureBlacklist</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> creatureBlacklist
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared creatureBlacklist As List(Of String)
- uid: Expedition.ChallengeOrganizer.AssignChallenge(System.Int32,System.Boolean)
  commentId: M:Expedition.ChallengeOrganizer.AssignChallenge(System.Int32,System.Boolean)
  id: AssignChallenge(System.Int32,System.Boolean)
  parent: Expedition.ChallengeOrganizer
  langs:
  - csharp
  - vb
  name: AssignChallenge(int, bool)
  nameWithType: ChallengeOrganizer.AssignChallenge(int, bool)
  fullName: Expedition.ChallengeOrganizer.AssignChallenge(int, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeOrganizer.AssignChallenge(System.Int32,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void AssignChallenge(int slot, bool hidden)
    parameters:
    - id: slot
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slot</parameter>
            <parameter>M:Expedition.ChallengeOrganizer.AssignChallenge(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: hidden
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hidden</parameter>
            <parameter>M:Expedition.ChallengeOrganizer.AssignChallenge(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub AssignChallenge(slot As Integer, hidden As Boolean)
  overload: Expedition.ChallengeOrganizer.AssignChallenge*
  nameWithType.vb: ChallengeOrganizer.AssignChallenge(Integer, Boolean)
  fullName.vb: Expedition.ChallengeOrganizer.AssignChallenge(Integer, Boolean)
  name.vb: AssignChallenge(Integer, Boolean)
- uid: Expedition.ChallengeOrganizer.SetupChallengeTypes
  commentId: M:Expedition.ChallengeOrganizer.SetupChallengeTypes
  id: SetupChallengeTypes
  parent: Expedition.ChallengeOrganizer
  langs:
  - csharp
  - vb
  name: SetupChallengeTypes()
  nameWithType: ChallengeOrganizer.SetupChallengeTypes()
  fullName: Expedition.ChallengeOrganizer.SetupChallengeTypes()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeOrganizer.SetupChallengeTypes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void SetupChallengeTypes()
    content.vb: Public Shared Sub SetupChallengeTypes()
  overload: Expedition.ChallengeOrganizer.SetupChallengeTypes*
- uid: Expedition.ChallengeOrganizer.GetTypesSafely(System.Reflection.Assembly,System.Reflection.ReflectionTypeLoadException@)
  commentId: M:Expedition.ChallengeOrganizer.GetTypesSafely(System.Reflection.Assembly,System.Reflection.ReflectionTypeLoadException@)
  id: GetTypesSafely(System.Reflection.Assembly,System.Reflection.ReflectionTypeLoadException@)
  parent: Expedition.ChallengeOrganizer
  langs:
  - csharp
  - vb
  name: GetTypesSafely(Assembly, out ReflectionTypeLoadException)
  nameWithType: ChallengeOrganizer.GetTypesSafely(Assembly, out ReflectionTypeLoadException)
  fullName: Expedition.ChallengeOrganizer.GetTypesSafely(System.Reflection.Assembly, out System.Reflection.ReflectionTypeLoadException)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeOrganizer.GetTypesSafely(System.Reflection.Assembly,System.Reflection.ReflectionTypeLoadException@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IEnumerable<Type> GetTypesSafely(Assembly asm, out ReflectionTypeLoadException reflError)
    parameters:
    - id: asm
      type: System.Reflection.Assembly
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>asm</parameter>
            <parameter>M:Expedition.ChallengeOrganizer.GetTypesSafely(System.Reflection.Assembly,System.Reflection.ReflectionTypeLoadException@)</parameter>
          </include>
        </markup>
    - id: reflError
      type: System.Reflection.ReflectionTypeLoadException
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reflError</parameter>
            <parameter>M:Expedition.ChallengeOrganizer.GetTypesSafely(System.Reflection.Assembly,System.Reflection.ReflectionTypeLoadException@)</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.ChallengeOrganizer.GetTypesSafely(System.Reflection.Assembly,System.Reflection.ReflectionTypeLoadException@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetTypesSafely(asm As Assembly, reflError As ReflectionTypeLoadException) As IEnumerable(Of Type)
  overload: Expedition.ChallengeOrganizer.GetTypesSafely*
  nameWithType.vb: ChallengeOrganizer.GetTypesSafely(Assembly, ReflectionTypeLoadException)
  fullName.vb: Expedition.ChallengeOrganizer.GetTypesSafely(System.Reflection.Assembly, System.Reflection.ReflectionTypeLoadException)
  name.vb: GetTypesSafely(Assembly, ReflectionTypeLoadException)
- uid: Expedition.ChallengeOrganizer.RandomChallenge(System.Boolean)
  commentId: M:Expedition.ChallengeOrganizer.RandomChallenge(System.Boolean)
  id: RandomChallenge(System.Boolean)
  parent: Expedition.ChallengeOrganizer
  langs:
  - csharp
  - vb
  name: RandomChallenge(bool)
  nameWithType: ChallengeOrganizer.RandomChallenge(bool)
  fullName: Expedition.ChallengeOrganizer.RandomChallenge(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeOrganizer.RandomChallenge(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Challenge RandomChallenge(bool hidden)
    parameters:
    - id: hidden
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hidden</parameter>
            <parameter>M:Expedition.ChallengeOrganizer.RandomChallenge(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Expedition.Challenge
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.ChallengeOrganizer.RandomChallenge(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RandomChallenge(hidden As Boolean) As Challenge
  overload: Expedition.ChallengeOrganizer.RandomChallenge*
  nameWithType.vb: ChallengeOrganizer.RandomChallenge(Boolean)
  fullName.vb: Expedition.ChallengeOrganizer.RandomChallenge(Boolean)
  name.vb: RandomChallenge(Boolean)
- uid: Expedition.ChallengeOrganizer.InitCreatureBlacklist
  commentId: M:Expedition.ChallengeOrganizer.InitCreatureBlacklist
  id: InitCreatureBlacklist
  parent: Expedition.ChallengeOrganizer
  langs:
  - csharp
  - vb
  name: InitCreatureBlacklist()
  nameWithType: ChallengeOrganizer.InitCreatureBlacklist()
  fullName: Expedition.ChallengeOrganizer.InitCreatureBlacklist()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeOrganizer.InitCreatureBlacklist</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void InitCreatureBlacklist()
    content.vb: Public Shared Sub InitCreatureBlacklist()
  overload: Expedition.ChallengeOrganizer.InitCreatureBlacklist*
references:
- uid: Expedition
  commentId: N:Expedition
  isExternal: true
  href: Expedition.html
  name: Expedition
  nameWithType: Expedition
  fullName: Expedition
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Expedition.Challenge}
  commentId: T:System.Collections.Generic.List{Expedition.Challenge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Challenge>
  nameWithType: List<Challenge>
  fullName: System.Collections.Generic.List<Expedition.Challenge>
  nameWithType.vb: List(Of Challenge)
  fullName.vb: System.Collections.Generic.List(Of Expedition.Challenge)
  name.vb: List(Of Challenge)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Expedition.Challenge
    name: Challenge
    isExternal: true
    href: Expedition.Challenge.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Expedition.Challenge
    name: Challenge
    isExternal: true
    href: Expedition.Challenge.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Expedition.ChallengeOrganizer.AssignChallenge*
  commentId: Overload:Expedition.ChallengeOrganizer.AssignChallenge
  isExternal: true
  href: Expedition.ChallengeOrganizer.html#Expedition_ChallengeOrganizer_AssignChallenge_System_Int32_System_Boolean_
  name: AssignChallenge
  nameWithType: ChallengeOrganizer.AssignChallenge
  fullName: Expedition.ChallengeOrganizer.AssignChallenge
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Expedition.ChallengeOrganizer.SetupChallengeTypes*
  commentId: Overload:Expedition.ChallengeOrganizer.SetupChallengeTypes
  isExternal: true
  href: Expedition.ChallengeOrganizer.html#Expedition_ChallengeOrganizer_SetupChallengeTypes
  name: SetupChallengeTypes
  nameWithType: ChallengeOrganizer.SetupChallengeTypes
  fullName: Expedition.ChallengeOrganizer.SetupChallengeTypes
- uid: Expedition.ChallengeOrganizer.GetTypesSafely*
  commentId: Overload:Expedition.ChallengeOrganizer.GetTypesSafely
  isExternal: true
  href: Expedition.ChallengeOrganizer.html#Expedition_ChallengeOrganizer_GetTypesSafely_System_Reflection_Assembly_System_Reflection_ReflectionTypeLoadException__
  name: GetTypesSafely
  nameWithType: ChallengeOrganizer.GetTypesSafely
  fullName: Expedition.ChallengeOrganizer.GetTypesSafely
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.ReflectionTypeLoadException
  commentId: T:System.Reflection.ReflectionTypeLoadException
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.reflectiontypeloadexception
  name: ReflectionTypeLoadException
  nameWithType: ReflectionTypeLoadException
  fullName: System.Reflection.ReflectionTypeLoadException
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Expedition.ChallengeOrganizer.RandomChallenge*
  commentId: Overload:Expedition.ChallengeOrganizer.RandomChallenge
  isExternal: true
  href: Expedition.ChallengeOrganizer.html#Expedition_ChallengeOrganizer_RandomChallenge_System_Boolean_
  name: RandomChallenge
  nameWithType: ChallengeOrganizer.RandomChallenge
  fullName: Expedition.ChallengeOrganizer.RandomChallenge
- uid: Expedition.Challenge
  commentId: T:Expedition.Challenge
  parent: Expedition
  isExternal: true
  href: Expedition.Challenge.html
  name: Challenge
  nameWithType: Challenge
  fullName: Expedition.Challenge
- uid: Expedition.ChallengeOrganizer.InitCreatureBlacklist*
  commentId: Overload:Expedition.ChallengeOrganizer.InitCreatureBlacklist
  isExternal: true
  href: Expedition.ChallengeOrganizer.html#Expedition_ChallengeOrganizer_InitCreatureBlacklist
  name: InitCreatureBlacklist
  nameWithType: ChallengeOrganizer.InitCreatureBlacklist
  fullName: Expedition.ChallengeOrganizer.InitCreatureBlacklist
