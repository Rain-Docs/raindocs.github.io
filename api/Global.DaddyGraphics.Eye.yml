### YamlMime:ManagedReference
items:
- uid: Global.DaddyGraphics.Eye
  commentId: T:Global.DaddyGraphics.Eye
  id: DaddyGraphics.Eye
  parent: Global
  children:
  - Global.DaddyGraphics.Eye.#ctor(GraphicsModule,DaddyGraphics.IHaveRotGraphics,System.Int32,System.Single,System.Boolean,System.Int32)
  - Global.DaddyGraphics.Eye.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.DaddyGraphics.Eye.GetColor
  - Global.DaddyGraphics.Eye.GetEyeColor
  - Global.DaddyGraphics.Eye.GetPosition
  - Global.DaddyGraphics.Eye.HDmode
  - Global.DaddyGraphics.Eye.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.DaddyGraphics.Eye.ReactToCreature(Tracker.CreatureRepresentation)
  - Global.DaddyGraphics.Eye.ReactToSound(NoiseTracker.TheorizedSource)
  - Global.DaddyGraphics.Eye.Update
  - Global.DaddyGraphics.Eye.centerRenderPos
  - Global.DaddyGraphics.Eye.chunk
  - Global.DaddyGraphics.Eye.closed
  - Global.DaddyGraphics.Eye.creatureRep
  - Global.DaddyGraphics.Eye.dir
  - Global.DaddyGraphics.Eye.firstSprite
  - Global.DaddyGraphics.Eye.flash
  - Global.DaddyGraphics.Eye.focus
  - Global.DaddyGraphics.Eye.getToFocus
  - Global.DaddyGraphics.Eye.lastClosed
  - Global.DaddyGraphics.Eye.lastDir
  - Global.DaddyGraphics.Eye.lastFocus
  - Global.DaddyGraphics.Eye.light
  - Global.DaddyGraphics.Eye.owner
  - Global.DaddyGraphics.Eye.palette
  - Global.DaddyGraphics.Eye.rad
  - Global.DaddyGraphics.Eye.renderColor
  - Global.DaddyGraphics.Eye.rotOwner
  - Global.DaddyGraphics.Eye.soundSource
  - Global.DaddyGraphics.Eye.sprites
  langs:
  - csharp
  - vb
  name: DaddyGraphics.Eye
  nameWithType: DaddyGraphics.Eye
  fullName: DaddyGraphics.Eye
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:DaddyGraphics.Eye</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class DaddyGraphics.Eye : DaddyGraphics.DaddyBubbleOwner'
    content.vb: Public Class DaddyGraphics.Eye Implements DaddyGraphics.DaddyBubbleOwner
  inheritance:
  - System.Object
  implements:
  - Global.DaddyGraphics.DaddyBubbleOwner
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.DaddyGraphics.Eye.dir
  commentId: F:Global.DaddyGraphics.Eye.dir
  id: dir
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: dir
  nameWithType: DaddyGraphics.Eye.dir
  fullName: DaddyGraphics.Eye.dir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.dir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 dir
    return:
      type: UnityEngine.Vector2
    content.vb: Public dir As Vector2
- uid: Global.DaddyGraphics.Eye.lastDir
  commentId: F:Global.DaddyGraphics.Eye.lastDir
  id: lastDir
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: lastDir
  nameWithType: DaddyGraphics.Eye.lastDir
  fullName: DaddyGraphics.Eye.lastDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.lastDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastDir
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastDir As Vector2
- uid: Global.DaddyGraphics.Eye.rotOwner
  commentId: F:Global.DaddyGraphics.Eye.rotOwner
  id: rotOwner
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: rotOwner
  nameWithType: DaddyGraphics.Eye.rotOwner
  fullName: DaddyGraphics.Eye.rotOwner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.rotOwner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DaddyGraphics.IHaveRotGraphics rotOwner
    return:
      type: Global.DaddyGraphics.IHaveRotGraphics
    content.vb: Public rotOwner As DaddyGraphics.IHaveRotGraphics
- uid: Global.DaddyGraphics.Eye.firstSprite
  commentId: F:Global.DaddyGraphics.Eye.firstSprite
  id: firstSprite
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: firstSprite
  nameWithType: DaddyGraphics.Eye.firstSprite
  fullName: DaddyGraphics.Eye.firstSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.firstSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int firstSprite
    return:
      type: System.Int32
    content.vb: Public firstSprite As Integer
- uid: Global.DaddyGraphics.Eye.sprites
  commentId: F:Global.DaddyGraphics.Eye.sprites
  id: sprites
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: sprites
  nameWithType: DaddyGraphics.Eye.sprites
  fullName: DaddyGraphics.Eye.sprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.sprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int sprites
    return:
      type: System.Int32
    content.vb: Public sprites As Integer
- uid: Global.DaddyGraphics.Eye.rad
  commentId: F:Global.DaddyGraphics.Eye.rad
  id: rad
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: DaddyGraphics.Eye.rad
  fullName: DaddyGraphics.Eye.rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad
    return:
      type: System.Single
    content.vb: Public rad As Single
- uid: Global.DaddyGraphics.Eye.HDmode
  commentId: F:Global.DaddyGraphics.Eye.HDmode
  id: HDmode
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: HDmode
  nameWithType: DaddyGraphics.Eye.HDmode
  fullName: DaddyGraphics.Eye.HDmode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.HDmode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HDmode
    return:
      type: System.Boolean
    content.vb: Public HDmode As Boolean
- uid: Global.DaddyGraphics.Eye.palette
  commentId: F:Global.DaddyGraphics.Eye.palette
  id: palette
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: palette
  nameWithType: DaddyGraphics.Eye.palette
  fullName: DaddyGraphics.Eye.palette
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.palette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomPalette palette
    return:
      type: Global.RoomPalette
    content.vb: Public palette As RoomPalette
- uid: Global.DaddyGraphics.Eye.focus
  commentId: F:Global.DaddyGraphics.Eye.focus
  id: focus
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: focus
  nameWithType: DaddyGraphics.Eye.focus
  fullName: DaddyGraphics.Eye.focus
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.focus</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float focus
    return:
      type: System.Single
    content.vb: Public focus As Single
- uid: Global.DaddyGraphics.Eye.lastFocus
  commentId: F:Global.DaddyGraphics.Eye.lastFocus
  id: lastFocus
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: lastFocus
  nameWithType: DaddyGraphics.Eye.lastFocus
  fullName: DaddyGraphics.Eye.lastFocus
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.lastFocus</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastFocus
    return:
      type: System.Single
    content.vb: Public lastFocus As Single
- uid: Global.DaddyGraphics.Eye.getToFocus
  commentId: F:Global.DaddyGraphics.Eye.getToFocus
  id: getToFocus
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: getToFocus
  nameWithType: DaddyGraphics.Eye.getToFocus
  fullName: DaddyGraphics.Eye.getToFocus
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.getToFocus</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float getToFocus
    return:
      type: System.Single
    content.vb: Public getToFocus As Single
- uid: Global.DaddyGraphics.Eye.closed
  commentId: F:Global.DaddyGraphics.Eye.closed
  id: closed
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: closed
  nameWithType: DaddyGraphics.Eye.closed
  fullName: DaddyGraphics.Eye.closed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.closed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float closed
    return:
      type: System.Single
    content.vb: Public closed As Single
- uid: Global.DaddyGraphics.Eye.lastClosed
  commentId: F:Global.DaddyGraphics.Eye.lastClosed
  id: lastClosed
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: lastClosed
  nameWithType: DaddyGraphics.Eye.lastClosed
  fullName: DaddyGraphics.Eye.lastClosed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.lastClosed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastClosed
    return:
      type: System.Single
    content.vb: Public lastClosed As Single
- uid: Global.DaddyGraphics.Eye.owner
  commentId: F:Global.DaddyGraphics.Eye.owner
  id: owner
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: DaddyGraphics.Eye.owner
  fullName: DaddyGraphics.Eye.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GraphicsModule owner
    return:
      type: Global.GraphicsModule
    content.vb: Public owner As GraphicsModule
- uid: Global.DaddyGraphics.Eye.soundSource
  commentId: F:Global.DaddyGraphics.Eye.soundSource
  id: soundSource
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: soundSource
  nameWithType: DaddyGraphics.Eye.soundSource
  fullName: DaddyGraphics.Eye.soundSource
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.soundSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public NoiseTracker.TheorizedSource soundSource
    return:
      type: Global.NoiseTracker.TheorizedSource
    content.vb: Public soundSource As NoiseTracker.TheorizedSource
- uid: Global.DaddyGraphics.Eye.creatureRep
  commentId: F:Global.DaddyGraphics.Eye.creatureRep
  id: creatureRep
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: creatureRep
  nameWithType: DaddyGraphics.Eye.creatureRep
  fullName: DaddyGraphics.Eye.creatureRep
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.creatureRep</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation creatureRep
    return:
      type: Global.Tracker.CreatureRepresentation
    content.vb: Public creatureRep As Tracker.CreatureRepresentation
- uid: Global.DaddyGraphics.Eye.light
  commentId: F:Global.DaddyGraphics.Eye.light
  id: light
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: light
  nameWithType: DaddyGraphics.Eye.light
  fullName: DaddyGraphics.Eye.light
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.light</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float light
    return:
      type: System.Single
    content.vb: Public light As Single
- uid: Global.DaddyGraphics.Eye.flash
  commentId: F:Global.DaddyGraphics.Eye.flash
  id: flash
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: flash
  nameWithType: DaddyGraphics.Eye.flash
  fullName: DaddyGraphics.Eye.flash
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.flash</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float flash
    return:
      type: System.Single
    content.vb: Public flash As Single
- uid: Global.DaddyGraphics.Eye.centerRenderPos
  commentId: F:Global.DaddyGraphics.Eye.centerRenderPos
  id: centerRenderPos
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: centerRenderPos
  nameWithType: DaddyGraphics.Eye.centerRenderPos
  fullName: DaddyGraphics.Eye.centerRenderPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.centerRenderPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 centerRenderPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public centerRenderPos As Vector2
- uid: Global.DaddyGraphics.Eye.renderColor
  commentId: F:Global.DaddyGraphics.Eye.renderColor
  id: renderColor
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: renderColor
  nameWithType: DaddyGraphics.Eye.renderColor
  fullName: DaddyGraphics.Eye.renderColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.Eye.renderColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color renderColor
    return:
      type: UnityEngine.Color
    content.vb: Public renderColor As Color
- uid: Global.DaddyGraphics.Eye.#ctor(GraphicsModule,DaddyGraphics.IHaveRotGraphics,System.Int32,System.Single,System.Boolean,System.Int32)
  commentId: M:Global.DaddyGraphics.Eye.#ctor(GraphicsModule,DaddyGraphics.IHaveRotGraphics,System.Int32,System.Single,System.Boolean,System.Int32)
  id: '#ctor(GraphicsModule,DaddyGraphics.IHaveRotGraphics,System.Int32,System.Single,System.Boolean,System.Int32)'
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: Eye(GraphicsModule, IHaveRotGraphics, int, float, bool, int)
  nameWithType: DaddyGraphics.Eye.Eye(GraphicsModule, DaddyGraphics.IHaveRotGraphics, int, float, bool, int)
  fullName: DaddyGraphics.Eye.Eye(GraphicsModule, DaddyGraphics.IHaveRotGraphics, int, float, bool, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>DaddyGraphics.Eye</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Eye(GraphicsModule owner, DaddyGraphics.IHaveRotGraphics rotOwner, int index, float rad, bool HDmode, int firstSprite)
    parameters:
    - id: owner
      type: Global.GraphicsModule
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:DaddyGraphics.Eye.#ctor(GraphicsModule,DaddyGraphics.IHaveRotGraphics,System.Int32,System.Single,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
    - id: rotOwner
      type: Global.DaddyGraphics.IHaveRotGraphics
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rotOwner</parameter>
            <parameter>M:DaddyGraphics.Eye.#ctor(GraphicsModule,DaddyGraphics.IHaveRotGraphics,System.Int32,System.Single,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:DaddyGraphics.Eye.#ctor(GraphicsModule,DaddyGraphics.IHaveRotGraphics,System.Int32,System.Single,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:DaddyGraphics.Eye.#ctor(GraphicsModule,DaddyGraphics.IHaveRotGraphics,System.Int32,System.Single,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
    - id: HDmode
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>HDmode</parameter>
            <parameter>M:DaddyGraphics.Eye.#ctor(GraphicsModule,DaddyGraphics.IHaveRotGraphics,System.Int32,System.Single,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
    - id: firstSprite
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstSprite</parameter>
            <parameter>M:DaddyGraphics.Eye.#ctor(GraphicsModule,DaddyGraphics.IHaveRotGraphics,System.Int32,System.Single,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As GraphicsModule, rotOwner As DaddyGraphics.IHaveRotGraphics, index As Integer, rad As Single, HDmode As Boolean, firstSprite As Integer)
  overload: Global.DaddyGraphics.Eye.#ctor*
  nameWithType.vb: DaddyGraphics.Eye.New(GraphicsModule, DaddyGraphics.IHaveRotGraphics, Integer, Single, Boolean, Integer)
  fullName.vb: DaddyGraphics.Eye.New(GraphicsModule, DaddyGraphics.IHaveRotGraphics, Integer, Single, Boolean, Integer)
  name.vb: New(GraphicsModule, IHaveRotGraphics, Integer, Single, Boolean, Integer)
- uid: Global.DaddyGraphics.Eye.Update
  commentId: M:Global.DaddyGraphics.Eye.Update
  id: Update
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: DaddyGraphics.Eye.Update()
  fullName: DaddyGraphics.Eye.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.Eye.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.DaddyGraphics.Eye.Update*
- uid: Global.DaddyGraphics.Eye.ReactToSound(NoiseTracker.TheorizedSource)
  commentId: M:Global.DaddyGraphics.Eye.ReactToSound(NoiseTracker.TheorizedSource)
  id: ReactToSound(NoiseTracker.TheorizedSource)
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: ReactToSound(TheorizedSource)
  nameWithType: DaddyGraphics.Eye.ReactToSound(NoiseTracker.TheorizedSource)
  fullName: DaddyGraphics.Eye.ReactToSound(NoiseTracker.TheorizedSource)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.Eye.ReactToSound(NoiseTracker.TheorizedSource)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReactToSound(NoiseTracker.TheorizedSource newSound)
    parameters:
    - id: newSound
      type: Global.NoiseTracker.TheorizedSource
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newSound</parameter>
            <parameter>M:DaddyGraphics.Eye.ReactToSound(NoiseTracker.TheorizedSource)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ReactToSound(newSound As NoiseTracker.TheorizedSource)
  overload: Global.DaddyGraphics.Eye.ReactToSound*
- uid: Global.DaddyGraphics.Eye.ReactToCreature(Tracker.CreatureRepresentation)
  commentId: M:Global.DaddyGraphics.Eye.ReactToCreature(Tracker.CreatureRepresentation)
  id: ReactToCreature(Tracker.CreatureRepresentation)
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: ReactToCreature(CreatureRepresentation)
  nameWithType: DaddyGraphics.Eye.ReactToCreature(Tracker.CreatureRepresentation)
  fullName: DaddyGraphics.Eye.ReactToCreature(Tracker.CreatureRepresentation)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.Eye.ReactToCreature(Tracker.CreatureRepresentation)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReactToCreature(Tracker.CreatureRepresentation newCrit)
    parameters:
    - id: newCrit
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newCrit</parameter>
            <parameter>M:DaddyGraphics.Eye.ReactToCreature(Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ReactToCreature(newCrit As Tracker.CreatureRepresentation)
  overload: Global.DaddyGraphics.Eye.ReactToCreature*
- uid: Global.DaddyGraphics.Eye.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.DaddyGraphics.Eye.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: DaddyGraphics.Eye.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: DaddyGraphics.Eye.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.Eye.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:DaddyGraphics.Eye.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:DaddyGraphics.Eye.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.DaddyGraphics.Eye.InitiateSprites*
- uid: Global.DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: DrawSprite(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprite(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprite(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.DaddyGraphics.Eye.DrawSprite*
  nameWithType.vb: DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: DaddyGraphics.Eye.DrawSprite(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprite(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.DaddyGraphics.Eye.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.DaddyGraphics.Eye.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: DaddyGraphics.Eye.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: DaddyGraphics.Eye.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.Eye.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:DaddyGraphics.Eye.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:DaddyGraphics.Eye.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:DaddyGraphics.Eye.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.DaddyGraphics.Eye.ApplyPalette*
- uid: Global.DaddyGraphics.Eye.GetColor
  commentId: M:Global.DaddyGraphics.Eye.GetColor
  id: GetColor
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: GetColor()
  nameWithType: DaddyGraphics.Eye.GetColor()
  fullName: DaddyGraphics.Eye.GetColor()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.Eye.GetColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color GetColor()
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:DaddyGraphics.Eye.GetColor</parameter>
          </include>
        </markup>
    content.vb: Public Function GetColor() As Color
  overload: Global.DaddyGraphics.Eye.GetColor*
  implements:
  - Global.DaddyGraphics.DaddyBubbleOwner.GetColor
- uid: Global.DaddyGraphics.Eye.GetEyeColor
  commentId: M:Global.DaddyGraphics.Eye.GetEyeColor
  id: GetEyeColor
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: GetEyeColor()
  nameWithType: DaddyGraphics.Eye.GetEyeColor()
  fullName: DaddyGraphics.Eye.GetEyeColor()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.Eye.GetEyeColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color GetEyeColor()
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:DaddyGraphics.Eye.GetEyeColor</parameter>
          </include>
        </markup>
    content.vb: Public Function GetEyeColor() As Color
  overload: Global.DaddyGraphics.Eye.GetEyeColor*
  implements:
  - Global.DaddyGraphics.DaddyBubbleOwner.GetEyeColor
- uid: Global.DaddyGraphics.Eye.GetPosition
  commentId: M:Global.DaddyGraphics.Eye.GetPosition
  id: GetPosition
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: GetPosition()
  nameWithType: DaddyGraphics.Eye.GetPosition()
  fullName: DaddyGraphics.Eye.GetPosition()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.Eye.GetPosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 GetPosition()
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:DaddyGraphics.Eye.GetPosition</parameter>
          </include>
        </markup>
    content.vb: Public Function GetPosition() As Vector2
  overload: Global.DaddyGraphics.Eye.GetPosition*
  implements:
  - Global.DaddyGraphics.DaddyBubbleOwner.GetPosition
- uid: Global.DaddyGraphics.Eye.chunk
  commentId: P:Global.DaddyGraphics.Eye.chunk
  id: chunk
  parent: Global.DaddyGraphics.Eye
  langs:
  - csharp
  - vb
  name: chunk
  nameWithType: DaddyGraphics.Eye.chunk
  fullName: DaddyGraphics.Eye.chunk
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyGraphics.Eye.chunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk chunk { get; }
    parameters: []
    return:
      type: Global.BodyChunk
    content.vb: Public ReadOnly Property chunk As BodyChunk
  overload: Global.DaddyGraphics.Eye.chunk*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.DaddyGraphics.DaddyBubbleOwner
  commentId: T:Global.DaddyGraphics.DaddyBubbleOwner
  isExternal: true
  href: DaddyGraphics.html
  name: DaddyGraphics.DaddyBubbleOwner
  nameWithType: DaddyGraphics.DaddyBubbleOwner
  fullName: DaddyGraphics.DaddyBubbleOwner
  spec.csharp:
  - uid: Global.DaddyGraphics
    name: DaddyGraphics
    isExternal: true
    href: DaddyGraphics.html
  - name: .
  - uid: Global.DaddyGraphics.DaddyBubbleOwner
    name: DaddyBubbleOwner
    isExternal: true
    href: DaddyGraphics.DaddyBubbleOwner.html
  spec.vb:
  - uid: Global.DaddyGraphics
    name: DaddyGraphics
    isExternal: true
    href: DaddyGraphics.html
  - name: .
  - uid: Global.DaddyGraphics.DaddyBubbleOwner
    name: DaddyBubbleOwner
    isExternal: true
    href: DaddyGraphics.DaddyBubbleOwner.html
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.DaddyGraphics.IHaveRotGraphics
  commentId: T:Global.DaddyGraphics.IHaveRotGraphics
  isExternal: true
  href: DaddyGraphics.html
  name: DaddyGraphics.IHaveRotGraphics
  nameWithType: DaddyGraphics.IHaveRotGraphics
  fullName: DaddyGraphics.IHaveRotGraphics
  spec.csharp:
  - uid: Global.DaddyGraphics
    name: DaddyGraphics
    isExternal: true
    href: DaddyGraphics.html
  - name: .
  - uid: Global.DaddyGraphics.IHaveRotGraphics
    name: IHaveRotGraphics
    isExternal: true
    href: DaddyGraphics.IHaveRotGraphics.html
  spec.vb:
  - uid: Global.DaddyGraphics
    name: DaddyGraphics
    isExternal: true
    href: DaddyGraphics.html
  - name: .
  - uid: Global.DaddyGraphics.IHaveRotGraphics
    name: IHaveRotGraphics
    isExternal: true
    href: DaddyGraphics.IHaveRotGraphics.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.GraphicsModule
  commentId: T:Global.GraphicsModule
  isExternal: true
  href: GraphicsModule.html
  name: GraphicsModule
  nameWithType: GraphicsModule
  fullName: GraphicsModule
- uid: Global.NoiseTracker.TheorizedSource
  commentId: T:Global.NoiseTracker.TheorizedSource
  isExternal: true
  href: NoiseTracker.html
  name: NoiseTracker.TheorizedSource
  nameWithType: NoiseTracker.TheorizedSource
  fullName: NoiseTracker.TheorizedSource
  spec.csharp:
  - uid: Global.NoiseTracker
    name: NoiseTracker
    isExternal: true
    href: NoiseTracker.html
  - name: .
  - uid: Global.NoiseTracker.TheorizedSource
    name: TheorizedSource
    isExternal: true
    href: NoiseTracker.TheorizedSource.html
  spec.vb:
  - uid: Global.NoiseTracker
    name: NoiseTracker
    isExternal: true
    href: NoiseTracker.html
  - name: .
  - uid: Global.NoiseTracker.TheorizedSource
    name: TheorizedSource
    isExternal: true
    href: NoiseTracker.TheorizedSource.html
- uid: Global.Tracker.CreatureRepresentation
  commentId: T:Global.Tracker.CreatureRepresentation
  isExternal: true
  href: Tracker.html
  name: Tracker.CreatureRepresentation
  nameWithType: Tracker.CreatureRepresentation
  fullName: Tracker.CreatureRepresentation
  spec.csharp:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  spec.vb:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.DaddyGraphics.Eye.#ctor*
  commentId: Overload:Global.DaddyGraphics.Eye.#ctor
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye__ctor_GraphicsModule_DaddyGraphics_IHaveRotGraphics_System_Int32_System_Single_System_Boolean_System_Int32_
  name: Eye
  nameWithType: DaddyGraphics.Eye.Eye
  fullName: DaddyGraphics.Eye.Eye
  nameWithType.vb: DaddyGraphics.Eye.New
  fullName.vb: DaddyGraphics.Eye.New
  name.vb: New
- uid: Global.DaddyGraphics.Eye.Update*
  commentId: Overload:Global.DaddyGraphics.Eye.Update
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye_Update
  name: Update
  nameWithType: DaddyGraphics.Eye.Update
  fullName: DaddyGraphics.Eye.Update
- uid: Global.DaddyGraphics.Eye.ReactToSound*
  commentId: Overload:Global.DaddyGraphics.Eye.ReactToSound
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye_ReactToSound_NoiseTracker_TheorizedSource_
  name: ReactToSound
  nameWithType: DaddyGraphics.Eye.ReactToSound
  fullName: DaddyGraphics.Eye.ReactToSound
- uid: Global.DaddyGraphics.Eye.ReactToCreature*
  commentId: Overload:Global.DaddyGraphics.Eye.ReactToCreature
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye_ReactToCreature_Tracker_CreatureRepresentation_
  name: ReactToCreature
  nameWithType: DaddyGraphics.Eye.ReactToCreature
  fullName: DaddyGraphics.Eye.ReactToCreature
- uid: Global.DaddyGraphics.Eye.InitiateSprites*
  commentId: Overload:Global.DaddyGraphics.Eye.InitiateSprites
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: DaddyGraphics.Eye.InitiateSprites
  fullName: DaddyGraphics.Eye.InitiateSprites
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.DaddyGraphics.Eye.DrawSprite*
  commentId: Overload:Global.DaddyGraphics.Eye.DrawSprite
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye_DrawSprite_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprite
  nameWithType: DaddyGraphics.Eye.DrawSprite
  fullName: DaddyGraphics.Eye.DrawSprite
- uid: Global.DaddyGraphics.Eye.ApplyPalette*
  commentId: Overload:Global.DaddyGraphics.Eye.ApplyPalette
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: DaddyGraphics.Eye.ApplyPalette
  fullName: DaddyGraphics.Eye.ApplyPalette
- uid: Global.DaddyGraphics.Eye.GetColor*
  commentId: Overload:Global.DaddyGraphics.Eye.GetColor
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye_GetColor
  name: GetColor
  nameWithType: DaddyGraphics.Eye.GetColor
  fullName: DaddyGraphics.Eye.GetColor
- uid: Global.DaddyGraphics.DaddyBubbleOwner.GetColor
  commentId: M:Global.DaddyGraphics.DaddyBubbleOwner.GetColor
  parent: Global.DaddyGraphics.DaddyBubbleOwner
  isExternal: true
  href: Global.DaddyGraphics.DaddyBubbleOwner.html#DaddyGraphics_DaddyBubbleOwner_GetColor
  name: GetColor()
  nameWithType: DaddyGraphics.DaddyBubbleOwner.GetColor()
  fullName: DaddyGraphics.DaddyBubbleOwner.GetColor()
  spec.csharp:
  - uid: Global.DaddyGraphics.DaddyBubbleOwner.GetColor
    name: GetColor
    isExternal: true
    href: Global.DaddyGraphics.DaddyBubbleOwner.html#DaddyGraphics_DaddyBubbleOwner_GetColor
  - name: (
  - name: )
  spec.vb:
  - uid: Global.DaddyGraphics.DaddyBubbleOwner.GetColor
    name: GetColor
    isExternal: true
    href: Global.DaddyGraphics.DaddyBubbleOwner.html#DaddyGraphics_DaddyBubbleOwner_GetColor
  - name: (
  - name: )
- uid: Global.DaddyGraphics.Eye.GetEyeColor*
  commentId: Overload:Global.DaddyGraphics.Eye.GetEyeColor
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye_GetEyeColor
  name: GetEyeColor
  nameWithType: DaddyGraphics.Eye.GetEyeColor
  fullName: DaddyGraphics.Eye.GetEyeColor
- uid: Global.DaddyGraphics.DaddyBubbleOwner.GetEyeColor
  commentId: M:Global.DaddyGraphics.DaddyBubbleOwner.GetEyeColor
  parent: Global.DaddyGraphics.DaddyBubbleOwner
  isExternal: true
  href: Global.DaddyGraphics.DaddyBubbleOwner.html#DaddyGraphics_DaddyBubbleOwner_GetEyeColor
  name: GetEyeColor()
  nameWithType: DaddyGraphics.DaddyBubbleOwner.GetEyeColor()
  fullName: DaddyGraphics.DaddyBubbleOwner.GetEyeColor()
  spec.csharp:
  - uid: Global.DaddyGraphics.DaddyBubbleOwner.GetEyeColor
    name: GetEyeColor
    isExternal: true
    href: Global.DaddyGraphics.DaddyBubbleOwner.html#DaddyGraphics_DaddyBubbleOwner_GetEyeColor
  - name: (
  - name: )
  spec.vb:
  - uid: Global.DaddyGraphics.DaddyBubbleOwner.GetEyeColor
    name: GetEyeColor
    isExternal: true
    href: Global.DaddyGraphics.DaddyBubbleOwner.html#DaddyGraphics_DaddyBubbleOwner_GetEyeColor
  - name: (
  - name: )
- uid: Global.DaddyGraphics.Eye.GetPosition*
  commentId: Overload:Global.DaddyGraphics.Eye.GetPosition
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye_GetPosition
  name: GetPosition
  nameWithType: DaddyGraphics.Eye.GetPosition
  fullName: DaddyGraphics.Eye.GetPosition
- uid: Global.DaddyGraphics.DaddyBubbleOwner.GetPosition
  commentId: M:Global.DaddyGraphics.DaddyBubbleOwner.GetPosition
  parent: Global.DaddyGraphics.DaddyBubbleOwner
  isExternal: true
  href: Global.DaddyGraphics.DaddyBubbleOwner.html#DaddyGraphics_DaddyBubbleOwner_GetPosition
  name: GetPosition()
  nameWithType: DaddyGraphics.DaddyBubbleOwner.GetPosition()
  fullName: DaddyGraphics.DaddyBubbleOwner.GetPosition()
  spec.csharp:
  - uid: Global.DaddyGraphics.DaddyBubbleOwner.GetPosition
    name: GetPosition
    isExternal: true
    href: Global.DaddyGraphics.DaddyBubbleOwner.html#DaddyGraphics_DaddyBubbleOwner_GetPosition
  - name: (
  - name: )
  spec.vb:
  - uid: Global.DaddyGraphics.DaddyBubbleOwner.GetPosition
    name: GetPosition
    isExternal: true
    href: Global.DaddyGraphics.DaddyBubbleOwner.html#DaddyGraphics_DaddyBubbleOwner_GetPosition
  - name: (
  - name: )
- uid: Global.DaddyGraphics.Eye.chunk*
  commentId: Overload:Global.DaddyGraphics.Eye.chunk
  isExternal: true
  href: Global.DaddyGraphics.Eye.html#DaddyGraphics_Eye_chunk
  name: chunk
  nameWithType: DaddyGraphics.Eye.chunk
  fullName: DaddyGraphics.Eye.chunk
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
