### YamlMime:ManagedReference
items:
- uid: Global.LocustSystem.GroundLocust
  commentId: T:Global.LocustSystem.GroundLocust
  id: LocustSystem.GroundLocust
  parent: Global
  children:
  - Global.LocustSystem.GroundLocust.#ctor(LocustSystem.CloudLocust)
  - Global.LocustSystem.GroundLocust.#ctor(UnityEngine.Vector2,System.Single,System.Single)
  - Global.LocustSystem.GroundLocust.Idle(System.Int32)
  - Global.LocustSystem.GroundLocust.Poisoned
  - Global.LocustSystem.GroundLocust.TargetHeight
  - Global.LocustSystem.GroundLocust.Update(LocustSystem)
  - Global.LocustSystem.GroundLocust.alive
  - Global.LocustSystem.GroundLocust.attachedToChunk
  - Global.LocustSystem.GroundLocust.burrowCounter
  - Global.LocustSystem.GroundLocust.burrowDuration
  - Global.LocustSystem.GroundLocust.depth
  - Global.LocustSystem.GroundLocust.drag
  - Global.LocustSystem.GroundLocust.facing
  - Global.LocustSystem.GroundLocust.groundNormal
  - Global.LocustSystem.GroundLocust.lastDepth
  - Global.LocustSystem.GroundLocust.lastPos
  - Global.LocustSystem.GroundLocust.poisonCounter
  - Global.LocustSystem.GroundLocust.poisonDuration
  - Global.LocustSystem.GroundLocust.pos
  - Global.LocustSystem.GroundLocust.seed
  - Global.LocustSystem.GroundLocust.swarm
  - Global.LocustSystem.GroundLocust.swarmDrag
  - Global.LocustSystem.GroundLocust.vel
  langs:
  - csharp
  - vb
  name: LocustSystem.GroundLocust
  nameWithType: LocustSystem.GroundLocust
  fullName: LocustSystem.GroundLocust
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LocustSystem.GroundLocust</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class LocustSystem.GroundLocust
    content.vb: Public Class LocustSystem.GroundLocust
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LocustSystem.GroundLocust.pos
  commentId: F:Global.LocustSystem.GroundLocust.pos
  id: pos
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: LocustSystem.GroundLocust.pos
  fullName: LocustSystem.GroundLocust.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Global.LocustSystem.GroundLocust.lastPos
  commentId: F:Global.LocustSystem.GroundLocust.lastPos
  id: lastPos
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: LocustSystem.GroundLocust.lastPos
  fullName: LocustSystem.GroundLocust.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: Global.LocustSystem.GroundLocust.vel
  commentId: F:Global.LocustSystem.GroundLocust.vel
  id: vel
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: vel
  nameWithType: LocustSystem.GroundLocust.vel
  fullName: LocustSystem.GroundLocust.vel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.vel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 vel
    return:
      type: UnityEngine.Vector2
    content.vb: Public vel As Vector2
- uid: Global.LocustSystem.GroundLocust.seed
  commentId: F:Global.LocustSystem.GroundLocust.seed
  id: seed
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: seed
  nameWithType: LocustSystem.GroundLocust.seed
  fullName: LocustSystem.GroundLocust.seed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.seed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float seed
    return:
      type: System.Single
    content.vb: Public seed As Single
- uid: Global.LocustSystem.GroundLocust.depth
  commentId: F:Global.LocustSystem.GroundLocust.depth
  id: depth
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: depth
  nameWithType: LocustSystem.GroundLocust.depth
  fullName: LocustSystem.GroundLocust.depth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.depth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float depth
    return:
      type: System.Single
    content.vb: Public depth As Single
- uid: Global.LocustSystem.GroundLocust.alive
  commentId: F:Global.LocustSystem.GroundLocust.alive
  id: alive
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: alive
  nameWithType: LocustSystem.GroundLocust.alive
  fullName: LocustSystem.GroundLocust.alive
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.alive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool alive
    return:
      type: System.Boolean
    content.vb: Public alive As Boolean
- uid: Global.LocustSystem.GroundLocust.groundNormal
  commentId: F:Global.LocustSystem.GroundLocust.groundNormal
  id: groundNormal
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: groundNormal
  nameWithType: LocustSystem.GroundLocust.groundNormal
  fullName: LocustSystem.GroundLocust.groundNormal
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.groundNormal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? groundNormal
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public groundNormal As Vector2?
- uid: Global.LocustSystem.GroundLocust.facing
  commentId: F:Global.LocustSystem.GroundLocust.facing
  id: facing
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: facing
  nameWithType: LocustSystem.GroundLocust.facing
  fullName: LocustSystem.GroundLocust.facing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.facing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 facing
    return:
      type: UnityEngine.Vector2
    content.vb: Public facing As Vector2
- uid: Global.LocustSystem.GroundLocust.lastDepth
  commentId: F:Global.LocustSystem.GroundLocust.lastDepth
  id: lastDepth
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: lastDepth
  nameWithType: LocustSystem.GroundLocust.lastDepth
  fullName: LocustSystem.GroundLocust.lastDepth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.lastDepth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastDepth
    return:
      type: System.Single
    content.vb: Public lastDepth As Single
- uid: Global.LocustSystem.GroundLocust.poisonCounter
  commentId: F:Global.LocustSystem.GroundLocust.poisonCounter
  id: poisonCounter
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: poisonCounter
  nameWithType: LocustSystem.GroundLocust.poisonCounter
  fullName: LocustSystem.GroundLocust.poisonCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.poisonCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int poisonCounter
    return:
      type: System.Int32
    content.vb: Public poisonCounter As Integer
- uid: Global.LocustSystem.GroundLocust.swarm
  commentId: F:Global.LocustSystem.GroundLocust.swarm
  id: swarm
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: swarm
  nameWithType: LocustSystem.GroundLocust.swarm
  fullName: LocustSystem.GroundLocust.swarm
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.swarm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LocustSystem.Swarm swarm
    return:
      type: Global.LocustSystem.Swarm
    content.vb: Public swarm As LocustSystem.Swarm
- uid: Global.LocustSystem.GroundLocust.attachedToChunk
  commentId: F:Global.LocustSystem.GroundLocust.attachedToChunk
  id: attachedToChunk
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: attachedToChunk
  nameWithType: LocustSystem.GroundLocust.attachedToChunk
  fullName: LocustSystem.GroundLocust.attachedToChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.attachedToChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk attachedToChunk
    return:
      type: Global.BodyChunk
    content.vb: Public attachedToChunk As BodyChunk
- uid: Global.LocustSystem.GroundLocust.burrowCounter
  commentId: F:Global.LocustSystem.GroundLocust.burrowCounter
  id: burrowCounter
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: burrowCounter
  nameWithType: LocustSystem.GroundLocust.burrowCounter
  fullName: LocustSystem.GroundLocust.burrowCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.burrowCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int burrowCounter
    return:
      type: System.Int32
    content.vb: Public burrowCounter As Integer
- uid: Global.LocustSystem.GroundLocust.burrowDuration
  commentId: F:Global.LocustSystem.GroundLocust.burrowDuration
  id: burrowDuration
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: burrowDuration
  nameWithType: LocustSystem.GroundLocust.burrowDuration
  fullName: LocustSystem.GroundLocust.burrowDuration
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.burrowDuration</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int burrowDuration = 30
    return:
      type: System.Int32
    content.vb: Public Const burrowDuration As Integer = 30
- uid: Global.LocustSystem.GroundLocust.poisonDuration
  commentId: F:Global.LocustSystem.GroundLocust.poisonDuration
  id: poisonDuration
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: poisonDuration
  nameWithType: LocustSystem.GroundLocust.poisonDuration
  fullName: LocustSystem.GroundLocust.poisonDuration
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.poisonDuration</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int poisonDuration = 240
    return:
      type: System.Int32
    content.vb: Public Const poisonDuration As Integer = 240
- uid: Global.LocustSystem.GroundLocust.drag
  commentId: F:Global.LocustSystem.GroundLocust.drag
  id: drag
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: drag
  nameWithType: LocustSystem.GroundLocust.drag
  fullName: LocustSystem.GroundLocust.drag
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.drag</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const float drag = 0.98
    return:
      type: System.Single
    content.vb: Public Const drag As Single = 0.98
- uid: Global.LocustSystem.GroundLocust.swarmDrag
  commentId: F:Global.LocustSystem.GroundLocust.swarmDrag
  id: swarmDrag
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: swarmDrag
  nameWithType: LocustSystem.GroundLocust.swarmDrag
  fullName: LocustSystem.GroundLocust.swarmDrag
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.GroundLocust.swarmDrag</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const float swarmDrag = 0.93
    return:
      type: System.Single
    content.vb: Public Const swarmDrag As Single = 0.93
- uid: Global.LocustSystem.GroundLocust.#ctor(UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.LocustSystem.GroundLocust.#ctor(UnityEngine.Vector2,System.Single,System.Single)
  id: '#ctor(UnityEngine.Vector2,System.Single,System.Single)'
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: GroundLocust(Vector2, float, float)
  nameWithType: LocustSystem.GroundLocust.GroundLocust(Vector2, float, float)
  fullName: LocustSystem.GroundLocust.GroundLocust(UnityEngine.Vector2, float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LocustSystem.GroundLocust</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GroundLocust(Vector2 pos, float seed, float depth)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:LocustSystem.GroundLocust.#ctor(UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: seed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>seed</parameter>
            <parameter>M:LocustSystem.GroundLocust.#ctor(UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: depth
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>depth</parameter>
            <parameter>M:LocustSystem.GroundLocust.#ctor(UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(pos As Vector2, seed As Single, depth As Single)
  overload: Global.LocustSystem.GroundLocust.#ctor*
  nameWithType.vb: LocustSystem.GroundLocust.New(Vector2, Single, Single)
  fullName.vb: LocustSystem.GroundLocust.New(UnityEngine.Vector2, Single, Single)
  name.vb: New(Vector2, Single, Single)
- uid: Global.LocustSystem.GroundLocust.#ctor(LocustSystem.CloudLocust)
  commentId: M:Global.LocustSystem.GroundLocust.#ctor(LocustSystem.CloudLocust)
  id: '#ctor(LocustSystem.CloudLocust)'
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: GroundLocust(CloudLocust)
  nameWithType: LocustSystem.GroundLocust.GroundLocust(LocustSystem.CloudLocust)
  fullName: LocustSystem.GroundLocust.GroundLocust(LocustSystem.CloudLocust)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LocustSystem.GroundLocust</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GroundLocust(LocustSystem.CloudLocust cloudLocust)
    parameters:
    - id: cloudLocust
      type: Global.LocustSystem.CloudLocust
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cloudLocust</parameter>
            <parameter>M:LocustSystem.GroundLocust.#ctor(LocustSystem.CloudLocust)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(cloudLocust As LocustSystem.CloudLocust)
  overload: Global.LocustSystem.GroundLocust.#ctor*
  nameWithType.vb: LocustSystem.GroundLocust.New(LocustSystem.CloudLocust)
  fullName.vb: LocustSystem.GroundLocust.New(LocustSystem.CloudLocust)
  name.vb: New(CloudLocust)
- uid: Global.LocustSystem.GroundLocust.Idle(System.Int32)
  commentId: M:Global.LocustSystem.GroundLocust.Idle(System.Int32)
  id: Idle(System.Int32)
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: Idle(int)
  nameWithType: LocustSystem.GroundLocust.Idle(int)
  fullName: LocustSystem.GroundLocust.Idle(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LocustSystem.GroundLocust.Idle(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Idle(int time)
    parameters:
    - id: time
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>time</parameter>
            <parameter>M:LocustSystem.GroundLocust.Idle(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Idle(time As Integer)
  overload: Global.LocustSystem.GroundLocust.Idle*
  nameWithType.vb: LocustSystem.GroundLocust.Idle(Integer)
  fullName.vb: LocustSystem.GroundLocust.Idle(Integer)
  name.vb: Idle(Integer)
- uid: Global.LocustSystem.GroundLocust.Update(LocustSystem)
  commentId: M:Global.LocustSystem.GroundLocust.Update(LocustSystem)
  id: Update(LocustSystem)
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: Update(LocustSystem)
  nameWithType: LocustSystem.GroundLocust.Update(LocustSystem)
  fullName: LocustSystem.GroundLocust.Update(LocustSystem)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LocustSystem.GroundLocust.Update(LocustSystem)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update(LocustSystem owner)
    parameters:
    - id: owner
      type: Global.LocustSystem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:LocustSystem.GroundLocust.Update(LocustSystem)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Update(owner As LocustSystem)
  overload: Global.LocustSystem.GroundLocust.Update*
- uid: Global.LocustSystem.GroundLocust.TargetHeight
  commentId: P:Global.LocustSystem.GroundLocust.TargetHeight
  id: TargetHeight
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: TargetHeight
  nameWithType: LocustSystem.GroundLocust.TargetHeight
  fullName: LocustSystem.GroundLocust.TargetHeight
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LocustSystem.GroundLocust.TargetHeight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TargetHeight { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property TargetHeight As Single
  overload: Global.LocustSystem.GroundLocust.TargetHeight*
- uid: Global.LocustSystem.GroundLocust.Poisoned
  commentId: P:Global.LocustSystem.GroundLocust.Poisoned
  id: Poisoned
  parent: Global.LocustSystem.GroundLocust
  langs:
  - csharp
  - vb
  name: Poisoned
  nameWithType: LocustSystem.GroundLocust.Poisoned
  fullName: LocustSystem.GroundLocust.Poisoned
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LocustSystem.GroundLocust.Poisoned</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Poisoned { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Poisoned As Boolean
  overload: Global.LocustSystem.GroundLocust.Poisoned*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.LocustSystem.Swarm
  commentId: T:Global.LocustSystem.Swarm
  isExternal: true
  href: LocustSystem.html
  name: LocustSystem.Swarm
  nameWithType: LocustSystem.Swarm
  fullName: LocustSystem.Swarm
  spec.csharp:
  - uid: Global.LocustSystem
    name: LocustSystem
    isExternal: true
    href: LocustSystem.html
  - name: .
  - uid: Global.LocustSystem.Swarm
    name: Swarm
    isExternal: true
    href: LocustSystem.Swarm.html
  spec.vb:
  - uid: Global.LocustSystem
    name: LocustSystem
    isExternal: true
    href: LocustSystem.html
  - name: .
  - uid: Global.LocustSystem.Swarm
    name: Swarm
    isExternal: true
    href: LocustSystem.Swarm.html
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.LocustSystem.GroundLocust.#ctor*
  commentId: Overload:Global.LocustSystem.GroundLocust.#ctor
  isExternal: true
  href: Global.LocustSystem.GroundLocust.html#LocustSystem_GroundLocust__ctor_UnityEngine_Vector2_System_Single_System_Single_
  name: GroundLocust
  nameWithType: LocustSystem.GroundLocust.GroundLocust
  fullName: LocustSystem.GroundLocust.GroundLocust
  nameWithType.vb: LocustSystem.GroundLocust.New
  fullName.vb: LocustSystem.GroundLocust.New
  name.vb: New
- uid: Global.LocustSystem.CloudLocust
  commentId: T:Global.LocustSystem.CloudLocust
  isExternal: true
  href: LocustSystem.html
  name: LocustSystem.CloudLocust
  nameWithType: LocustSystem.CloudLocust
  fullName: LocustSystem.CloudLocust
  spec.csharp:
  - uid: Global.LocustSystem
    name: LocustSystem
    isExternal: true
    href: LocustSystem.html
  - name: .
  - uid: Global.LocustSystem.CloudLocust
    name: CloudLocust
    isExternal: true
    href: LocustSystem.CloudLocust.html
  spec.vb:
  - uid: Global.LocustSystem
    name: LocustSystem
    isExternal: true
    href: LocustSystem.html
  - name: .
  - uid: Global.LocustSystem.CloudLocust
    name: CloudLocust
    isExternal: true
    href: LocustSystem.CloudLocust.html
- uid: Global.LocustSystem.GroundLocust.Idle*
  commentId: Overload:Global.LocustSystem.GroundLocust.Idle
  isExternal: true
  href: Global.LocustSystem.GroundLocust.html#LocustSystem_GroundLocust_Idle_System_Int32_
  name: Idle
  nameWithType: LocustSystem.GroundLocust.Idle
  fullName: LocustSystem.GroundLocust.Idle
- uid: Global.LocustSystem.GroundLocust.Update*
  commentId: Overload:Global.LocustSystem.GroundLocust.Update
  isExternal: true
  href: Global.LocustSystem.GroundLocust.html#LocustSystem_GroundLocust_Update_LocustSystem_
  name: Update
  nameWithType: LocustSystem.GroundLocust.Update
  fullName: LocustSystem.GroundLocust.Update
- uid: Global.LocustSystem
  commentId: T:Global.LocustSystem
  isExternal: true
  href: LocustSystem.html
  name: LocustSystem
  nameWithType: LocustSystem
  fullName: LocustSystem
- uid: Global.LocustSystem.GroundLocust.TargetHeight*
  commentId: Overload:Global.LocustSystem.GroundLocust.TargetHeight
  isExternal: true
  href: Global.LocustSystem.GroundLocust.html#LocustSystem_GroundLocust_TargetHeight
  name: TargetHeight
  nameWithType: LocustSystem.GroundLocust.TargetHeight
  fullName: LocustSystem.GroundLocust.TargetHeight
- uid: Global.LocustSystem.GroundLocust.Poisoned*
  commentId: Overload:Global.LocustSystem.GroundLocust.Poisoned
  isExternal: true
  href: Global.LocustSystem.GroundLocust.html#LocustSystem_GroundLocust_Poisoned
  name: Poisoned
  nameWithType: LocustSystem.GroundLocust.Poisoned
  fullName: LocustSystem.GroundLocust.Poisoned
