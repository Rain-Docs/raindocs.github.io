### YamlMime:ManagedReference
items:
- uid: Global.ChunkDynamicSoundLoop
  commentId: T:Global.ChunkDynamicSoundLoop
  id: ChunkDynamicSoundLoop
  parent: Global
  children:
  - Global.ChunkDynamicSoundLoop.#ctor(BodyChunk)
  - Global.ChunkDynamicSoundLoop.InitSound
  - Global.ChunkDynamicSoundLoop.chunk
  langs:
  - csharp
  - vb
  name: ChunkDynamicSoundLoop
  nameWithType: ChunkDynamicSoundLoop
  fullName: ChunkDynamicSoundLoop
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ChunkDynamicSoundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class ChunkDynamicSoundLoop : DynamicSoundLoop'
    content.vb: Public Class ChunkDynamicSoundLoop Inherits DynamicSoundLoop
  inheritance:
  - System.Object
  - Global.DynamicSoundLoop
  inheritedMembers:
  - Global.DynamicSoundLoop.sound
  - Global.DynamicSoundLoop.emitter
  - Global.DynamicSoundLoop.owner
  - Global.DynamicSoundLoop.p
  - Global.DynamicSoundLoop.v
  - Global.DynamicSoundLoop.vg
  - Global.DynamicSoundLoop.destroyClipWhenDone
  - Global.DynamicSoundLoop.soundName
  - Global.DynamicSoundLoop.lastSoundName
  - Global.DynamicSoundLoop.Update
  - Global.DynamicSoundLoop.Pitch
  - Global.DynamicSoundLoop.Volume
  - Global.DynamicSoundLoop.VolumeGroup
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ChunkDynamicSoundLoop.chunk
  commentId: F:Global.ChunkDynamicSoundLoop.chunk
  id: chunk
  parent: Global.ChunkDynamicSoundLoop
  langs:
  - csharp
  - vb
  name: chunk
  nameWithType: ChunkDynamicSoundLoop.chunk
  fullName: ChunkDynamicSoundLoop.chunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ChunkDynamicSoundLoop.chunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk chunk
    return:
      type: Global.BodyChunk
    content.vb: Public chunk As BodyChunk
- uid: Global.ChunkDynamicSoundLoop.#ctor(BodyChunk)
  commentId: M:Global.ChunkDynamicSoundLoop.#ctor(BodyChunk)
  id: '#ctor(BodyChunk)'
  parent: Global.ChunkDynamicSoundLoop
  langs:
  - csharp
  - vb
  name: ChunkDynamicSoundLoop(BodyChunk)
  nameWithType: ChunkDynamicSoundLoop.ChunkDynamicSoundLoop(BodyChunk)
  fullName: ChunkDynamicSoundLoop.ChunkDynamicSoundLoop(BodyChunk)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ChunkDynamicSoundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ChunkDynamicSoundLoop(BodyChunk chunk)
    parameters:
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:ChunkDynamicSoundLoop.#ctor(BodyChunk)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(chunk As BodyChunk)
  overload: Global.ChunkDynamicSoundLoop.#ctor*
  nameWithType.vb: ChunkDynamicSoundLoop.New(BodyChunk)
  fullName.vb: ChunkDynamicSoundLoop.New(BodyChunk)
  name.vb: New(BodyChunk)
- uid: Global.ChunkDynamicSoundLoop.InitSound
  commentId: M:Global.ChunkDynamicSoundLoop.InitSound
  id: InitSound
  parent: Global.ChunkDynamicSoundLoop
  langs:
  - csharp
  - vb
  name: InitSound()
  nameWithType: ChunkDynamicSoundLoop.InitSound()
  fullName: ChunkDynamicSoundLoop.InitSound()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ChunkDynamicSoundLoop.InitSound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected override void InitSound()
    content.vb: Protected Overrides Sub InitSound()
  overridden: Global.DynamicSoundLoop.InitSound
  overload: Global.ChunkDynamicSoundLoop.InitSound*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.DynamicSoundLoop
  commentId: T:Global.DynamicSoundLoop
  isExternal: true
  href: DynamicSoundLoop.html
  name: DynamicSoundLoop
  nameWithType: DynamicSoundLoop
  fullName: DynamicSoundLoop
- uid: Global.DynamicSoundLoop.sound
  commentId: F:Global.DynamicSoundLoop.sound
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_sound
  name: sound
  nameWithType: DynamicSoundLoop.sound
  fullName: DynamicSoundLoop.sound
- uid: Global.DynamicSoundLoop.emitter
  commentId: F:Global.DynamicSoundLoop.emitter
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_emitter
  name: emitter
  nameWithType: DynamicSoundLoop.emitter
  fullName: DynamicSoundLoop.emitter
- uid: Global.DynamicSoundLoop.owner
  commentId: F:Global.DynamicSoundLoop.owner
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_owner
  name: owner
  nameWithType: DynamicSoundLoop.owner
  fullName: DynamicSoundLoop.owner
- uid: Global.DynamicSoundLoop.p
  commentId: F:Global.DynamicSoundLoop.p
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_p
  name: p
  nameWithType: DynamicSoundLoop.p
  fullName: DynamicSoundLoop.p
- uid: Global.DynamicSoundLoop.v
  commentId: F:Global.DynamicSoundLoop.v
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_v
  name: v
  nameWithType: DynamicSoundLoop.v
  fullName: DynamicSoundLoop.v
- uid: Global.DynamicSoundLoop.vg
  commentId: F:Global.DynamicSoundLoop.vg
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_vg
  name: vg
  nameWithType: DynamicSoundLoop.vg
  fullName: DynamicSoundLoop.vg
- uid: Global.DynamicSoundLoop.destroyClipWhenDone
  commentId: F:Global.DynamicSoundLoop.destroyClipWhenDone
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_destroyClipWhenDone
  name: destroyClipWhenDone
  nameWithType: DynamicSoundLoop.destroyClipWhenDone
  fullName: DynamicSoundLoop.destroyClipWhenDone
- uid: Global.DynamicSoundLoop.soundName
  commentId: F:Global.DynamicSoundLoop.soundName
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_soundName
  name: soundName
  nameWithType: DynamicSoundLoop.soundName
  fullName: DynamicSoundLoop.soundName
- uid: Global.DynamicSoundLoop.lastSoundName
  commentId: F:Global.DynamicSoundLoop.lastSoundName
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_lastSoundName
  name: lastSoundName
  nameWithType: DynamicSoundLoop.lastSoundName
  fullName: DynamicSoundLoop.lastSoundName
- uid: Global.DynamicSoundLoop.Update
  commentId: M:Global.DynamicSoundLoop.Update
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_Update
  name: Update()
  nameWithType: DynamicSoundLoop.Update()
  fullName: DynamicSoundLoop.Update()
  spec.csharp:
  - uid: Global.DynamicSoundLoop.Update
    name: Update
    isExternal: true
    href: Global.DynamicSoundLoop.html#DynamicSoundLoop_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.DynamicSoundLoop.Update
    name: Update
    isExternal: true
    href: Global.DynamicSoundLoop.html#DynamicSoundLoop_Update
  - name: (
  - name: )
- uid: Global.DynamicSoundLoop.Pitch
  commentId: P:Global.DynamicSoundLoop.Pitch
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_Pitch
  name: Pitch
  nameWithType: DynamicSoundLoop.Pitch
  fullName: DynamicSoundLoop.Pitch
- uid: Global.DynamicSoundLoop.Volume
  commentId: P:Global.DynamicSoundLoop.Volume
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_Volume
  name: Volume
  nameWithType: DynamicSoundLoop.Volume
  fullName: DynamicSoundLoop.Volume
- uid: Global.DynamicSoundLoop.VolumeGroup
  commentId: P:Global.DynamicSoundLoop.VolumeGroup
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_VolumeGroup
  name: VolumeGroup
  nameWithType: DynamicSoundLoop.VolumeGroup
  fullName: DynamicSoundLoop.VolumeGroup
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.ChunkDynamicSoundLoop.#ctor*
  commentId: Overload:Global.ChunkDynamicSoundLoop.#ctor
  isExternal: true
  href: Global.ChunkDynamicSoundLoop.html#ChunkDynamicSoundLoop__ctor_BodyChunk_
  name: ChunkDynamicSoundLoop
  nameWithType: ChunkDynamicSoundLoop.ChunkDynamicSoundLoop
  fullName: ChunkDynamicSoundLoop.ChunkDynamicSoundLoop
  nameWithType.vb: ChunkDynamicSoundLoop.New
  fullName.vb: ChunkDynamicSoundLoop.New
  name.vb: New
- uid: Global.DynamicSoundLoop.InitSound
  commentId: M:Global.DynamicSoundLoop.InitSound
  parent: Global.DynamicSoundLoop
  isExternal: true
  href: Global.DynamicSoundLoop.html#DynamicSoundLoop_InitSound
  name: InitSound()
  nameWithType: DynamicSoundLoop.InitSound()
  fullName: DynamicSoundLoop.InitSound()
  spec.csharp:
  - uid: Global.DynamicSoundLoop.InitSound
    name: InitSound
    isExternal: true
    href: Global.DynamicSoundLoop.html#DynamicSoundLoop_InitSound
  - name: (
  - name: )
  spec.vb:
  - uid: Global.DynamicSoundLoop.InitSound
    name: InitSound
    isExternal: true
    href: Global.DynamicSoundLoop.html#DynamicSoundLoop_InitSound
  - name: (
  - name: )
- uid: Global.ChunkDynamicSoundLoop.InitSound*
  commentId: Overload:Global.ChunkDynamicSoundLoop.InitSound
  isExternal: true
  href: Global.ChunkDynamicSoundLoop.html#ChunkDynamicSoundLoop_InitSound
  name: InitSound
  nameWithType: ChunkDynamicSoundLoop.InitSound
  fullName: ChunkDynamicSoundLoop.InitSound
