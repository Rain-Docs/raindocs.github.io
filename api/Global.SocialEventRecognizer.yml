### YamlMime:ManagedReference
items:
- uid: Global.SocialEventRecognizer
  commentId: T:Global.SocialEventRecognizer
  id: SocialEventRecognizer
  parent: Global
  children:
  - Global.SocialEventRecognizer.#ctor(Room)
  - Global.SocialEventRecognizer.AddStolenProperty(EntityID)
  - Global.SocialEventRecognizer.CreaturePutItemOnGround(PhysicalObject,Creature)
  - Global.SocialEventRecognizer.ItemOffered(Creature,PhysicalObject,Creature)
  - Global.SocialEventRecognizer.ItemOfferedTo(PhysicalObject)
  - Global.SocialEventRecognizer.ItemOwnership(PhysicalObject)
  - Global.SocialEventRecognizer.Killing(Creature,Creature)
  - Global.SocialEventRecognizer.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
  - Global.SocialEventRecognizer.Theft(PhysicalObject,Creature,Creature)
  - Global.SocialEventRecognizer.Update
  - Global.SocialEventRecognizer.WeaponAttack(PhysicalObject,Creature,Creature,System.Boolean)
  - Global.SocialEventRecognizer.ownedItemsOnGround
  - Global.SocialEventRecognizer.room
  - Global.SocialEventRecognizer.stolenProperty
  langs:
  - csharp
  - vb
  name: SocialEventRecognizer
  nameWithType: SocialEventRecognizer
  fullName: SocialEventRecognizer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SocialEventRecognizer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class SocialEventRecognizer
    content.vb: Public Class SocialEventRecognizer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.SocialEventRecognizer.room
  commentId: F:Global.SocialEventRecognizer.room
  id: room
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: room
  nameWithType: SocialEventRecognizer.room
  fullName: SocialEventRecognizer.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SocialEventRecognizer.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room
    return:
      type: Global.Room
    content.vb: Public room As Room
- uid: Global.SocialEventRecognizer.ownedItemsOnGround
  commentId: F:Global.SocialEventRecognizer.ownedItemsOnGround
  id: ownedItemsOnGround
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: ownedItemsOnGround
  nameWithType: SocialEventRecognizer.ownedItemsOnGround
  fullName: SocialEventRecognizer.ownedItemsOnGround
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SocialEventRecognizer.ownedItemsOnGround</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<SocialEventRecognizer.OwnedItemOnGround> ownedItemsOnGround
    return:
      type: System.Collections.Generic.List{SocialEventRecognizer.OwnedItemOnGround}
    content.vb: Public ownedItemsOnGround As List(Of SocialEventRecognizer.OwnedItemOnGround)
- uid: Global.SocialEventRecognizer.stolenProperty
  commentId: F:Global.SocialEventRecognizer.stolenProperty
  id: stolenProperty
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: stolenProperty
  nameWithType: SocialEventRecognizer.stolenProperty
  fullName: SocialEventRecognizer.stolenProperty
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SocialEventRecognizer.stolenProperty</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<EntityID> stolenProperty
    return:
      type: System.Collections.Generic.List{EntityID}
    content.vb: Public stolenProperty As List(Of EntityID)
- uid: Global.SocialEventRecognizer.#ctor(Room)
  commentId: M:Global.SocialEventRecognizer.#ctor(Room)
  id: '#ctor(Room)'
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: SocialEventRecognizer(Room)
  nameWithType: SocialEventRecognizer.SocialEventRecognizer(Room)
  fullName: SocialEventRecognizer.SocialEventRecognizer(Room)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SocialEventRecognizer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SocialEventRecognizer(Room room)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SocialEventRecognizer.#ctor(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room)
  overload: Global.SocialEventRecognizer.#ctor*
  nameWithType.vb: SocialEventRecognizer.New(Room)
  fullName.vb: SocialEventRecognizer.New(Room)
  name.vb: New(Room)
- uid: Global.SocialEventRecognizer.Update
  commentId: M:Global.SocialEventRecognizer.Update
  id: Update
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: SocialEventRecognizer.Update()
  fullName: SocialEventRecognizer.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialEventRecognizer.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.SocialEventRecognizer.Update*
- uid: Global.SocialEventRecognizer.CreaturePutItemOnGround(PhysicalObject,Creature)
  commentId: M:Global.SocialEventRecognizer.CreaturePutItemOnGround(PhysicalObject,Creature)
  id: CreaturePutItemOnGround(PhysicalObject,Creature)
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: CreaturePutItemOnGround(PhysicalObject, Creature)
  nameWithType: SocialEventRecognizer.CreaturePutItemOnGround(PhysicalObject, Creature)
  fullName: SocialEventRecognizer.CreaturePutItemOnGround(PhysicalObject, Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialEventRecognizer.CreaturePutItemOnGround(PhysicalObject,Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CreaturePutItemOnGround(PhysicalObject item, Creature creature)
    parameters:
    - id: item
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:SocialEventRecognizer.CreaturePutItemOnGround(PhysicalObject,Creature)</parameter>
          </include>
        </markup>
    - id: creature
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:SocialEventRecognizer.CreaturePutItemOnGround(PhysicalObject,Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CreaturePutItemOnGround(item As PhysicalObject, creature As Creature)
  overload: Global.SocialEventRecognizer.CreaturePutItemOnGround*
- uid: Global.SocialEventRecognizer.WeaponAttack(PhysicalObject,Creature,Creature,System.Boolean)
  commentId: M:Global.SocialEventRecognizer.WeaponAttack(PhysicalObject,Creature,Creature,System.Boolean)
  id: WeaponAttack(PhysicalObject,Creature,Creature,System.Boolean)
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: WeaponAttack(PhysicalObject, Creature, Creature, bool)
  nameWithType: SocialEventRecognizer.WeaponAttack(PhysicalObject, Creature, Creature, bool)
  fullName: SocialEventRecognizer.WeaponAttack(PhysicalObject, Creature, Creature, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialEventRecognizer.WeaponAttack(PhysicalObject,Creature,Creature,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void WeaponAttack(PhysicalObject weapon, Creature thrower, Creature victim, bool hit)
    parameters:
    - id: weapon
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>weapon</parameter>
            <parameter>M:SocialEventRecognizer.WeaponAttack(PhysicalObject,Creature,Creature,System.Boolean)</parameter>
          </include>
        </markup>
    - id: thrower
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>thrower</parameter>
            <parameter>M:SocialEventRecognizer.WeaponAttack(PhysicalObject,Creature,Creature,System.Boolean)</parameter>
          </include>
        </markup>
    - id: victim
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>victim</parameter>
            <parameter>M:SocialEventRecognizer.WeaponAttack(PhysicalObject,Creature,Creature,System.Boolean)</parameter>
          </include>
        </markup>
    - id: hit
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hit</parameter>
            <parameter>M:SocialEventRecognizer.WeaponAttack(PhysicalObject,Creature,Creature,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub WeaponAttack(weapon As PhysicalObject, thrower As Creature, victim As Creature, hit As Boolean)
  overload: Global.SocialEventRecognizer.WeaponAttack*
  nameWithType.vb: SocialEventRecognizer.WeaponAttack(PhysicalObject, Creature, Creature, Boolean)
  fullName.vb: SocialEventRecognizer.WeaponAttack(PhysicalObject, Creature, Creature, Boolean)
  name.vb: WeaponAttack(PhysicalObject, Creature, Creature, Boolean)
- uid: Global.SocialEventRecognizer.Theft(PhysicalObject,Creature,Creature)
  commentId: M:Global.SocialEventRecognizer.Theft(PhysicalObject,Creature,Creature)
  id: Theft(PhysicalObject,Creature,Creature)
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: Theft(PhysicalObject, Creature, Creature)
  nameWithType: SocialEventRecognizer.Theft(PhysicalObject, Creature, Creature)
  fullName: SocialEventRecognizer.Theft(PhysicalObject, Creature, Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialEventRecognizer.Theft(PhysicalObject,Creature,Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Theft(PhysicalObject item, Creature theif, Creature victim)
    parameters:
    - id: item
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:SocialEventRecognizer.Theft(PhysicalObject,Creature,Creature)</parameter>
          </include>
        </markup>
    - id: theif
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>theif</parameter>
            <parameter>M:SocialEventRecognizer.Theft(PhysicalObject,Creature,Creature)</parameter>
          </include>
        </markup>
    - id: victim
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>victim</parameter>
            <parameter>M:SocialEventRecognizer.Theft(PhysicalObject,Creature,Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Theft(item As PhysicalObject, theif As Creature, victim As Creature)
  overload: Global.SocialEventRecognizer.Theft*
- uid: Global.SocialEventRecognizer.AddStolenProperty(EntityID)
  commentId: M:Global.SocialEventRecognizer.AddStolenProperty(EntityID)
  id: AddStolenProperty(EntityID)
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: AddStolenProperty(EntityID)
  nameWithType: SocialEventRecognizer.AddStolenProperty(EntityID)
  fullName: SocialEventRecognizer.AddStolenProperty(EntityID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialEventRecognizer.AddStolenProperty(EntityID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddStolenProperty(EntityID ID)
    parameters:
    - id: ID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ID</parameter>
            <parameter>M:SocialEventRecognizer.AddStolenProperty(EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddStolenProperty(ID As EntityID)
  overload: Global.SocialEventRecognizer.AddStolenProperty*
- uid: Global.SocialEventRecognizer.Killing(Creature,Creature)
  commentId: M:Global.SocialEventRecognizer.Killing(Creature,Creature)
  id: Killing(Creature,Creature)
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: Killing(Creature, Creature)
  nameWithType: SocialEventRecognizer.Killing(Creature, Creature)
  fullName: SocialEventRecognizer.Killing(Creature, Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialEventRecognizer.Killing(Creature,Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Killing(Creature killer, Creature victim)
    parameters:
    - id: killer
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>killer</parameter>
            <parameter>M:SocialEventRecognizer.Killing(Creature,Creature)</parameter>
          </include>
        </markup>
    - id: victim
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>victim</parameter>
            <parameter>M:SocialEventRecognizer.Killing(Creature,Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Killing(killer As Creature, victim As Creature)
  overload: Global.SocialEventRecognizer.Killing*
- uid: Global.SocialEventRecognizer.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
  commentId: M:Global.SocialEventRecognizer.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
  id: SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: SocialEvent(EventID, Creature, Creature, PhysicalObject)
  nameWithType: SocialEventRecognizer.SocialEvent(SocialEventRecognizer.EventID, Creature, Creature, PhysicalObject)
  fullName: SocialEventRecognizer.SocialEvent(SocialEventRecognizer.EventID, Creature, Creature, PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialEventRecognizer.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SocialEvent(SocialEventRecognizer.EventID ID, Creature subjectCreature, Creature objectCreature, PhysicalObject involvedItem)
    parameters:
    - id: ID
      type: Global.SocialEventRecognizer.EventID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ID</parameter>
            <parameter>M:SocialEventRecognizer.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)</parameter>
          </include>
        </markup>
    - id: subjectCreature
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>subjectCreature</parameter>
            <parameter>M:SocialEventRecognizer.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)</parameter>
          </include>
        </markup>
    - id: objectCreature
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>objectCreature</parameter>
            <parameter>M:SocialEventRecognizer.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)</parameter>
          </include>
        </markup>
    - id: involvedItem
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>involvedItem</parameter>
            <parameter>M:SocialEventRecognizer.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SocialEvent(ID As SocialEventRecognizer.EventID, subjectCreature As Creature, objectCreature As Creature, involvedItem As PhysicalObject)
  overload: Global.SocialEventRecognizer.SocialEvent*
- uid: Global.SocialEventRecognizer.ItemOffered(Creature,PhysicalObject,Creature)
  commentId: M:Global.SocialEventRecognizer.ItemOffered(Creature,PhysicalObject,Creature)
  id: ItemOffered(Creature,PhysicalObject,Creature)
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: ItemOffered(Creature, PhysicalObject, Creature)
  nameWithType: SocialEventRecognizer.ItemOffered(Creature, PhysicalObject, Creature)
  fullName: SocialEventRecognizer.ItemOffered(Creature, PhysicalObject, Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialEventRecognizer.ItemOffered(Creature,PhysicalObject,Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature ItemOffered(Creature gifter, PhysicalObject item, Creature offeredTo)
    parameters:
    - id: gifter
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>gifter</parameter>
            <parameter>M:SocialEventRecognizer.ItemOffered(Creature,PhysicalObject,Creature)</parameter>
          </include>
        </markup>
    - id: item
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:SocialEventRecognizer.ItemOffered(Creature,PhysicalObject,Creature)</parameter>
          </include>
        </markup>
    - id: offeredTo
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offeredTo</parameter>
            <parameter>M:SocialEventRecognizer.ItemOffered(Creature,PhysicalObject,Creature)</parameter>
          </include>
        </markup>
    return:
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SocialEventRecognizer.ItemOffered(Creature,PhysicalObject,Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Function ItemOffered(gifter As Creature, item As PhysicalObject, offeredTo As Creature) As Creature
  overload: Global.SocialEventRecognizer.ItemOffered*
- uid: Global.SocialEventRecognizer.ItemOwnership(PhysicalObject)
  commentId: M:Global.SocialEventRecognizer.ItemOwnership(PhysicalObject)
  id: ItemOwnership(PhysicalObject)
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: ItemOwnership(PhysicalObject)
  nameWithType: SocialEventRecognizer.ItemOwnership(PhysicalObject)
  fullName: SocialEventRecognizer.ItemOwnership(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialEventRecognizer.ItemOwnership(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SocialEventRecognizer.OwnedItemOnGround ItemOwnership(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:SocialEventRecognizer.ItemOwnership(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: Global.SocialEventRecognizer.OwnedItemOnGround
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SocialEventRecognizer.ItemOwnership(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function ItemOwnership(obj As PhysicalObject) As SocialEventRecognizer.OwnedItemOnGround
  overload: Global.SocialEventRecognizer.ItemOwnership*
- uid: Global.SocialEventRecognizer.ItemOfferedTo(PhysicalObject)
  commentId: M:Global.SocialEventRecognizer.ItemOfferedTo(PhysicalObject)
  id: ItemOfferedTo(PhysicalObject)
  parent: Global.SocialEventRecognizer
  langs:
  - csharp
  - vb
  name: ItemOfferedTo(PhysicalObject)
  nameWithType: SocialEventRecognizer.ItemOfferedTo(PhysicalObject)
  fullName: SocialEventRecognizer.ItemOfferedTo(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialEventRecognizer.ItemOfferedTo(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature ItemOfferedTo(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:SocialEventRecognizer.ItemOfferedTo(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SocialEventRecognizer.ItemOfferedTo(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function ItemOfferedTo(obj As PhysicalObject) As Creature
  overload: Global.SocialEventRecognizer.ItemOfferedTo*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: System.Collections.Generic.List{SocialEventRecognizer.OwnedItemOnGround}
  commentId: T:System.Collections.Generic.List{SocialEventRecognizer.OwnedItemOnGround}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SocialEventRecognizer.OwnedItemOnGround>
  nameWithType: List<SocialEventRecognizer.OwnedItemOnGround>
  fullName: System.Collections.Generic.List<SocialEventRecognizer.OwnedItemOnGround>
  nameWithType.vb: List(Of SocialEventRecognizer.OwnedItemOnGround)
  fullName.vb: System.Collections.Generic.List(Of SocialEventRecognizer.OwnedItemOnGround)
  name.vb: List(Of SocialEventRecognizer.OwnedItemOnGround)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.SocialEventRecognizer
    name: SocialEventRecognizer
    isExternal: true
    href: SocialEventRecognizer.html
  - name: .
  - uid: Global.SocialEventRecognizer.OwnedItemOnGround
    name: OwnedItemOnGround
    isExternal: true
    href: SocialEventRecognizer.OwnedItemOnGround.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SocialEventRecognizer
    name: SocialEventRecognizer
    isExternal: true
    href: SocialEventRecognizer.html
  - name: .
  - uid: Global.SocialEventRecognizer.OwnedItemOnGround
    name: OwnedItemOnGround
    isExternal: true
    href: SocialEventRecognizer.OwnedItemOnGround.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{EntityID}
  commentId: T:System.Collections.Generic.List{EntityID}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<EntityID>
  nameWithType: List<EntityID>
  fullName: System.Collections.Generic.List<EntityID>
  nameWithType.vb: List(Of EntityID)
  fullName.vb: System.Collections.Generic.List(Of EntityID)
  name.vb: List(Of EntityID)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.EntityID
    name: EntityID
    isExternal: true
    href: EntityID.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.EntityID
    name: EntityID
    isExternal: true
    href: EntityID.html
  - name: )
- uid: Global.SocialEventRecognizer.#ctor*
  commentId: Overload:Global.SocialEventRecognizer.#ctor
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer__ctor_Room_
  name: SocialEventRecognizer
  nameWithType: SocialEventRecognizer.SocialEventRecognizer
  fullName: SocialEventRecognizer.SocialEventRecognizer
  nameWithType.vb: SocialEventRecognizer.New
  fullName.vb: SocialEventRecognizer.New
  name.vb: New
- uid: Global.SocialEventRecognizer.Update*
  commentId: Overload:Global.SocialEventRecognizer.Update
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer_Update
  name: Update
  nameWithType: SocialEventRecognizer.Update
  fullName: SocialEventRecognizer.Update
- uid: Global.SocialEventRecognizer.CreaturePutItemOnGround*
  commentId: Overload:Global.SocialEventRecognizer.CreaturePutItemOnGround
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer_CreaturePutItemOnGround_PhysicalObject_Creature_
  name: CreaturePutItemOnGround
  nameWithType: SocialEventRecognizer.CreaturePutItemOnGround
  fullName: SocialEventRecognizer.CreaturePutItemOnGround
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.SocialEventRecognizer.WeaponAttack*
  commentId: Overload:Global.SocialEventRecognizer.WeaponAttack
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer_WeaponAttack_PhysicalObject_Creature_Creature_System_Boolean_
  name: WeaponAttack
  nameWithType: SocialEventRecognizer.WeaponAttack
  fullName: SocialEventRecognizer.WeaponAttack
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.SocialEventRecognizer.Theft*
  commentId: Overload:Global.SocialEventRecognizer.Theft
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer_Theft_PhysicalObject_Creature_Creature_
  name: Theft
  nameWithType: SocialEventRecognizer.Theft
  fullName: SocialEventRecognizer.Theft
- uid: Global.SocialEventRecognizer.AddStolenProperty*
  commentId: Overload:Global.SocialEventRecognizer.AddStolenProperty
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer_AddStolenProperty_EntityID_
  name: AddStolenProperty
  nameWithType: SocialEventRecognizer.AddStolenProperty
  fullName: SocialEventRecognizer.AddStolenProperty
- uid: Global.EntityID
  commentId: T:Global.EntityID
  isExternal: true
  href: EntityID.html
  name: EntityID
  nameWithType: EntityID
  fullName: EntityID
- uid: Global.SocialEventRecognizer.Killing*
  commentId: Overload:Global.SocialEventRecognizer.Killing
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer_Killing_Creature_Creature_
  name: Killing
  nameWithType: SocialEventRecognizer.Killing
  fullName: SocialEventRecognizer.Killing
- uid: Global.SocialEventRecognizer.SocialEvent*
  commentId: Overload:Global.SocialEventRecognizer.SocialEvent
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer_SocialEvent_SocialEventRecognizer_EventID_Creature_Creature_PhysicalObject_
  name: SocialEvent
  nameWithType: SocialEventRecognizer.SocialEvent
  fullName: SocialEventRecognizer.SocialEvent
- uid: Global.SocialEventRecognizer.EventID
  commentId: T:Global.SocialEventRecognizer.EventID
  isExternal: true
  href: SocialEventRecognizer.html
  name: SocialEventRecognizer.EventID
  nameWithType: SocialEventRecognizer.EventID
  fullName: SocialEventRecognizer.EventID
  spec.csharp:
  - uid: Global.SocialEventRecognizer
    name: SocialEventRecognizer
    isExternal: true
    href: SocialEventRecognizer.html
  - name: .
  - uid: Global.SocialEventRecognizer.EventID
    name: EventID
    isExternal: true
    href: SocialEventRecognizer.EventID.html
  spec.vb:
  - uid: Global.SocialEventRecognizer
    name: SocialEventRecognizer
    isExternal: true
    href: SocialEventRecognizer.html
  - name: .
  - uid: Global.SocialEventRecognizer.EventID
    name: EventID
    isExternal: true
    href: SocialEventRecognizer.EventID.html
- uid: Global.SocialEventRecognizer.ItemOffered*
  commentId: Overload:Global.SocialEventRecognizer.ItemOffered
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer_ItemOffered_Creature_PhysicalObject_Creature_
  name: ItemOffered
  nameWithType: SocialEventRecognizer.ItemOffered
  fullName: SocialEventRecognizer.ItemOffered
- uid: Global.SocialEventRecognizer.ItemOwnership*
  commentId: Overload:Global.SocialEventRecognizer.ItemOwnership
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer_ItemOwnership_PhysicalObject_
  name: ItemOwnership
  nameWithType: SocialEventRecognizer.ItemOwnership
  fullName: SocialEventRecognizer.ItemOwnership
- uid: Global.SocialEventRecognizer.OwnedItemOnGround
  commentId: T:Global.SocialEventRecognizer.OwnedItemOnGround
  isExternal: true
  href: SocialEventRecognizer.html
  name: SocialEventRecognizer.OwnedItemOnGround
  nameWithType: SocialEventRecognizer.OwnedItemOnGround
  fullName: SocialEventRecognizer.OwnedItemOnGround
  spec.csharp:
  - uid: Global.SocialEventRecognizer
    name: SocialEventRecognizer
    isExternal: true
    href: SocialEventRecognizer.html
  - name: .
  - uid: Global.SocialEventRecognizer.OwnedItemOnGround
    name: OwnedItemOnGround
    isExternal: true
    href: SocialEventRecognizer.OwnedItemOnGround.html
  spec.vb:
  - uid: Global.SocialEventRecognizer
    name: SocialEventRecognizer
    isExternal: true
    href: SocialEventRecognizer.html
  - name: .
  - uid: Global.SocialEventRecognizer.OwnedItemOnGround
    name: OwnedItemOnGround
    isExternal: true
    href: SocialEventRecognizer.OwnedItemOnGround.html
- uid: Global.SocialEventRecognizer.ItemOfferedTo*
  commentId: Overload:Global.SocialEventRecognizer.ItemOfferedTo
  isExternal: true
  href: Global.SocialEventRecognizer.html#SocialEventRecognizer_ItemOfferedTo_PhysicalObject_
  name: ItemOfferedTo
  nameWithType: SocialEventRecognizer.ItemOfferedTo
  fullName: SocialEventRecognizer.ItemOfferedTo
