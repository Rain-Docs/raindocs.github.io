### YamlMime:ManagedReference
items:
- uid: Global.ProcessManager.ProcessID
  commentId: T:Global.ProcessManager.ProcessID
  id: ProcessManager.ProcessID
  parent: Global
  children:
  - Global.ProcessManager.ProcessID.#ctor(System.String,System.Boolean)
  - Global.ProcessManager.ProcessID.BackupManager
  - Global.ProcessManager.ProcessID.ConsoleOptionsMenu
  - Global.ProcessManager.ProcessID.Credits
  - Global.ProcessManager.ProcessID.CustomEndGameScreen
  - Global.ProcessManager.ProcessID.DeathScreen
  - Global.ProcessManager.ProcessID.DemoModeEnd
  - Global.ProcessManager.ProcessID.Dialog
  - Global.ProcessManager.ProcessID.Dream
  - Global.ProcessManager.ProcessID.FastTravelScreen
  - Global.ProcessManager.ProcessID.Game
  - Global.ProcessManager.ProcessID.GhostScreen
  - Global.ProcessManager.ProcessID.Initialization
  - Global.ProcessManager.ProcessID.InputOptions
  - Global.ProcessManager.ProcessID.InputSelect
  - Global.ProcessManager.ProcessID.IntroRoll
  - Global.ProcessManager.ProcessID.KarmaToMaxScreen
  - Global.ProcessManager.ProcessID.MainMenu
  - Global.ProcessManager.ProcessID.MenuMic
  - Global.ProcessManager.ProcessID.ModdingMenu
  - Global.ProcessManager.ProcessID.MonkActivity
  - Global.ProcessManager.ProcessID.MultiplayerMenu
  - Global.ProcessManager.ProcessID.MultiplayerResults
  - Global.ProcessManager.ProcessID.MusicPlayer
  - Global.ProcessManager.ProcessID.OptionsMenu
  - Global.ProcessManager.ProcessID.PauseMenu
  - Global.ProcessManager.ProcessID.RainWorldSteamManager
  - Global.ProcessManager.ProcessID.RegionSelect
  - Global.ProcessManager.ProcessID.RegionsOverviewScreen
  - Global.ProcessManager.ProcessID.SleepScreen
  - Global.ProcessManager.ProcessID.SlideShow
  - Global.ProcessManager.ProcessID.SlugcatSelect
  - Global.ProcessManager.ProcessID.StarveScreen
  - Global.ProcessManager.ProcessID.Statistics
  - Global.ProcessManager.ProcessID.TutorialControlsPage
  langs:
  - csharp
  - vb
  name: ProcessManager.ProcessID
  nameWithType: ProcessManager.ProcessID
  fullName: ProcessManager.ProcessID
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ProcessManager.ProcessID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class ProcessManager.ProcessID : ExtEnum<ProcessManager.ProcessID>, IComparable, IEquatable<ProcessManager.ProcessID>'
    content.vb: Public Class ProcessManager.ProcessID Inherits ExtEnum(Of ProcessManager.ProcessID) Implements IComparable, IEquatable(Of ProcessManager.ProcessID)
  inheritance:
  - System.Object
  - Global.ExtEnumBase
  - Global.ExtEnum{ProcessManager.ProcessID}
  implements:
  - System.IComparable
  - System.IEquatable{ProcessManager.ProcessID}
  inheritedMembers:
  - Global.ExtEnum{ProcessManager.ProcessID}.values
  - Global.ExtEnum{ProcessManager.ProcessID}.Equals(System.Object)
  - Global.ExtEnum{ProcessManager.ProcessID}.Equals(ExtEnum{ProcessManager.ProcessID})
  - Global.ExtEnum{ProcessManager.ProcessID}.Equals(ProcessManager.ProcessID)
  - Global.ExtEnum{ProcessManager.ProcessID}.GetHashCode
  - Global.ExtEnum{ProcessManager.ProcessID}.Unregister
  - Global.ExtEnum{ProcessManager.ProcessID}.valuesVersion
  - Global.ExtEnum{ProcessManager.ProcessID}.Index
  - Global.ExtEnumBase.value
  - Global.ExtEnumBase.valueHash
  - Global.ExtEnumBase.index
  - Global.ExtEnumBase.localVersion
  - Global.ExtEnumBase.enumType
  - Global.ExtEnumBase.valueDictionary
  - Global.ExtEnumBase.ToString
  - Global.ExtEnumBase.CompareTo(System.Object)
  - Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  - Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  - Global.ExtEnumBase.GetExtEnumType(System.Type)
  - Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  - Global.ExtEnumBase.GetNames(System.Type)
  - Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  - Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ProcessManager.ProcessID.MainMenu
  commentId: F:Global.ProcessManager.ProcessID.MainMenu
  id: MainMenu
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: MainMenu
  nameWithType: ProcessManager.ProcessID.MainMenu
  fullName: ProcessManager.ProcessID.MainMenu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.MainMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID MainMenu
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly MainMenu As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.Game
  commentId: F:Global.ProcessManager.ProcessID.Game
  id: Game
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: Game
  nameWithType: ProcessManager.ProcessID.Game
  fullName: ProcessManager.ProcessID.Game
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.Game</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID Game
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly Game As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.SleepScreen
  commentId: F:Global.ProcessManager.ProcessID.SleepScreen
  id: SleepScreen
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: SleepScreen
  nameWithType: ProcessManager.ProcessID.SleepScreen
  fullName: ProcessManager.ProcessID.SleepScreen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.SleepScreen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID SleepScreen
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly SleepScreen As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.DeathScreen
  commentId: F:Global.ProcessManager.ProcessID.DeathScreen
  id: DeathScreen
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: DeathScreen
  nameWithType: ProcessManager.ProcessID.DeathScreen
  fullName: ProcessManager.ProcessID.DeathScreen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.DeathScreen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID DeathScreen
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly DeathScreen As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.StarveScreen
  commentId: F:Global.ProcessManager.ProcessID.StarveScreen
  id: StarveScreen
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: StarveScreen
  nameWithType: ProcessManager.ProcessID.StarveScreen
  fullName: ProcessManager.ProcessID.StarveScreen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.StarveScreen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID StarveScreen
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly StarveScreen As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.RegionSelect
  commentId: F:Global.ProcessManager.ProcessID.RegionSelect
  id: RegionSelect
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: RegionSelect
  nameWithType: ProcessManager.ProcessID.RegionSelect
  fullName: ProcessManager.ProcessID.RegionSelect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.RegionSelect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID RegionSelect
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly RegionSelect As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.OptionsMenu
  commentId: F:Global.ProcessManager.ProcessID.OptionsMenu
  id: OptionsMenu
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: OptionsMenu
  nameWithType: ProcessManager.ProcessID.OptionsMenu
  fullName: ProcessManager.ProcessID.OptionsMenu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.OptionsMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID OptionsMenu
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly OptionsMenu As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.MusicPlayer
  commentId: F:Global.ProcessManager.ProcessID.MusicPlayer
  id: MusicPlayer
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: MusicPlayer
  nameWithType: ProcessManager.ProcessID.MusicPlayer
  fullName: ProcessManager.ProcessID.MusicPlayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.MusicPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID MusicPlayer
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly MusicPlayer As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.GhostScreen
  commentId: F:Global.ProcessManager.ProcessID.GhostScreen
  id: GhostScreen
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: GhostScreen
  nameWithType: ProcessManager.ProcessID.GhostScreen
  fullName: ProcessManager.ProcessID.GhostScreen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.GhostScreen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID GhostScreen
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly GhostScreen As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.KarmaToMaxScreen
  commentId: F:Global.ProcessManager.ProcessID.KarmaToMaxScreen
  id: KarmaToMaxScreen
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: KarmaToMaxScreen
  nameWithType: ProcessManager.ProcessID.KarmaToMaxScreen
  fullName: ProcessManager.ProcessID.KarmaToMaxScreen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.KarmaToMaxScreen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID KarmaToMaxScreen
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly KarmaToMaxScreen As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.SlideShow
  commentId: F:Global.ProcessManager.ProcessID.SlideShow
  id: SlideShow
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: SlideShow
  nameWithType: ProcessManager.ProcessID.SlideShow
  fullName: ProcessManager.ProcessID.SlideShow
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.SlideShow</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID SlideShow
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly SlideShow As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.MenuMic
  commentId: F:Global.ProcessManager.ProcessID.MenuMic
  id: MenuMic
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: MenuMic
  nameWithType: ProcessManager.ProcessID.MenuMic
  fullName: ProcessManager.ProcessID.MenuMic
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.MenuMic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID MenuMic
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly MenuMic As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.PauseMenu
  commentId: F:Global.ProcessManager.ProcessID.PauseMenu
  id: PauseMenu
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: PauseMenu
  nameWithType: ProcessManager.ProcessID.PauseMenu
  fullName: ProcessManager.ProcessID.PauseMenu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.PauseMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID PauseMenu
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly PauseMenu As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.FastTravelScreen
  commentId: F:Global.ProcessManager.ProcessID.FastTravelScreen
  id: FastTravelScreen
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: FastTravelScreen
  nameWithType: ProcessManager.ProcessID.FastTravelScreen
  fullName: ProcessManager.ProcessID.FastTravelScreen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.FastTravelScreen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID FastTravelScreen
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly FastTravelScreen As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.RegionsOverviewScreen
  commentId: F:Global.ProcessManager.ProcessID.RegionsOverviewScreen
  id: RegionsOverviewScreen
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: RegionsOverviewScreen
  nameWithType: ProcessManager.ProcessID.RegionsOverviewScreen
  fullName: ProcessManager.ProcessID.RegionsOverviewScreen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.RegionsOverviewScreen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID RegionsOverviewScreen
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly RegionsOverviewScreen As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.CustomEndGameScreen
  commentId: F:Global.ProcessManager.ProcessID.CustomEndGameScreen
  id: CustomEndGameScreen
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: CustomEndGameScreen
  nameWithType: ProcessManager.ProcessID.CustomEndGameScreen
  fullName: ProcessManager.ProcessID.CustomEndGameScreen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.CustomEndGameScreen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID CustomEndGameScreen
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly CustomEndGameScreen As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.InputSelect
  commentId: F:Global.ProcessManager.ProcessID.InputSelect
  id: InputSelect
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: InputSelect
  nameWithType: ProcessManager.ProcessID.InputSelect
  fullName: ProcessManager.ProcessID.InputSelect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.InputSelect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID InputSelect
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly InputSelect As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.TutorialControlsPage
  commentId: F:Global.ProcessManager.ProcessID.TutorialControlsPage
  id: TutorialControlsPage
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: TutorialControlsPage
  nameWithType: ProcessManager.ProcessID.TutorialControlsPage
  fullName: ProcessManager.ProcessID.TutorialControlsPage
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.TutorialControlsPage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID TutorialControlsPage
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly TutorialControlsPage As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.SlugcatSelect
  commentId: F:Global.ProcessManager.ProcessID.SlugcatSelect
  id: SlugcatSelect
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: SlugcatSelect
  nameWithType: ProcessManager.ProcessID.SlugcatSelect
  fullName: ProcessManager.ProcessID.SlugcatSelect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.SlugcatSelect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID SlugcatSelect
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly SlugcatSelect As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.IntroRoll
  commentId: F:Global.ProcessManager.ProcessID.IntroRoll
  id: IntroRoll
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: IntroRoll
  nameWithType: ProcessManager.ProcessID.IntroRoll
  fullName: ProcessManager.ProcessID.IntroRoll
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.IntroRoll</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID IntroRoll
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly IntroRoll As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.Credits
  commentId: F:Global.ProcessManager.ProcessID.Credits
  id: Credits
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: Credits
  nameWithType: ProcessManager.ProcessID.Credits
  fullName: ProcessManager.ProcessID.Credits
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.Credits</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID Credits
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly Credits As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.ConsoleOptionsMenu
  commentId: F:Global.ProcessManager.ProcessID.ConsoleOptionsMenu
  id: ConsoleOptionsMenu
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: ConsoleOptionsMenu
  nameWithType: ProcessManager.ProcessID.ConsoleOptionsMenu
  fullName: ProcessManager.ProcessID.ConsoleOptionsMenu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.ConsoleOptionsMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID ConsoleOptionsMenu
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly ConsoleOptionsMenu As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.Dream
  commentId: F:Global.ProcessManager.ProcessID.Dream
  id: Dream
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: Dream
  nameWithType: ProcessManager.ProcessID.Dream
  fullName: ProcessManager.ProcessID.Dream
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.Dream</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID Dream
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly Dream As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.RainWorldSteamManager
  commentId: F:Global.ProcessManager.ProcessID.RainWorldSteamManager
  id: RainWorldSteamManager
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: RainWorldSteamManager
  nameWithType: ProcessManager.ProcessID.RainWorldSteamManager
  fullName: ProcessManager.ProcessID.RainWorldSteamManager
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.RainWorldSteamManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID RainWorldSteamManager
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly RainWorldSteamManager As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.MultiplayerMenu
  commentId: F:Global.ProcessManager.ProcessID.MultiplayerMenu
  id: MultiplayerMenu
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: MultiplayerMenu
  nameWithType: ProcessManager.ProcessID.MultiplayerMenu
  fullName: ProcessManager.ProcessID.MultiplayerMenu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.MultiplayerMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID MultiplayerMenu
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly MultiplayerMenu As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.MultiplayerResults
  commentId: F:Global.ProcessManager.ProcessID.MultiplayerResults
  id: MultiplayerResults
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: MultiplayerResults
  nameWithType: ProcessManager.ProcessID.MultiplayerResults
  fullName: ProcessManager.ProcessID.MultiplayerResults
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.MultiplayerResults</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID MultiplayerResults
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly MultiplayerResults As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.InputOptions
  commentId: F:Global.ProcessManager.ProcessID.InputOptions
  id: InputOptions
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: InputOptions
  nameWithType: ProcessManager.ProcessID.InputOptions
  fullName: ProcessManager.ProcessID.InputOptions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.InputOptions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID InputOptions
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly InputOptions As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.Statistics
  commentId: F:Global.ProcessManager.ProcessID.Statistics
  id: Statistics
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: Statistics
  nameWithType: ProcessManager.ProcessID.Statistics
  fullName: ProcessManager.ProcessID.Statistics
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.Statistics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID Statistics
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly Statistics As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.Dialog
  commentId: F:Global.ProcessManager.ProcessID.Dialog
  id: Dialog
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: Dialog
  nameWithType: ProcessManager.ProcessID.Dialog
  fullName: ProcessManager.ProcessID.Dialog
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.Dialog</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID Dialog
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly Dialog As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.ModdingMenu
  commentId: F:Global.ProcessManager.ProcessID.ModdingMenu
  id: ModdingMenu
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: ModdingMenu
  nameWithType: ProcessManager.ProcessID.ModdingMenu
  fullName: ProcessManager.ProcessID.ModdingMenu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.ModdingMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID ModdingMenu
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly ModdingMenu As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.DemoModeEnd
  commentId: F:Global.ProcessManager.ProcessID.DemoModeEnd
  id: DemoModeEnd
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: DemoModeEnd
  nameWithType: ProcessManager.ProcessID.DemoModeEnd
  fullName: ProcessManager.ProcessID.DemoModeEnd
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.DemoModeEnd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID DemoModeEnd
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly DemoModeEnd As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.Initialization
  commentId: F:Global.ProcessManager.ProcessID.Initialization
  id: Initialization
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: Initialization
  nameWithType: ProcessManager.ProcessID.Initialization
  fullName: ProcessManager.ProcessID.Initialization
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.Initialization</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID Initialization
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly Initialization As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.MonkActivity
  commentId: F:Global.ProcessManager.ProcessID.MonkActivity
  id: MonkActivity
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: MonkActivity
  nameWithType: ProcessManager.ProcessID.MonkActivity
  fullName: ProcessManager.ProcessID.MonkActivity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.MonkActivity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID MonkActivity
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly MonkActivity As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.BackupManager
  commentId: F:Global.ProcessManager.ProcessID.BackupManager
  id: BackupManager
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: BackupManager
  nameWithType: ProcessManager.ProcessID.BackupManager
  fullName: ProcessManager.ProcessID.BackupManager
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ProcessManager.ProcessID.BackupManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly ProcessManager.ProcessID BackupManager
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public Shared ReadOnly BackupManager As ProcessManager.ProcessID
- uid: Global.ProcessManager.ProcessID.#ctor(System.String,System.Boolean)
  commentId: M:Global.ProcessManager.ProcessID.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Global.ProcessManager.ProcessID
  langs:
  - csharp
  - vb
  name: ProcessID(string, bool)
  nameWithType: ProcessManager.ProcessID.ProcessID(string, bool)
  fullName: ProcessManager.ProcessID.ProcessID(string, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ProcessManager.ProcessID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ProcessID(string value, bool register = false)
    parameters:
    - id: value
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:ProcessManager.ProcessID.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: register
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>register</parameter>
            <parameter>M:ProcessManager.ProcessID.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(value As String, register As Boolean = False)
  overload: Global.ProcessManager.ProcessID.#ctor*
  nameWithType.vb: ProcessManager.ProcessID.New(String, Boolean)
  fullName.vb: ProcessManager.ProcessID.New(String, Boolean)
  name.vb: New(String, Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ExtEnumBase
  commentId: T:Global.ExtEnumBase
  isExternal: true
  href: ExtEnumBase.html
  name: ExtEnumBase
  nameWithType: ExtEnumBase
  fullName: ExtEnumBase
- uid: Global.ExtEnum{ProcessManager.ProcessID}
  commentId: T:Global.ExtEnum{ProcessManager.ProcessID}
  definition: Global.ExtEnum`1
  href: ExtEnum-1.html
  name: ExtEnum<ProcessManager.ProcessID>
  nameWithType: ExtEnum<ProcessManager.ProcessID>
  fullName: ExtEnum<ProcessManager.ProcessID>
  nameWithType.vb: ExtEnum(Of ProcessManager.ProcessID)
  fullName.vb: ExtEnum(Of ProcessManager.ProcessID)
  name.vb: ExtEnum(Of ProcessManager.ProcessID)
  spec.csharp:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  - name: '>'
  spec.vb:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  - name: )
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IEquatable{ProcessManager.ProcessID}
  commentId: T:System.IEquatable{ProcessManager.ProcessID}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ProcessManager.ProcessID>
  nameWithType: IEquatable<ProcessManager.ProcessID>
  fullName: System.IEquatable<ProcessManager.ProcessID>
  nameWithType.vb: IEquatable(Of ProcessManager.ProcessID)
  fullName.vb: System.IEquatable(Of ProcessManager.ProcessID)
  name.vb: IEquatable(Of ProcessManager.ProcessID)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  - name: )
- uid: Global.ExtEnum{ProcessManager.ProcessID}.values
  commentId: F:Global.ExtEnum{ProcessManager.ProcessID}.values
  parent: Global.ExtEnum{ProcessManager.ProcessID}
  definition: Global.ExtEnum`1.values
  href: Global.ExtEnum-1.html#ExtEnum_1_values
  name: values
  nameWithType: ExtEnum<ProcessManager.ProcessID>.values
  fullName: ExtEnum<ProcessManager.ProcessID>.values
  nameWithType.vb: ExtEnum(Of ProcessManager.ProcessID).values
  fullName.vb: ExtEnum(Of ProcessManager.ProcessID).values
- uid: Global.ExtEnum{ProcessManager.ProcessID}.Equals(System.Object)
  commentId: M:Global.ExtEnum{ProcessManager.ProcessID}.Equals(System.Object)
  parent: Global.ExtEnum{ProcessManager.ProcessID}
  definition: Global.ExtEnum`1.Equals(System.Object)
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  name: Equals(object)
  nameWithType: ExtEnum<ProcessManager.ProcessID>.Equals(object)
  fullName: ExtEnum<ProcessManager.ProcessID>.Equals(object)
  nameWithType.vb: ExtEnum(Of ProcessManager.ProcessID).Equals(Object)
  fullName.vb: ExtEnum(Of ProcessManager.ProcessID).Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Global.ExtEnum{ProcessManager.ProcessID}.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{ProcessManager.ProcessID}.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnum{ProcessManager.ProcessID}.Equals(ExtEnum{ProcessManager.ProcessID})
  commentId: M:Global.ExtEnum{ProcessManager.ProcessID}.Equals(ExtEnum{ProcessManager.ProcessID})
  parent: Global.ExtEnum{ProcessManager.ProcessID}
  definition: Global.ExtEnum`1.Equals(ExtEnum{`0})
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  name: Equals(ExtEnum<ProcessID>)
  nameWithType: ExtEnum<ProcessManager.ProcessID>.Equals(ExtEnum<ProcessManager.ProcessID>)
  fullName: ExtEnum<ProcessManager.ProcessID>.Equals(ExtEnum<ProcessManager.ProcessID>)
  nameWithType.vb: ExtEnum(Of ProcessManager.ProcessID).Equals(ExtEnum(Of ProcessManager.ProcessID))
  fullName.vb: ExtEnum(Of ProcessManager.ProcessID).Equals(ExtEnum(Of ProcessManager.ProcessID))
  name.vb: Equals(ExtEnum(Of ProcessID))
  spec.csharp:
  - uid: Global.ExtEnum{ProcessManager.ProcessID}.Equals(ExtEnum{ProcessManager.ProcessID})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{ProcessManager.ProcessID}.Equals(ExtEnum{ProcessManager.ProcessID})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  - name: )
  - name: )
- uid: Global.ExtEnum{ProcessManager.ProcessID}.Equals(ProcessManager.ProcessID)
  commentId: M:Global.ExtEnum{ProcessManager.ProcessID}.Equals(ProcessManager.ProcessID)
  parent: Global.ExtEnum{ProcessManager.ProcessID}
  definition: Global.ExtEnum`1.Equals(`0)
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  name: Equals(ProcessID)
  nameWithType: ExtEnum<ProcessManager.ProcessID>.Equals(ProcessManager.ProcessID)
  fullName: ExtEnum<ProcessManager.ProcessID>.Equals(ProcessManager.ProcessID)
  nameWithType.vb: ExtEnum(Of ProcessManager.ProcessID).Equals(ProcessManager.ProcessID)
  fullName.vb: ExtEnum(Of ProcessManager.ProcessID).Equals(ProcessManager.ProcessID)
  spec.csharp:
  - uid: Global.ExtEnum{ProcessManager.ProcessID}.Equals(ProcessManager.ProcessID)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{ProcessManager.ProcessID}.Equals(ProcessManager.ProcessID)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  - name: )
- uid: Global.ExtEnum{ProcessManager.ProcessID}.GetHashCode
  commentId: M:Global.ExtEnum{ProcessManager.ProcessID}.GetHashCode
  parent: Global.ExtEnum{ProcessManager.ProcessID}
  definition: Global.ExtEnum`1.GetHashCode
  href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  name: GetHashCode()
  nameWithType: ExtEnum<ProcessManager.ProcessID>.GetHashCode()
  fullName: ExtEnum<ProcessManager.ProcessID>.GetHashCode()
  nameWithType.vb: ExtEnum(Of ProcessManager.ProcessID).GetHashCode()
  fullName.vb: ExtEnum(Of ProcessManager.ProcessID).GetHashCode()
  spec.csharp:
  - uid: Global.ExtEnum{ProcessManager.ProcessID}.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{ProcessManager.ProcessID}.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
- uid: Global.ExtEnum{ProcessManager.ProcessID}.Unregister
  commentId: M:Global.ExtEnum{ProcessManager.ProcessID}.Unregister
  parent: Global.ExtEnum{ProcessManager.ProcessID}
  definition: Global.ExtEnum`1.Unregister
  href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  name: Unregister()
  nameWithType: ExtEnum<ProcessManager.ProcessID>.Unregister()
  fullName: ExtEnum<ProcessManager.ProcessID>.Unregister()
  nameWithType.vb: ExtEnum(Of ProcessManager.ProcessID).Unregister()
  fullName.vb: ExtEnum(Of ProcessManager.ProcessID).Unregister()
  spec.csharp:
  - uid: Global.ExtEnum{ProcessManager.ProcessID}.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{ProcessManager.ProcessID}.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
- uid: Global.ExtEnum{ProcessManager.ProcessID}.valuesVersion
  commentId: P:Global.ExtEnum{ProcessManager.ProcessID}.valuesVersion
  parent: Global.ExtEnum{ProcessManager.ProcessID}
  definition: Global.ExtEnum`1.valuesVersion
  href: Global.ExtEnum-1.html#ExtEnum_1_valuesVersion
  name: valuesVersion
  nameWithType: ExtEnum<ProcessManager.ProcessID>.valuesVersion
  fullName: ExtEnum<ProcessManager.ProcessID>.valuesVersion
  nameWithType.vb: ExtEnum(Of ProcessManager.ProcessID).valuesVersion
  fullName.vb: ExtEnum(Of ProcessManager.ProcessID).valuesVersion
- uid: Global.ExtEnum{ProcessManager.ProcessID}.Index
  commentId: P:Global.ExtEnum{ProcessManager.ProcessID}.Index
  parent: Global.ExtEnum{ProcessManager.ProcessID}
  definition: Global.ExtEnum`1.Index
  href: Global.ExtEnum-1.html#ExtEnum_1_Index
  name: Index
  nameWithType: ExtEnum<ProcessManager.ProcessID>.Index
  fullName: ExtEnum<ProcessManager.ProcessID>.Index
  nameWithType.vb: ExtEnum(Of ProcessManager.ProcessID).Index
  fullName.vb: ExtEnum(Of ProcessManager.ProcessID).Index
- uid: Global.ExtEnumBase.value
  commentId: F:Global.ExtEnumBase.value
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_value
  name: value
  nameWithType: ExtEnumBase.value
  fullName: ExtEnumBase.value
- uid: Global.ExtEnumBase.valueHash
  commentId: F:Global.ExtEnumBase.valueHash
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_valueHash
  name: valueHash
  nameWithType: ExtEnumBase.valueHash
  fullName: ExtEnumBase.valueHash
- uid: Global.ExtEnumBase.index
  commentId: F:Global.ExtEnumBase.index
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_index
  name: index
  nameWithType: ExtEnumBase.index
  fullName: ExtEnumBase.index
- uid: Global.ExtEnumBase.localVersion
  commentId: F:Global.ExtEnumBase.localVersion
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_localVersion
  name: localVersion
  nameWithType: ExtEnumBase.localVersion
  fullName: ExtEnumBase.localVersion
- uid: Global.ExtEnumBase.enumType
  commentId: F:Global.ExtEnumBase.enumType
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_enumType
  name: enumType
  nameWithType: ExtEnumBase.enumType
  fullName: ExtEnumBase.enumType
- uid: Global.ExtEnumBase.valueDictionary
  commentId: F:Global.ExtEnumBase.valueDictionary
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_valueDictionary
  name: valueDictionary
  nameWithType: ExtEnumBase.valueDictionary
  fullName: ExtEnumBase.valueDictionary
- uid: Global.ExtEnumBase.ToString
  commentId: M:Global.ExtEnumBase.ToString
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  name: ToString()
  nameWithType: ExtEnumBase.ToString()
  fullName: ExtEnumBase.ToString()
  spec.csharp:
  - uid: Global.ExtEnumBase.ToString
    name: ToString
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.ToString
    name: ToString
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  - name: (
  - name: )
- uid: Global.ExtEnumBase.CompareTo(System.Object)
  commentId: M:Global.ExtEnumBase.CompareTo(System.Object)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  name: CompareTo(object)
  nameWithType: ExtEnumBase.CompareTo(object)
  fullName: ExtEnumBase.CompareTo(object)
  nameWithType.vb: ExtEnumBase.CompareTo(Object)
  fullName.vb: ExtEnumBase.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: Global.ExtEnumBase.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  commentId: M:Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  name: Parse(Type, string, bool)
  nameWithType: ExtEnumBase.Parse(Type, string, bool)
  fullName: ExtEnumBase.Parse(System.Type, string, bool)
  nameWithType.vb: ExtEnumBase.Parse(Type, String, Boolean)
  fullName.vb: ExtEnumBase.Parse(System.Type, String, Boolean)
  name.vb: Parse(Type, String, Boolean)
  spec.csharp:
  - uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
    name: Parse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
    name: Parse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  commentId: M:Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  name: TryParse(Type, string, bool, out ExtEnumBase)
  nameWithType: ExtEnumBase.TryParse(Type, string, bool, out ExtEnumBase)
  fullName: ExtEnumBase.TryParse(System.Type, string, bool, out ExtEnumBase)
  nameWithType.vb: ExtEnumBase.TryParse(Type, String, Boolean, ExtEnumBase)
  fullName.vb: ExtEnumBase.TryParse(System.Type, String, Boolean, ExtEnumBase)
  name.vb: TryParse(Type, String, Boolean, ExtEnumBase)
  spec.csharp:
  - uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
    name: TryParse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Global.ExtEnumBase
    name: ExtEnumBase
    isExternal: true
    href: ExtEnumBase.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
    name: TryParse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Global.ExtEnumBase
    name: ExtEnumBase
    isExternal: true
    href: ExtEnumBase.html
  - name: )
- uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
  commentId: M:Global.ExtEnumBase.GetExtEnumType(System.Type)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  name: GetExtEnumType(Type)
  nameWithType: ExtEnumBase.GetExtEnumType(Type)
  fullName: ExtEnumBase.GetExtEnumType(System.Type)
  spec.csharp:
  - uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
    name: GetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
    name: GetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  commentId: M:Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  name: TryGetExtEnumType(Type, out ExtEnumType)
  nameWithType: ExtEnumBase.TryGetExtEnumType(Type, out ExtEnumType)
  fullName: ExtEnumBase.TryGetExtEnumType(System.Type, out ExtEnumType)
  nameWithType.vb: ExtEnumBase.TryGetExtEnumType(Type, ExtEnumType)
  fullName.vb: ExtEnumBase.TryGetExtEnumType(System.Type, ExtEnumType)
  name.vb: TryGetExtEnumType(Type, ExtEnumType)
  spec.csharp:
  - uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
    name: TryGetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Global.ExtEnumType
    name: ExtEnumType
    isExternal: true
    href: ExtEnumType.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
    name: TryGetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: Global.ExtEnumType
    name: ExtEnumType
    isExternal: true
    href: ExtEnumType.html
  - name: )
- uid: Global.ExtEnumBase.GetNames(System.Type)
  commentId: M:Global.ExtEnumBase.GetNames(System.Type)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  name: GetNames(Type)
  nameWithType: ExtEnumBase.GetNames(Type)
  fullName: ExtEnumBase.GetNames(System.Type)
  spec.csharp:
  - uid: Global.ExtEnumBase.GetNames(System.Type)
    name: GetNames
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.GetNames(System.Type)
    name: GetNames
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  commentId: M:Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  name: IsDefined(Type, string, bool)
  nameWithType: ExtEnumBase.IsDefined(Type, string, bool)
  fullName: ExtEnumBase.IsDefined(System.Type, string, bool)
  nameWithType.vb: ExtEnumBase.IsDefined(Type, String, Boolean)
  fullName.vb: ExtEnumBase.IsDefined(System.Type, String, Boolean)
  name.vb: IsDefined(Type, String, Boolean)
  spec.csharp:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  commentId: M:Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  name: IsDefined(Type, int)
  nameWithType: ExtEnumBase.IsDefined(Type, int)
  fullName: ExtEnumBase.IsDefined(System.Type, int)
  nameWithType.vb: ExtEnumBase.IsDefined(Type, Integer)
  fullName.vb: ExtEnumBase.IsDefined(System.Type, Integer)
  name.vb: IsDefined(Type, Integer)
  spec.csharp:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ExtEnum`1
  commentId: T:Global.ExtEnum`1
  isExternal: true
  href: ExtEnum-1.html
  name: ExtEnum<T>
  nameWithType: ExtEnum<T>
  fullName: ExtEnum<T>
  nameWithType.vb: ExtEnum(Of T)
  fullName.vb: ExtEnum(Of T)
  name.vb: ExtEnum(Of T)
  spec.csharp:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ExtEnum`1.values
  commentId: F:Global.ExtEnum`1.values
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_values
  name: values
  nameWithType: ExtEnum<T>.values
  fullName: ExtEnum<T>.values
  nameWithType.vb: ExtEnum(Of T).values
  fullName.vb: ExtEnum(Of T).values
- uid: Global.ExtEnum`1.Equals(System.Object)
  commentId: M:Global.ExtEnum`1.Equals(System.Object)
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  name: Equals(object)
  nameWithType: ExtEnum<T>.Equals(object)
  fullName: ExtEnum<T>.Equals(object)
  nameWithType.vb: ExtEnum(Of T).Equals(Object)
  fullName.vb: ExtEnum(Of T).Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Global.ExtEnum`1.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnum`1.Equals(ExtEnum{`0})
  commentId: M:Global.ExtEnum`1.Equals(ExtEnum{`0})
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  name: Equals(ExtEnum<T>)
  nameWithType: ExtEnum<T>.Equals(ExtEnum<T>)
  fullName: ExtEnum<T>.Equals(ExtEnum<T>)
  nameWithType.vb: ExtEnum(Of T).Equals(ExtEnum(Of T))
  fullName.vb: ExtEnum(Of T).Equals(ExtEnum(Of T))
  name.vb: Equals(ExtEnum(Of T))
  spec.csharp:
  - uid: Global.ExtEnum`1.Equals(ExtEnum{`0})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Equals(ExtEnum{`0})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Global.ExtEnum`1.Equals(`0)
  commentId: M:Global.ExtEnum`1.Equals(`0)
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  name: Equals(T)
  nameWithType: ExtEnum<T>.Equals(T)
  fullName: ExtEnum<T>.Equals(T)
  nameWithType.vb: ExtEnum(Of T).Equals(T)
  fullName.vb: ExtEnum(Of T).Equals(T)
  spec.csharp:
  - uid: Global.ExtEnum`1.Equals(`0)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Equals(`0)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - name: T
  - name: )
- uid: Global.ExtEnum`1.GetHashCode
  commentId: M:Global.ExtEnum`1.GetHashCode
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  name: GetHashCode()
  nameWithType: ExtEnum<T>.GetHashCode()
  fullName: ExtEnum<T>.GetHashCode()
  nameWithType.vb: ExtEnum(Of T).GetHashCode()
  fullName.vb: ExtEnum(Of T).GetHashCode()
  spec.csharp:
  - uid: Global.ExtEnum`1.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
- uid: Global.ExtEnum`1.Unregister
  commentId: M:Global.ExtEnum`1.Unregister
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  name: Unregister()
  nameWithType: ExtEnum<T>.Unregister()
  fullName: ExtEnum<T>.Unregister()
  nameWithType.vb: ExtEnum(Of T).Unregister()
  fullName.vb: ExtEnum(Of T).Unregister()
  spec.csharp:
  - uid: Global.ExtEnum`1.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
- uid: Global.ExtEnum`1.valuesVersion
  commentId: P:Global.ExtEnum`1.valuesVersion
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_valuesVersion
  name: valuesVersion
  nameWithType: ExtEnum<T>.valuesVersion
  fullName: ExtEnum<T>.valuesVersion
  nameWithType.vb: ExtEnum(Of T).valuesVersion
  fullName.vb: ExtEnum(Of T).valuesVersion
- uid: Global.ExtEnum`1.Index
  commentId: P:Global.ExtEnum`1.Index
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Index
  name: Index
  nameWithType: ExtEnum<T>.Index
  fullName: ExtEnum<T>.Index
  nameWithType.vb: ExtEnum(Of T).Index
  fullName.vb: ExtEnum(Of T).Index
- uid: Global.ProcessManager.ProcessID
  commentId: T:Global.ProcessManager.ProcessID
  isExternal: true
  href: ProcessManager.html
  name: ProcessManager.ProcessID
  nameWithType: ProcessManager.ProcessID
  fullName: ProcessManager.ProcessID
  spec.csharp:
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  spec.vb:
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
- uid: Global.ProcessManager.ProcessID.#ctor*
  commentId: Overload:Global.ProcessManager.ProcessID.#ctor
  isExternal: true
  href: Global.ProcessManager.ProcessID.html#ProcessManager_ProcessID__ctor_System_String_System_Boolean_
  name: ProcessID
  nameWithType: ProcessManager.ProcessID.ProcessID
  fullName: ProcessManager.ProcessID.ProcessID
  nameWithType.vb: ProcessManager.ProcessID.New
  fullName.vb: ProcessManager.ProcessID.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
