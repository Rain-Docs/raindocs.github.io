### YamlMime:ManagedReference
items:
- uid: Global.Dangler.DanglerProps
  commentId: T:Global.Dangler.DanglerProps
  id: Dangler.DanglerProps
  parent: Global
  children:
  - Global.Dangler.DanglerProps.#ctor
  - Global.Dangler.DanglerProps.airFriction
  - Global.Dangler.DanglerProps.elasticity
  - Global.Dangler.DanglerProps.gravity
  - Global.Dangler.DanglerProps.waterFriction
  - Global.Dangler.DanglerProps.waterGravity
  - Global.Dangler.DanglerProps.weightSymmetryTendency
  langs:
  - csharp
  - vb
  name: Dangler.DanglerProps
  nameWithType: Dangler.DanglerProps
  fullName: Dangler.DanglerProps
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Dangler.DanglerProps</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Dangler.DanglerProps
    content.vb: Public Class Dangler.DanglerProps
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Dangler.DanglerProps.gravity
  commentId: F:Global.Dangler.DanglerProps.gravity
  id: gravity
  parent: Global.Dangler.DanglerProps
  langs:
  - csharp
  - vb
  name: gravity
  nameWithType: Dangler.DanglerProps.gravity
  fullName: Dangler.DanglerProps.gravity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Dangler.DanglerProps.gravity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float gravity
    return:
      type: System.Single
    content.vb: Public gravity As Single
- uid: Global.Dangler.DanglerProps.airFriction
  commentId: F:Global.Dangler.DanglerProps.airFriction
  id: airFriction
  parent: Global.Dangler.DanglerProps
  langs:
  - csharp
  - vb
  name: airFriction
  nameWithType: Dangler.DanglerProps.airFriction
  fullName: Dangler.DanglerProps.airFriction
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Dangler.DanglerProps.airFriction</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float airFriction
    return:
      type: System.Single
    content.vb: Public airFriction As Single
- uid: Global.Dangler.DanglerProps.waterGravity
  commentId: F:Global.Dangler.DanglerProps.waterGravity
  id: waterGravity
  parent: Global.Dangler.DanglerProps
  langs:
  - csharp
  - vb
  name: waterGravity
  nameWithType: Dangler.DanglerProps.waterGravity
  fullName: Dangler.DanglerProps.waterGravity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Dangler.DanglerProps.waterGravity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float waterGravity
    return:
      type: System.Single
    content.vb: Public waterGravity As Single
- uid: Global.Dangler.DanglerProps.waterFriction
  commentId: F:Global.Dangler.DanglerProps.waterFriction
  id: waterFriction
  parent: Global.Dangler.DanglerProps
  langs:
  - csharp
  - vb
  name: waterFriction
  nameWithType: Dangler.DanglerProps.waterFriction
  fullName: Dangler.DanglerProps.waterFriction
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Dangler.DanglerProps.waterFriction</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float waterFriction
    return:
      type: System.Single
    content.vb: Public waterFriction As Single
- uid: Global.Dangler.DanglerProps.elasticity
  commentId: F:Global.Dangler.DanglerProps.elasticity
  id: elasticity
  parent: Global.Dangler.DanglerProps
  langs:
  - csharp
  - vb
  name: elasticity
  nameWithType: Dangler.DanglerProps.elasticity
  fullName: Dangler.DanglerProps.elasticity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Dangler.DanglerProps.elasticity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float elasticity
    return:
      type: System.Single
    content.vb: Public elasticity As Single
- uid: Global.Dangler.DanglerProps.weightSymmetryTendency
  commentId: F:Global.Dangler.DanglerProps.weightSymmetryTendency
  id: weightSymmetryTendency
  parent: Global.Dangler.DanglerProps
  langs:
  - csharp
  - vb
  name: weightSymmetryTendency
  nameWithType: Dangler.DanglerProps.weightSymmetryTendency
  fullName: Dangler.DanglerProps.weightSymmetryTendency
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Dangler.DanglerProps.weightSymmetryTendency</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float weightSymmetryTendency
    return:
      type: System.Single
    content.vb: Public weightSymmetryTendency As Single
- uid: Global.Dangler.DanglerProps.#ctor
  commentId: M:Global.Dangler.DanglerProps.#ctor
  id: '#ctor'
  parent: Global.Dangler.DanglerProps
  langs:
  - csharp
  - vb
  name: DanglerProps()
  nameWithType: Dangler.DanglerProps.DanglerProps()
  fullName: Dangler.DanglerProps.DanglerProps()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Dangler.DanglerProps</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DanglerProps()
    content.vb: Public Sub New()
  overload: Global.Dangler.DanglerProps.#ctor*
  nameWithType.vb: Dangler.DanglerProps.New()
  fullName.vb: Dangler.DanglerProps.New()
  name.vb: New()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.Dangler.DanglerProps.#ctor*
  commentId: Overload:Global.Dangler.DanglerProps.#ctor
  isExternal: true
  href: Global.Dangler.DanglerProps.html#Dangler_DanglerProps__ctor
  name: DanglerProps
  nameWithType: Dangler.DanglerProps.DanglerProps
  fullName: Dangler.DanglerProps.DanglerProps
  nameWithType.vb: Dangler.DanglerProps.New
  fullName.vb: Dangler.DanglerProps.New
  name.vb: New
