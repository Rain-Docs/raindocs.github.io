### YamlMime:ManagedReference
items:
- uid: Global.FTouch
  commentId: T:Global.FTouch
  id: FTouch
  parent: Global
  children:
  - Global.FTouch.#ctor
  - Global.FTouch.Copy(FTouch)
  - Global.FTouch.Copy(UnityEngine.Touch,System.Single,System.Single,System.Single)
  - Global.FTouch.deltaPosition
  - Global.FTouch.deltaTime
  - Global.FTouch.fingerId
  - Global.FTouch.phase
  - Global.FTouch.position
  - Global.FTouch.slot
  - Global.FTouch.tapCount
  langs:
  - csharp
  - vb
  name: FTouch
  nameWithType: FTouch
  fullName: FTouch
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FTouch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FTouch
    content.vb: Public Class FTouch
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FTouch.fingerId
  commentId: F:Global.FTouch.fingerId
  id: fingerId
  parent: Global.FTouch
  langs:
  - csharp
  - vb
  name: fingerId
  nameWithType: FTouch.fingerId
  fullName: FTouch.fingerId
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FTouch.fingerId</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int fingerId
    return:
      type: System.Int32
    content.vb: Public fingerId As Integer
- uid: Global.FTouch.position
  commentId: F:Global.FTouch.position
  id: position
  parent: Global.FTouch
  langs:
  - csharp
  - vb
  name: position
  nameWithType: FTouch.position
  fullName: FTouch.position
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FTouch.position</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 position
    return:
      type: UnityEngine.Vector2
    content.vb: Public position As Vector2
- uid: Global.FTouch.deltaPosition
  commentId: F:Global.FTouch.deltaPosition
  id: deltaPosition
  parent: Global.FTouch
  langs:
  - csharp
  - vb
  name: deltaPosition
  nameWithType: FTouch.deltaPosition
  fullName: FTouch.deltaPosition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FTouch.deltaPosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 deltaPosition
    return:
      type: UnityEngine.Vector2
    content.vb: Public deltaPosition As Vector2
- uid: Global.FTouch.deltaTime
  commentId: F:Global.FTouch.deltaTime
  id: deltaTime
  parent: Global.FTouch
  langs:
  - csharp
  - vb
  name: deltaTime
  nameWithType: FTouch.deltaTime
  fullName: FTouch.deltaTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FTouch.deltaTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float deltaTime
    return:
      type: System.Single
    content.vb: Public deltaTime As Single
- uid: Global.FTouch.tapCount
  commentId: F:Global.FTouch.tapCount
  id: tapCount
  parent: Global.FTouch
  langs:
  - csharp
  - vb
  name: tapCount
  nameWithType: FTouch.tapCount
  fullName: FTouch.tapCount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FTouch.tapCount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int tapCount
    return:
      type: System.Int32
    content.vb: Public tapCount As Integer
- uid: Global.FTouch.phase
  commentId: F:Global.FTouch.phase
  id: phase
  parent: Global.FTouch
  langs:
  - csharp
  - vb
  name: phase
  nameWithType: FTouch.phase
  fullName: FTouch.phase
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FTouch.phase</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TouchPhase phase
    return:
      type: UnityEngine.TouchPhase
    content.vb: Public phase As TouchPhase
- uid: Global.FTouch.slot
  commentId: F:Global.FTouch.slot
  id: slot
  parent: Global.FTouch
  langs:
  - csharp
  - vb
  name: slot
  nameWithType: FTouch.slot
  fullName: FTouch.slot
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FTouch.slot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FTouchSlot slot
    return:
      type: Global.FTouchSlot
    content.vb: Public slot As FTouchSlot
- uid: Global.FTouch.Copy(FTouch)
  commentId: M:Global.FTouch.Copy(FTouch)
  id: Copy(FTouch)
  parent: Global.FTouch
  langs:
  - csharp
  - vb
  name: Copy(FTouch)
  nameWithType: FTouch.Copy(FTouch)
  fullName: FTouch.Copy(FTouch)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouch.Copy(FTouch)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Copy(FTouch touch)
    parameters:
    - id: touch
      type: Global.FTouch
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touch</parameter>
            <parameter>M:FTouch.Copy(FTouch)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Copy(touch As FTouch)
  overload: Global.FTouch.Copy*
- uid: Global.FTouch.Copy(UnityEngine.Touch,System.Single,System.Single,System.Single)
  commentId: M:Global.FTouch.Copy(UnityEngine.Touch,System.Single,System.Single,System.Single)
  id: Copy(UnityEngine.Touch,System.Single,System.Single,System.Single)
  parent: Global.FTouch
  langs:
  - csharp
  - vb
  name: Copy(Touch, float, float, float)
  nameWithType: FTouch.Copy(Touch, float, float, float)
  fullName: FTouch.Copy(UnityEngine.Touch, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouch.Copy(UnityEngine.Touch,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Copy(Touch touch, float offsetX, float offsetY, float touchScale)
    parameters:
    - id: touch
      type: UnityEngine.Touch
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touch</parameter>
            <parameter>M:FTouch.Copy(UnityEngine.Touch,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetX</parameter>
            <parameter>M:FTouch.Copy(UnityEngine.Touch,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetY</parameter>
            <parameter>M:FTouch.Copy(UnityEngine.Touch,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: touchScale
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touchScale</parameter>
            <parameter>M:FTouch.Copy(UnityEngine.Touch,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Copy(touch As Touch, offsetX As Single, offsetY As Single, touchScale As Single)
  overload: Global.FTouch.Copy*
  nameWithType.vb: FTouch.Copy(Touch, Single, Single, Single)
  fullName.vb: FTouch.Copy(UnityEngine.Touch, Single, Single, Single)
  name.vb: Copy(Touch, Single, Single, Single)
- uid: Global.FTouch.#ctor
  commentId: M:Global.FTouch.#ctor
  id: '#ctor'
  parent: Global.FTouch
  langs:
  - csharp
  - vb
  name: FTouch()
  nameWithType: FTouch.FTouch()
  fullName: FTouch.FTouch()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FTouch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FTouch()
    content.vb: Public Sub New()
  overload: Global.FTouch.#ctor*
  nameWithType.vb: FTouch.New()
  fullName.vb: FTouch.New()
  name.vb: New()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.TouchPhase
  commentId: '!:UnityEngine.TouchPhase'
  isExternal: true
  name: TouchPhase
  nameWithType: TouchPhase
  fullName: UnityEngine.TouchPhase
- uid: Global.FTouchSlot
  commentId: T:Global.FTouchSlot
  isExternal: true
  href: FTouchSlot.html
  name: FTouchSlot
  nameWithType: FTouchSlot
  fullName: FTouchSlot
- uid: Global.FTouch.Copy*
  commentId: Overload:Global.FTouch.Copy
  isExternal: true
  href: Global.FTouch.html#FTouch_Copy_FTouch_
  name: Copy
  nameWithType: FTouch.Copy
  fullName: FTouch.Copy
- uid: Global.FTouch
  commentId: T:Global.FTouch
  isExternal: true
  href: FTouch.html
  name: FTouch
  nameWithType: FTouch
  fullName: FTouch
- uid: UnityEngine.Touch
  commentId: '!:UnityEngine.Touch'
  isExternal: true
  name: Touch
  nameWithType: Touch
  fullName: UnityEngine.Touch
- uid: Global.FTouch.#ctor*
  commentId: Overload:Global.FTouch.#ctor
  isExternal: true
  href: Global.FTouch.html#FTouch__ctor
  name: FTouch
  nameWithType: FTouch.FTouch
  fullName: FTouch.FTouch
  nameWithType.vb: FTouch.New
  fullName.vb: FTouch.New
  name.vb: New
