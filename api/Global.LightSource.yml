### YamlMime:ManagedReference
items:
- uid: Global.LightSource
  commentId: T:Global.LightSource
  id: LightSource
  parent: Global
  children:
  - Global.LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable)
  - Global.LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable,System.Boolean)
  - Global.LightSource.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.LightSource.Alpha
  - Global.LightSource.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.LightSource.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.LightSource.ElementName
  - Global.LightSource.HardSetAlpha(System.Single)
  - Global.LightSource.HardSetPos(UnityEngine.Vector2)
  - Global.LightSource.HardSetRad(System.Single)
  - Global.LightSource.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.LightSource.LayerName
  - Global.LightSource.Lightness
  - Global.LightSource.Pos
  - Global.LightSource.Rad
  - Global.LightSource.Update(System.Boolean)
  - Global.LightSource.affectedByPaletteDarkness
  - Global.LightSource.alpha
  - Global.LightSource.blinkRate
  - Global.LightSource.blinkTicker
  - Global.LightSource.blinkType
  - Global.LightSource.color
  - Global.LightSource.colorFromEnvironment
  - Global.LightSource.effectColor
  - Global.LightSource.environmentalLight
  - Global.LightSource.fadeWithSun
  - Global.LightSource.flat
  - Global.LightSource.lastAlpha
  - Global.LightSource.lastPos
  - Global.LightSource.lastRad
  - Global.LightSource.nightFade
  - Global.LightSource.nightLight
  - Global.LightSource.noGameplayImpact
  - Global.LightSource.rad
  - Global.LightSource.requireUpKeep
  - Global.LightSource.setAlpha
  - Global.LightSource.setBlinkProperties(PlacedObject.LightSourceData.BlinkType,System.Single)
  - Global.LightSource.setPos
  - Global.LightSource.setRad
  - Global.LightSource.stayAlive
  - Global.LightSource.submersible
  - Global.LightSource.tiedToObject
  - Global.LightSource.waterSurfaceLevel
  langs:
  - csharp
  - vb
  name: LightSource
  nameWithType: LightSource
  fullName: LightSource
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LightSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class LightSource : UpdatableAndDeletable, IDrawable'
    content.vb: Public Class LightSource Inherits UpdatableAndDeletable Implements IDrawable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  derivedClasses:
  - Global.Redlight.RedlightLight
  implements:
  - Global.IDrawable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LightSource.setPos
  commentId: F:Global.LightSource.setPos
  id: setPos
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: setPos
  nameWithType: LightSource.setPos
  fullName: LightSource.setPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.setPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? setPos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public setPos As Vector2?
- uid: Global.LightSource.lastPos
  commentId: F:Global.LightSource.lastPos
  id: lastPos
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: LightSource.lastPos
  fullName: LightSource.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: Global.LightSource.setRad
  commentId: F:Global.LightSource.setRad
  id: setRad
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: setRad
  nameWithType: LightSource.setRad
  fullName: LightSource.setRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.setRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? setRad
    return:
      type: System.Nullable{System.Single}
    content.vb: Public setRad As Single?
- uid: Global.LightSource.rad
  commentId: F:Global.LightSource.rad
  id: rad
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: LightSource.rad
  fullName: LightSource.rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad
    return:
      type: System.Single
    content.vb: Public rad As Single
- uid: Global.LightSource.lastRad
  commentId: F:Global.LightSource.lastRad
  id: lastRad
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: lastRad
  nameWithType: LightSource.lastRad
  fullName: LightSource.lastRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.lastRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastRad
    return:
      type: System.Single
    content.vb: Public lastRad As Single
- uid: Global.LightSource.setAlpha
  commentId: F:Global.LightSource.setAlpha
  id: setAlpha
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: setAlpha
  nameWithType: LightSource.setAlpha
  fullName: LightSource.setAlpha
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.setAlpha</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? setAlpha
    return:
      type: System.Nullable{System.Single}
    content.vb: Public setAlpha As Single?
- uid: Global.LightSource.alpha
  commentId: F:Global.LightSource.alpha
  id: alpha
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: alpha
  nameWithType: LightSource.alpha
  fullName: LightSource.alpha
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.alpha</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float alpha
    return:
      type: System.Single
    content.vb: Public alpha As Single
- uid: Global.LightSource.lastAlpha
  commentId: F:Global.LightSource.lastAlpha
  id: lastAlpha
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: lastAlpha
  nameWithType: LightSource.lastAlpha
  fullName: LightSource.lastAlpha
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.lastAlpha</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastAlpha
    return:
      type: System.Single
    content.vb: Public lastAlpha As Single
- uid: Global.LightSource.affectedByPaletteDarkness
  commentId: F:Global.LightSource.affectedByPaletteDarkness
  id: affectedByPaletteDarkness
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: affectedByPaletteDarkness
  nameWithType: LightSource.affectedByPaletteDarkness
  fullName: LightSource.affectedByPaletteDarkness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.affectedByPaletteDarkness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float affectedByPaletteDarkness
    return:
      type: System.Single
    content.vb: Public affectedByPaletteDarkness As Single
- uid: Global.LightSource.colorFromEnvironment
  commentId: F:Global.LightSource.colorFromEnvironment
  id: colorFromEnvironment
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: colorFromEnvironment
  nameWithType: LightSource.colorFromEnvironment
  fullName: LightSource.colorFromEnvironment
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.colorFromEnvironment</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool colorFromEnvironment
    return:
      type: System.Boolean
    content.vb: Public colorFromEnvironment As Boolean
- uid: Global.LightSource.effectColor
  commentId: F:Global.LightSource.effectColor
  id: effectColor
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: effectColor
  nameWithType: LightSource.effectColor
  fullName: LightSource.effectColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.effectColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int effectColor
    return:
      type: System.Int32
    content.vb: Public effectColor As Integer
- uid: Global.LightSource.fadeWithSun
  commentId: F:Global.LightSource.fadeWithSun
  id: fadeWithSun
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: fadeWithSun
  nameWithType: LightSource.fadeWithSun
  fullName: LightSource.fadeWithSun
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.fadeWithSun</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool fadeWithSun
    return:
      type: System.Boolean
    content.vb: Public fadeWithSun As Boolean
- uid: Global.LightSource.waterSurfaceLevel
  commentId: F:Global.LightSource.waterSurfaceLevel
  id: waterSurfaceLevel
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: waterSurfaceLevel
  nameWithType: LightSource.waterSurfaceLevel
  fullName: LightSource.waterSurfaceLevel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.waterSurfaceLevel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float waterSurfaceLevel
    return:
      type: System.Single
    content.vb: Public waterSurfaceLevel As Single
- uid: Global.LightSource.environmentalLight
  commentId: F:Global.LightSource.environmentalLight
  id: environmentalLight
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: environmentalLight
  nameWithType: LightSource.environmentalLight
  fullName: LightSource.environmentalLight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.environmentalLight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool environmentalLight
    return:
      type: System.Boolean
    content.vb: Public environmentalLight As Boolean
- uid: Global.LightSource.tiedToObject
  commentId: F:Global.LightSource.tiedToObject
  id: tiedToObject
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: tiedToObject
  nameWithType: LightSource.tiedToObject
  fullName: LightSource.tiedToObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.tiedToObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public UpdatableAndDeletable tiedToObject
    return:
      type: Global.UpdatableAndDeletable
    content.vb: Public tiedToObject As UpdatableAndDeletable
- uid: Global.LightSource.requireUpKeep
  commentId: F:Global.LightSource.requireUpKeep
  id: requireUpKeep
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: requireUpKeep
  nameWithType: LightSource.requireUpKeep
  fullName: LightSource.requireUpKeep
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.requireUpKeep</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool requireUpKeep
    return:
      type: System.Boolean
    content.vb: Public requireUpKeep As Boolean
- uid: Global.LightSource.stayAlive
  commentId: F:Global.LightSource.stayAlive
  id: stayAlive
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: stayAlive
  nameWithType: LightSource.stayAlive
  fullName: LightSource.stayAlive
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.stayAlive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool stayAlive
    return:
      type: System.Boolean
    content.vb: Public stayAlive As Boolean
- uid: Global.LightSource.blinkTicker
  commentId: F:Global.LightSource.blinkTicker
  id: blinkTicker
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: blinkTicker
  nameWithType: LightSource.blinkTicker
  fullName: LightSource.blinkTicker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.blinkTicker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int blinkTicker
    return:
      type: System.Int32
    content.vb: Public blinkTicker As Integer
- uid: Global.LightSource.blinkType
  commentId: F:Global.LightSource.blinkType
  id: blinkType
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: blinkType
  nameWithType: LightSource.blinkType
  fullName: LightSource.blinkType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.blinkType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject.LightSourceData.BlinkType blinkType
    return:
      type: Global.PlacedObject.LightSourceData.BlinkType
    content.vb: Public blinkType As PlacedObject.LightSourceData.BlinkType
- uid: Global.LightSource.blinkRate
  commentId: F:Global.LightSource.blinkRate
  id: blinkRate
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: blinkRate
  nameWithType: LightSource.blinkRate
  fullName: LightSource.blinkRate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.blinkRate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float blinkRate
    return:
      type: System.Single
    content.vb: Public blinkRate As Single
- uid: Global.LightSource.submersible
  commentId: F:Global.LightSource.submersible
  id: submersible
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: submersible
  nameWithType: LightSource.submersible
  fullName: LightSource.submersible
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.submersible</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool submersible
    return:
      type: System.Boolean
    content.vb: Public submersible As Boolean
- uid: Global.LightSource.nightLight
  commentId: F:Global.LightSource.nightLight
  id: nightLight
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: nightLight
  nameWithType: LightSource.nightLight
  fullName: LightSource.nightLight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.nightLight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool nightLight
    return:
      type: System.Boolean
    content.vb: Public nightLight As Boolean
- uid: Global.LightSource.nightFade
  commentId: F:Global.LightSource.nightFade
  id: nightFade
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: nightFade
  nameWithType: LightSource.nightFade
  fullName: LightSource.nightFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.nightFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float nightFade
    return:
      type: System.Single
    content.vb: Public nightFade As Single
- uid: Global.LightSource.noGameplayImpact
  commentId: F:Global.LightSource.noGameplayImpact
  id: noGameplayImpact
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: noGameplayImpact
  nameWithType: LightSource.noGameplayImpact
  fullName: LightSource.noGameplayImpact
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightSource.noGameplayImpact</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool noGameplayImpact
    return:
      type: System.Boolean
    content.vb: Public noGameplayImpact As Boolean
- uid: Global.LightSource.HardSetRad(System.Single)
  commentId: M:Global.LightSource.HardSetRad(System.Single)
  id: HardSetRad(System.Single)
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: HardSetRad(float)
  nameWithType: LightSource.HardSetRad(float)
  fullName: LightSource.HardSetRad(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightSource.HardSetRad(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void HardSetRad(float r)
    parameters:
    - id: r
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>r</parameter>
            <parameter>M:LightSource.HardSetRad(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub HardSetRad(r As Single)
  overload: Global.LightSource.HardSetRad*
  nameWithType.vb: LightSource.HardSetRad(Single)
  fullName.vb: LightSource.HardSetRad(Single)
  name.vb: HardSetRad(Single)
- uid: Global.LightSource.HardSetAlpha(System.Single)
  commentId: M:Global.LightSource.HardSetAlpha(System.Single)
  id: HardSetAlpha(System.Single)
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: HardSetAlpha(float)
  nameWithType: LightSource.HardSetAlpha(float)
  fullName: LightSource.HardSetAlpha(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightSource.HardSetAlpha(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void HardSetAlpha(float a)
    parameters:
    - id: a
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:LightSource.HardSetAlpha(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub HardSetAlpha(a As Single)
  overload: Global.LightSource.HardSetAlpha*
  nameWithType.vb: LightSource.HardSetAlpha(Single)
  fullName.vb: LightSource.HardSetAlpha(Single)
  name.vb: HardSetAlpha(Single)
- uid: Global.LightSource.HardSetPos(UnityEngine.Vector2)
  commentId: M:Global.LightSource.HardSetPos(UnityEngine.Vector2)
  id: HardSetPos(UnityEngine.Vector2)
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: HardSetPos(Vector2)
  nameWithType: LightSource.HardSetPos(Vector2)
  fullName: LightSource.HardSetPos(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightSource.HardSetPos(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void HardSetPos(Vector2 p)
    parameters:
    - id: p
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>p</parameter>
            <parameter>M:LightSource.HardSetPos(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub HardSetPos(p As Vector2)
  overload: Global.LightSource.HardSetPos*
- uid: Global.LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable)
  commentId: M:Global.LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable)
  id: '#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable)'
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: LightSource(Vector2, bool, Color, UpdatableAndDeletable)
  nameWithType: LightSource.LightSource(Vector2, bool, Color, UpdatableAndDeletable)
  fullName: LightSource.LightSource(UnityEngine.Vector2, bool, UnityEngine.Color, UpdatableAndDeletable)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LightSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LightSource(Vector2 initPos, bool environmentalLight, Color color, UpdatableAndDeletable tiedToObject)
    parameters:
    - id: initPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>initPos</parameter>
            <parameter>M:LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable)</parameter>
          </include>
        </markup>
    - id: environmentalLight
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>environmentalLight</parameter>
            <parameter>M:LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable)</parameter>
          </include>
        </markup>
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable)</parameter>
          </include>
        </markup>
    - id: tiedToObject
      type: Global.UpdatableAndDeletable
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tiedToObject</parameter>
            <parameter>M:LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(initPos As Vector2, environmentalLight As Boolean, color As Color, tiedToObject As UpdatableAndDeletable)
  overload: Global.LightSource.#ctor*
  nameWithType.vb: LightSource.New(Vector2, Boolean, Color, UpdatableAndDeletable)
  fullName.vb: LightSource.New(UnityEngine.Vector2, Boolean, UnityEngine.Color, UpdatableAndDeletable)
  name.vb: New(Vector2, Boolean, Color, UpdatableAndDeletable)
- uid: Global.LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable,System.Boolean)
  commentId: M:Global.LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable,System.Boolean)
  id: '#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable,System.Boolean)'
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: LightSource(Vector2, bool, Color, UpdatableAndDeletable, bool)
  nameWithType: LightSource.LightSource(Vector2, bool, Color, UpdatableAndDeletable, bool)
  fullName: LightSource.LightSource(UnityEngine.Vector2, bool, UnityEngine.Color, UpdatableAndDeletable, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LightSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LightSource(Vector2 initPos, bool environmentalLight, Color color, UpdatableAndDeletable tiedToObject, bool submersible)
    parameters:
    - id: initPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>initPos</parameter>
            <parameter>M:LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable,System.Boolean)</parameter>
          </include>
        </markup>
    - id: environmentalLight
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>environmentalLight</parameter>
            <parameter>M:LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable,System.Boolean)</parameter>
          </include>
        </markup>
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable,System.Boolean)</parameter>
          </include>
        </markup>
    - id: tiedToObject
      type: Global.UpdatableAndDeletable
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tiedToObject</parameter>
            <parameter>M:LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable,System.Boolean)</parameter>
          </include>
        </markup>
    - id: submersible
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>submersible</parameter>
            <parameter>M:LightSource.#ctor(UnityEngine.Vector2,System.Boolean,UnityEngine.Color,UpdatableAndDeletable,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(initPos As Vector2, environmentalLight As Boolean, color As Color, tiedToObject As UpdatableAndDeletable, submersible As Boolean)
  overload: Global.LightSource.#ctor*
  nameWithType.vb: LightSource.New(Vector2, Boolean, Color, UpdatableAndDeletable, Boolean)
  fullName.vb: LightSource.New(UnityEngine.Vector2, Boolean, UnityEngine.Color, UpdatableAndDeletable, Boolean)
  name.vb: New(Vector2, Boolean, Color, UpdatableAndDeletable, Boolean)
- uid: Global.LightSource.setBlinkProperties(PlacedObject.LightSourceData.BlinkType,System.Single)
  commentId: M:Global.LightSource.setBlinkProperties(PlacedObject.LightSourceData.BlinkType,System.Single)
  id: setBlinkProperties(PlacedObject.LightSourceData.BlinkType,System.Single)
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: setBlinkProperties(BlinkType, float)
  nameWithType: LightSource.setBlinkProperties(PlacedObject.LightSourceData.BlinkType, float)
  fullName: LightSource.setBlinkProperties(PlacedObject.LightSourceData.BlinkType, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightSource.setBlinkProperties(PlacedObject.LightSourceData.BlinkType,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void setBlinkProperties(PlacedObject.LightSourceData.BlinkType type, float rate)
    parameters:
    - id: type
      type: Global.PlacedObject.LightSourceData.BlinkType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:LightSource.setBlinkProperties(PlacedObject.LightSourceData.BlinkType,System.Single)</parameter>
          </include>
        </markup>
    - id: rate
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rate</parameter>
            <parameter>M:LightSource.setBlinkProperties(PlacedObject.LightSourceData.BlinkType,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub setBlinkProperties(type As PlacedObject.LightSourceData.BlinkType, rate As Single)
  overload: Global.LightSource.setBlinkProperties*
  nameWithType.vb: LightSource.setBlinkProperties(PlacedObject.LightSourceData.BlinkType, Single)
  fullName.vb: LightSource.setBlinkProperties(PlacedObject.LightSourceData.BlinkType, Single)
  name.vb: setBlinkProperties(BlinkType, Single)
- uid: Global.LightSource.Update(System.Boolean)
  commentId: M:Global.LightSource.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: LightSource.Update(bool)
  fullName: LightSource.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightSource.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:LightSource.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.LightSource.Update*
  nameWithType.vb: LightSource.Update(Boolean)
  fullName.vb: LightSource.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.LightSource.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.LightSource.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: LightSource.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: LightSource.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightSource.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LightSource.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LightSource.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.LightSource.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Global.LightSource.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.LightSource.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: LightSource.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: LightSource.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightSource.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LightSource.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LightSource.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:LightSource.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:LightSource.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.LightSource.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: LightSource.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: LightSource.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.LightSource.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.LightSource.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: LightSource.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: LightSource.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightSource.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LightSource.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LightSource.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:LightSource.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.LightSource.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Global.LightSource.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.LightSource.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: LightSource.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: LightSource.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightSource.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LightSource.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LightSource.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:LightSource.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.LightSource.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Global.LightSource.Pos
  commentId: P:Global.LightSource.Pos
  id: Pos
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: Pos
  nameWithType: LightSource.Pos
  fullName: LightSource.Pos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LightSource.Pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 Pos { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property Pos As Vector2
  overload: Global.LightSource.Pos*
- uid: Global.LightSource.Rad
  commentId: P:Global.LightSource.Rad
  id: Rad
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: Rad
  nameWithType: LightSource.Rad
  fullName: LightSource.Rad
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LightSource.Rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Rad { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Rad As Single
  overload: Global.LightSource.Rad*
- uid: Global.LightSource.Alpha
  commentId: P:Global.LightSource.Alpha
  id: Alpha
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: Alpha
  nameWithType: LightSource.Alpha
  fullName: LightSource.Alpha
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LightSource.Alpha</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Alpha { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Alpha As Single
  overload: Global.LightSource.Alpha*
- uid: Global.LightSource.Lightness
  commentId: P:Global.LightSource.Lightness
  id: Lightness
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: Lightness
  nameWithType: LightSource.Lightness
  fullName: LightSource.Lightness
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LightSource.Lightness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Lightness { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Lightness As Single
  overload: Global.LightSource.Lightness*
- uid: Global.LightSource.color
  commentId: P:Global.LightSource.color
  id: color
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: color
  nameWithType: LightSource.color
  fullName: LightSource.color
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LightSource.color</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color color { get; set; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public Property color As Color
  overload: Global.LightSource.color*
- uid: Global.LightSource.flat
  commentId: P:Global.LightSource.flat
  id: flat
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: flat
  nameWithType: LightSource.flat
  fullName: LightSource.flat
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LightSource.flat</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool flat { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property flat As Boolean
  overload: Global.LightSource.flat*
- uid: Global.LightSource.ElementName
  commentId: P:Global.LightSource.ElementName
  id: ElementName
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: ElementName
  nameWithType: LightSource.ElementName
  fullName: LightSource.ElementName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LightSource.ElementName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual string ElementName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property ElementName As String
  overload: Global.LightSource.ElementName*
- uid: Global.LightSource.LayerName
  commentId: P:Global.LightSource.LayerName
  id: LayerName
  parent: Global.LightSource
  langs:
  - csharp
  - vb
  name: LayerName
  nameWithType: LightSource.LayerName
  fullName: LightSource.LayerName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LightSource.LayerName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual string LayerName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property LayerName As String
  overload: Global.LightSource.LayerName*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.PlacedObject.LightSourceData.BlinkType
  commentId: T:Global.PlacedObject.LightSourceData.BlinkType
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject.LightSourceData.BlinkType
  nameWithType: PlacedObject.LightSourceData.BlinkType
  fullName: PlacedObject.LightSourceData.BlinkType
  spec.csharp:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.LightSourceData
    name: LightSourceData
    isExternal: true
    href: PlacedObject.LightSourceData.html
  - name: .
  - uid: Global.PlacedObject.LightSourceData.BlinkType
    name: BlinkType
    isExternal: true
    href: PlacedObject.LightSourceData.BlinkType.html
  spec.vb:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.LightSourceData
    name: LightSourceData
    isExternal: true
    href: PlacedObject.LightSourceData.html
  - name: .
  - uid: Global.PlacedObject.LightSourceData.BlinkType
    name: BlinkType
    isExternal: true
    href: PlacedObject.LightSourceData.BlinkType.html
- uid: Global.LightSource.HardSetRad*
  commentId: Overload:Global.LightSource.HardSetRad
  isExternal: true
  href: Global.LightSource.html#LightSource_HardSetRad_System_Single_
  name: HardSetRad
  nameWithType: LightSource.HardSetRad
  fullName: LightSource.HardSetRad
- uid: Global.LightSource.HardSetAlpha*
  commentId: Overload:Global.LightSource.HardSetAlpha
  isExternal: true
  href: Global.LightSource.html#LightSource_HardSetAlpha_System_Single_
  name: HardSetAlpha
  nameWithType: LightSource.HardSetAlpha
  fullName: LightSource.HardSetAlpha
- uid: Global.LightSource.HardSetPos*
  commentId: Overload:Global.LightSource.HardSetPos
  isExternal: true
  href: Global.LightSource.html#LightSource_HardSetPos_UnityEngine_Vector2_
  name: HardSetPos
  nameWithType: LightSource.HardSetPos
  fullName: LightSource.HardSetPos
- uid: Global.LightSource.#ctor*
  commentId: Overload:Global.LightSource.#ctor
  isExternal: true
  href: Global.LightSource.html#LightSource__ctor_UnityEngine_Vector2_System_Boolean_UnityEngine_Color_UpdatableAndDeletable_
  name: LightSource
  nameWithType: LightSource.LightSource
  fullName: LightSource.LightSource
  nameWithType.vb: LightSource.New
  fullName.vb: LightSource.New
  name.vb: New
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.LightSource.setBlinkProperties*
  commentId: Overload:Global.LightSource.setBlinkProperties
  isExternal: true
  href: Global.LightSource.html#LightSource_setBlinkProperties_PlacedObject_LightSourceData_BlinkType_System_Single_
  name: setBlinkProperties
  nameWithType: LightSource.setBlinkProperties
  fullName: LightSource.setBlinkProperties
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.LightSource.Update*
  commentId: Overload:Global.LightSource.Update
  isExternal: true
  href: Global.LightSource.html#LightSource_Update_System_Boolean_
  name: Update
  nameWithType: LightSource.Update
  fullName: LightSource.Update
- uid: Global.LightSource.InitiateSprites*
  commentId: Overload:Global.LightSource.InitiateSprites
  isExternal: true
  href: Global.LightSource.html#LightSource_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: LightSource.InitiateSprites
  fullName: LightSource.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.LightSource.DrawSprites*
  commentId: Overload:Global.LightSource.DrawSprites
  isExternal: true
  href: Global.LightSource.html#LightSource_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: LightSource.DrawSprites
  fullName: LightSource.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.LightSource.ApplyPalette*
  commentId: Overload:Global.LightSource.ApplyPalette
  isExternal: true
  href: Global.LightSource.html#LightSource_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: LightSource.ApplyPalette
  fullName: LightSource.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.LightSource.AddToContainer*
  commentId: Overload:Global.LightSource.AddToContainer
  isExternal: true
  href: Global.LightSource.html#LightSource_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: LightSource.AddToContainer
  fullName: LightSource.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.LightSource.Pos*
  commentId: Overload:Global.LightSource.Pos
  isExternal: true
  href: Global.LightSource.html#LightSource_Pos
  name: Pos
  nameWithType: LightSource.Pos
  fullName: LightSource.Pos
- uid: Global.LightSource.Rad*
  commentId: Overload:Global.LightSource.Rad
  isExternal: true
  href: Global.LightSource.html#LightSource_Rad
  name: Rad
  nameWithType: LightSource.Rad
  fullName: LightSource.Rad
- uid: Global.LightSource.Alpha*
  commentId: Overload:Global.LightSource.Alpha
  isExternal: true
  href: Global.LightSource.html#LightSource_Alpha
  name: Alpha
  nameWithType: LightSource.Alpha
  fullName: LightSource.Alpha
- uid: Global.LightSource.Lightness*
  commentId: Overload:Global.LightSource.Lightness
  isExternal: true
  href: Global.LightSource.html#LightSource_Lightness
  name: Lightness
  nameWithType: LightSource.Lightness
  fullName: LightSource.Lightness
- uid: Global.LightSource.color*
  commentId: Overload:Global.LightSource.color
  isExternal: true
  href: Global.LightSource.html#LightSource_color
  name: color
  nameWithType: LightSource.color
  fullName: LightSource.color
- uid: Global.LightSource.flat*
  commentId: Overload:Global.LightSource.flat
  isExternal: true
  href: Global.LightSource.html#LightSource_flat
  name: flat
  nameWithType: LightSource.flat
  fullName: LightSource.flat
- uid: Global.LightSource.ElementName*
  commentId: Overload:Global.LightSource.ElementName
  isExternal: true
  href: Global.LightSource.html#LightSource_ElementName
  name: ElementName
  nameWithType: LightSource.ElementName
  fullName: LightSource.ElementName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.LightSource.LayerName*
  commentId: Overload:Global.LightSource.LayerName
  isExternal: true
  href: Global.LightSource.html#LightSource_LayerName
  name: LayerName
  nameWithType: LightSource.LayerName
  fullName: LightSource.LayerName
