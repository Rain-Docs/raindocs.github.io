### YamlMime:ManagedReference
items:
- uid: Global.MenuMicrophone.MenuSoundObject
  commentId: T:Global.MenuMicrophone.MenuSoundObject
  id: MenuMicrophone.MenuSoundObject
  parent: Global
  children:
  - Global.MenuMicrophone.MenuSoundObject.#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)
  - Global.MenuMicrophone.MenuSoundObject.Destroy
  - Global.MenuMicrophone.MenuSoundObject.Destroy(System.Boolean)
  - Global.MenuMicrophone.MenuSoundObject.Done
  - Global.MenuMicrophone.MenuSoundObject.Play
  - Global.MenuMicrophone.MenuSoundObject.PlayAgain
  - Global.MenuMicrophone.MenuSoundObject.SetPitch
  - Global.MenuMicrophone.MenuSoundObject.SetVolume
  - Global.MenuMicrophone.MenuSoundObject.Stop
  - Global.MenuMicrophone.MenuSoundObject.Update(System.Single,System.Single)
  - Global.MenuMicrophone.MenuSoundObject.allowPlay
  - Global.MenuMicrophone.MenuSoundObject.audioSource
  - Global.MenuMicrophone.MenuSoundObject.gameObject
  - Global.MenuMicrophone.MenuSoundObject.loop
  - Global.MenuMicrophone.MenuSoundObject.mic
  - Global.MenuMicrophone.MenuSoundObject.singleUseSound
  - Global.MenuMicrophone.MenuSoundObject.slatedForDeletion
  - Global.MenuMicrophone.MenuSoundObject.soundData
  langs:
  - csharp
  - vb
  name: MenuMicrophone.MenuSoundObject
  nameWithType: MenuMicrophone.MenuSoundObject
  fullName: MenuMicrophone.MenuSoundObject
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:MenuMicrophone.MenuSoundObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class MenuMicrophone.MenuSoundObject
    content.vb: Public Class MenuMicrophone.MenuSoundObject
  inheritance:
  - System.Object
  derivedClasses:
  - Global.MenuMicrophone.MenuSoundLoop
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.MenuMicrophone.MenuSoundObject.soundData
  commentId: F:Global.MenuMicrophone.MenuSoundObject.soundData
  id: soundData
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: soundData
  nameWithType: MenuMicrophone.MenuSoundObject.soundData
  fullName: MenuMicrophone.MenuSoundObject.soundData
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MenuMicrophone.MenuSoundObject.soundData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundLoader.SoundData soundData
    return:
      type: Global.SoundLoader.SoundData
    content.vb: Public soundData As SoundLoader.SoundData
- uid: Global.MenuMicrophone.MenuSoundObject.mic
  commentId: F:Global.MenuMicrophone.MenuSoundObject.mic
  id: mic
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: mic
  nameWithType: MenuMicrophone.MenuSoundObject.mic
  fullName: MenuMicrophone.MenuSoundObject.mic
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MenuMicrophone.MenuSoundObject.mic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected MenuMicrophone mic
    return:
      type: Global.MenuMicrophone
    content.vb: Protected mic As MenuMicrophone
- uid: Global.MenuMicrophone.MenuSoundObject.gameObject
  commentId: F:Global.MenuMicrophone.MenuSoundObject.gameObject
  id: gameObject
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: gameObject
  nameWithType: MenuMicrophone.MenuSoundObject.gameObject
  fullName: MenuMicrophone.MenuSoundObject.gameObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MenuMicrophone.MenuSoundObject.gameObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected GameObject gameObject
    return:
      type: UnityEngine.GameObject
    content.vb: Protected gameObject As GameObject
- uid: Global.MenuMicrophone.MenuSoundObject.audioSource
  commentId: F:Global.MenuMicrophone.MenuSoundObject.audioSource
  id: audioSource
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: audioSource
  nameWithType: MenuMicrophone.MenuSoundObject.audioSource
  fullName: MenuMicrophone.MenuSoundObject.audioSource
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MenuMicrophone.MenuSoundObject.audioSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AudioSource audioSource
    return:
      type: UnityEngine.AudioSource
    content.vb: Public audioSource As AudioSource
- uid: Global.MenuMicrophone.MenuSoundObject.loop
  commentId: F:Global.MenuMicrophone.MenuSoundObject.loop
  id: loop
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: loop
  nameWithType: MenuMicrophone.MenuSoundObject.loop
  fullName: MenuMicrophone.MenuSoundObject.loop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MenuMicrophone.MenuSoundObject.loop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool loop
    return:
      type: System.Boolean
    content.vb: Public [loop] As Boolean
- uid: Global.MenuMicrophone.MenuSoundObject.slatedForDeletion
  commentId: F:Global.MenuMicrophone.MenuSoundObject.slatedForDeletion
  id: slatedForDeletion
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: slatedForDeletion
  nameWithType: MenuMicrophone.MenuSoundObject.slatedForDeletion
  fullName: MenuMicrophone.MenuSoundObject.slatedForDeletion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MenuMicrophone.MenuSoundObject.slatedForDeletion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool slatedForDeletion
    return:
      type: System.Boolean
    content.vb: Public slatedForDeletion As Boolean
- uid: Global.MenuMicrophone.MenuSoundObject.allowPlay
  commentId: F:Global.MenuMicrophone.MenuSoundObject.allowPlay
  id: allowPlay
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: allowPlay
  nameWithType: MenuMicrophone.MenuSoundObject.allowPlay
  fullName: MenuMicrophone.MenuSoundObject.allowPlay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MenuMicrophone.MenuSoundObject.allowPlay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool allowPlay
    return:
      type: System.Boolean
    content.vb: Public allowPlay As Boolean
- uid: Global.MenuMicrophone.MenuSoundObject.singleUseSound
  commentId: F:Global.MenuMicrophone.MenuSoundObject.singleUseSound
  id: singleUseSound
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: singleUseSound
  nameWithType: MenuMicrophone.MenuSoundObject.singleUseSound
  fullName: MenuMicrophone.MenuSoundObject.singleUseSound
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MenuMicrophone.MenuSoundObject.singleUseSound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool singleUseSound
    return:
      type: System.Boolean
    content.vb: Public singleUseSound As Boolean
- uid: Global.MenuMicrophone.MenuSoundObject.#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:Global.MenuMicrophone.MenuSoundObject.#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)
  id: '#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)'
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: MenuSoundObject(MenuMicrophone, SoundData, bool, float, float, float, bool)
  nameWithType: MenuMicrophone.MenuSoundObject.MenuSoundObject(MenuMicrophone, SoundLoader.SoundData, bool, float, float, float, bool)
  fullName: MenuMicrophone.MenuSoundObject.MenuSoundObject(MenuMicrophone, SoundLoader.SoundData, bool, float, float, float, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>MenuMicrophone.MenuSoundObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuSoundObject(MenuMicrophone mic, SoundLoader.SoundData soundData, bool loop, float initPan, float initVol, float initPitch, bool startAtRandomTime)
    parameters:
    - id: mic
      type: Global.MenuMicrophone
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mic</parameter>
            <parameter>M:MenuMicrophone.MenuSoundObject.#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: soundData
      type: Global.SoundLoader.SoundData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundData</parameter>
            <parameter>M:MenuMicrophone.MenuSoundObject.#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: loop
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>loop</parameter>
            <parameter>M:MenuMicrophone.MenuSoundObject.#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: initPan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>initPan</parameter>
            <parameter>M:MenuMicrophone.MenuSoundObject.#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: initVol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>initVol</parameter>
            <parameter>M:MenuMicrophone.MenuSoundObject.#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: initPitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>initPitch</parameter>
            <parameter>M:MenuMicrophone.MenuSoundObject.#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: startAtRandomTime
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>startAtRandomTime</parameter>
            <parameter>M:MenuMicrophone.MenuSoundObject.#ctor(MenuMicrophone,SoundLoader.SoundData,System.Boolean,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(mic As MenuMicrophone, soundData As SoundLoader.SoundData, [loop] As Boolean, initPan As Single, initVol As Single, initPitch As Single, startAtRandomTime As Boolean)
  overload: Global.MenuMicrophone.MenuSoundObject.#ctor*
  nameWithType.vb: MenuMicrophone.MenuSoundObject.New(MenuMicrophone, SoundLoader.SoundData, Boolean, Single, Single, Single, Boolean)
  fullName.vb: MenuMicrophone.MenuSoundObject.New(MenuMicrophone, SoundLoader.SoundData, Boolean, Single, Single, Single, Boolean)
  name.vb: New(MenuMicrophone, SoundData, Boolean, Single, Single, Single, Boolean)
- uid: Global.MenuMicrophone.MenuSoundObject.Update(System.Single,System.Single)
  commentId: M:Global.MenuMicrophone.MenuSoundObject.Update(System.Single,System.Single)
  id: Update(System.Single,System.Single)
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: Update(float, float)
  nameWithType: MenuMicrophone.MenuSoundObject.Update(float, float)
  fullName: MenuMicrophone.MenuSoundObject.Update(float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MenuMicrophone.MenuSoundObject.Update(System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update(float timeStacker, float timeSpeed)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:MenuMicrophone.MenuSoundObject.Update(System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: timeSpeed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeSpeed</parameter>
            <parameter>M:MenuMicrophone.MenuSoundObject.Update(System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Update(timeStacker As Single, timeSpeed As Single)
  overload: Global.MenuMicrophone.MenuSoundObject.Update*
  nameWithType.vb: MenuMicrophone.MenuSoundObject.Update(Single, Single)
  fullName.vb: MenuMicrophone.MenuSoundObject.Update(Single, Single)
  name.vb: Update(Single, Single)
- uid: Global.MenuMicrophone.MenuSoundObject.Destroy(System.Boolean)
  commentId: M:Global.MenuMicrophone.MenuSoundObject.Destroy(System.Boolean)
  id: Destroy(System.Boolean)
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: Destroy(bool)
  nameWithType: MenuMicrophone.MenuSoundObject.Destroy(bool)
  fullName: MenuMicrophone.MenuSoundObject.Destroy(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MenuMicrophone.MenuSoundObject.Destroy(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Destroy(bool push = true)
    parameters:
    - id: push
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>push</parameter>
            <parameter>M:MenuMicrophone.MenuSoundObject.Destroy(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Destroy(push As Boolean = True)
  overload: Global.MenuMicrophone.MenuSoundObject.Destroy*
  nameWithType.vb: MenuMicrophone.MenuSoundObject.Destroy(Boolean)
  fullName.vb: MenuMicrophone.MenuSoundObject.Destroy(Boolean)
  name.vb: Destroy(Boolean)
- uid: Global.MenuMicrophone.MenuSoundObject.Destroy
  commentId: M:Global.MenuMicrophone.MenuSoundObject.Destroy
  id: Destroy
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: MenuMicrophone.MenuSoundObject.Destroy()
  fullName: MenuMicrophone.MenuSoundObject.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MenuMicrophone.MenuSoundObject.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Destroy()
    content.vb: Public Sub Destroy()
  overload: Global.MenuMicrophone.MenuSoundObject.Destroy*
- uid: Global.MenuMicrophone.MenuSoundObject.Play
  commentId: M:Global.MenuMicrophone.MenuSoundObject.Play
  id: Play
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: Play()
  nameWithType: MenuMicrophone.MenuSoundObject.Play()
  fullName: MenuMicrophone.MenuSoundObject.Play()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MenuMicrophone.MenuSoundObject.Play</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Play()
    content.vb: Public Sub Play()
  overload: Global.MenuMicrophone.MenuSoundObject.Play*
- uid: Global.MenuMicrophone.MenuSoundObject.Stop
  commentId: M:Global.MenuMicrophone.MenuSoundObject.Stop
  id: Stop
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: MenuMicrophone.MenuSoundObject.Stop()
  fullName: MenuMicrophone.MenuSoundObject.Stop()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MenuMicrophone.MenuSoundObject.Stop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Stop()
    content.vb: Public Sub [Stop]()
  overload: Global.MenuMicrophone.MenuSoundObject.Stop*
- uid: Global.MenuMicrophone.MenuSoundObject.Done
  commentId: P:Global.MenuMicrophone.MenuSoundObject.Done
  id: Done
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: Done
  nameWithType: MenuMicrophone.MenuSoundObject.Done
  fullName: MenuMicrophone.MenuSoundObject.Done
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MenuMicrophone.MenuSoundObject.Done</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool Done { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property Done As Boolean
  overload: Global.MenuMicrophone.MenuSoundObject.Done*
- uid: Global.MenuMicrophone.MenuSoundObject.PlayAgain
  commentId: P:Global.MenuMicrophone.MenuSoundObject.PlayAgain
  id: PlayAgain
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: PlayAgain
  nameWithType: MenuMicrophone.MenuSoundObject.PlayAgain
  fullName: MenuMicrophone.MenuSoundObject.PlayAgain
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MenuMicrophone.MenuSoundObject.PlayAgain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool PlayAgain { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property PlayAgain As Boolean
  overload: Global.MenuMicrophone.MenuSoundObject.PlayAgain*
- uid: Global.MenuMicrophone.MenuSoundObject.SetVolume
  commentId: P:Global.MenuMicrophone.MenuSoundObject.SetVolume
  id: SetVolume
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: SetVolume
  nameWithType: MenuMicrophone.MenuSoundObject.SetVolume
  fullName: MenuMicrophone.MenuSoundObject.SetVolume
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MenuMicrophone.MenuSoundObject.SetVolume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected float SetVolume { set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Protected WriteOnly Property SetVolume As Single
  overload: Global.MenuMicrophone.MenuSoundObject.SetVolume*
- uid: Global.MenuMicrophone.MenuSoundObject.SetPitch
  commentId: P:Global.MenuMicrophone.MenuSoundObject.SetPitch
  id: SetPitch
  parent: Global.MenuMicrophone.MenuSoundObject
  langs:
  - csharp
  - vb
  name: SetPitch
  nameWithType: MenuMicrophone.MenuSoundObject.SetPitch
  fullName: MenuMicrophone.MenuSoundObject.SetPitch
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MenuMicrophone.MenuSoundObject.SetPitch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected float SetPitch { set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Protected WriteOnly Property SetPitch As Single
  overload: Global.MenuMicrophone.MenuSoundObject.SetPitch*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.SoundLoader.SoundData
  commentId: T:Global.SoundLoader.SoundData
  isExternal: true
  href: SoundLoader.html
  name: SoundLoader.SoundData
  nameWithType: SoundLoader.SoundData
  fullName: SoundLoader.SoundData
  spec.csharp:
  - uid: Global.SoundLoader
    name: SoundLoader
    isExternal: true
    href: SoundLoader.html
  - name: .
  - uid: Global.SoundLoader.SoundData
    name: SoundData
    isExternal: true
    href: SoundLoader.SoundData.html
  spec.vb:
  - uid: Global.SoundLoader
    name: SoundLoader
    isExternal: true
    href: SoundLoader.html
  - name: .
  - uid: Global.SoundLoader.SoundData
    name: SoundData
    isExternal: true
    href: SoundLoader.SoundData.html
- uid: Global.MenuMicrophone
  commentId: T:Global.MenuMicrophone
  isExternal: true
  href: MenuMicrophone.html
  name: MenuMicrophone
  nameWithType: MenuMicrophone
  fullName: MenuMicrophone
- uid: UnityEngine.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine.AudioSource
  isExternal: true
  name: AudioSource
  nameWithType: AudioSource
  fullName: UnityEngine.AudioSource
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.MenuMicrophone.MenuSoundObject.#ctor*
  commentId: Overload:Global.MenuMicrophone.MenuSoundObject.#ctor
  isExternal: true
  href: Global.MenuMicrophone.MenuSoundObject.html#MenuMicrophone_MenuSoundObject__ctor_MenuMicrophone_SoundLoader_SoundData_System_Boolean_System_Single_System_Single_System_Single_System_Boolean_
  name: MenuSoundObject
  nameWithType: MenuMicrophone.MenuSoundObject.MenuSoundObject
  fullName: MenuMicrophone.MenuSoundObject.MenuSoundObject
  nameWithType.vb: MenuMicrophone.MenuSoundObject.New
  fullName.vb: MenuMicrophone.MenuSoundObject.New
  name.vb: New
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.MenuMicrophone.MenuSoundObject.Update*
  commentId: Overload:Global.MenuMicrophone.MenuSoundObject.Update
  isExternal: true
  href: Global.MenuMicrophone.MenuSoundObject.html#MenuMicrophone_MenuSoundObject_Update_System_Single_System_Single_
  name: Update
  nameWithType: MenuMicrophone.MenuSoundObject.Update
  fullName: MenuMicrophone.MenuSoundObject.Update
- uid: Global.MenuMicrophone.MenuSoundObject.Destroy*
  commentId: Overload:Global.MenuMicrophone.MenuSoundObject.Destroy
  isExternal: true
  href: Global.MenuMicrophone.MenuSoundObject.html#MenuMicrophone_MenuSoundObject_Destroy_System_Boolean_
  name: Destroy
  nameWithType: MenuMicrophone.MenuSoundObject.Destroy
  fullName: MenuMicrophone.MenuSoundObject.Destroy
- uid: Global.MenuMicrophone.MenuSoundObject.Play*
  commentId: Overload:Global.MenuMicrophone.MenuSoundObject.Play
  isExternal: true
  href: Global.MenuMicrophone.MenuSoundObject.html#MenuMicrophone_MenuSoundObject_Play
  name: Play
  nameWithType: MenuMicrophone.MenuSoundObject.Play
  fullName: MenuMicrophone.MenuSoundObject.Play
- uid: Global.MenuMicrophone.MenuSoundObject.Stop*
  commentId: Overload:Global.MenuMicrophone.MenuSoundObject.Stop
  isExternal: true
  href: Global.MenuMicrophone.MenuSoundObject.html#MenuMicrophone_MenuSoundObject_Stop
  name: Stop
  nameWithType: MenuMicrophone.MenuSoundObject.Stop
  fullName: MenuMicrophone.MenuSoundObject.Stop
- uid: Global.MenuMicrophone.MenuSoundObject.Done*
  commentId: Overload:Global.MenuMicrophone.MenuSoundObject.Done
  isExternal: true
  href: Global.MenuMicrophone.MenuSoundObject.html#MenuMicrophone_MenuSoundObject_Done
  name: Done
  nameWithType: MenuMicrophone.MenuSoundObject.Done
  fullName: MenuMicrophone.MenuSoundObject.Done
- uid: Global.MenuMicrophone.MenuSoundObject.PlayAgain*
  commentId: Overload:Global.MenuMicrophone.MenuSoundObject.PlayAgain
  isExternal: true
  href: Global.MenuMicrophone.MenuSoundObject.html#MenuMicrophone_MenuSoundObject_PlayAgain
  name: PlayAgain
  nameWithType: MenuMicrophone.MenuSoundObject.PlayAgain
  fullName: MenuMicrophone.MenuSoundObject.PlayAgain
- uid: Global.MenuMicrophone.MenuSoundObject.SetVolume*
  commentId: Overload:Global.MenuMicrophone.MenuSoundObject.SetVolume
  isExternal: true
  href: Global.MenuMicrophone.MenuSoundObject.html#MenuMicrophone_MenuSoundObject_SetVolume
  name: SetVolume
  nameWithType: MenuMicrophone.MenuSoundObject.SetVolume
  fullName: MenuMicrophone.MenuSoundObject.SetVolume
- uid: Global.MenuMicrophone.MenuSoundObject.SetPitch*
  commentId: Overload:Global.MenuMicrophone.MenuSoundObject.SetPitch
  isExternal: true
  href: Global.MenuMicrophone.MenuSoundObject.html#MenuMicrophone_MenuSoundObject_SetPitch
  name: SetPitch
  nameWithType: MenuMicrophone.MenuSoundObject.SetPitch
  fullName: MenuMicrophone.MenuSoundObject.SetPitch
