### YamlMime:ManagedReference
items:
- uid: Global.IconSymbol.IconSymbolData
  commentId: T:Global.IconSymbol.IconSymbolData
  id: IconSymbol.IconSymbolData
  parent: Global
  children:
  - Global.IconSymbol.IconSymbolData.#ctor(CreatureTemplate.Type,AbstractPhysicalObject.AbstractObjectType,System.Int32)
  - Global.IconSymbol.IconSymbolData.Equals(IconSymbol.IconSymbolData)
  - Global.IconSymbol.IconSymbolData.Equals(System.Object)
  - Global.IconSymbol.IconSymbolData.GetHashCode
  - Global.IconSymbol.IconSymbolData.IconSymbolDataFromString(System.String)
  - Global.IconSymbol.IconSymbolData.ToString
  - Global.IconSymbol.IconSymbolData.critType
  - Global.IconSymbol.IconSymbolData.intData
  - Global.IconSymbol.IconSymbolData.itemType
  - Global.IconSymbol.IconSymbolData.op_Equality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)
  - Global.IconSymbol.IconSymbolData.op_Inequality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)
  langs:
  - csharp
  - vb
  name: IconSymbol.IconSymbolData
  nameWithType: IconSymbol.IconSymbolData
  fullName: IconSymbol.IconSymbolData
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:IconSymbol.IconSymbolData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct IconSymbol.IconSymbolData
    content.vb: Public Structure IconSymbol.IconSymbolData
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.IconSymbol.IconSymbolData.critType
  commentId: F:Global.IconSymbol.IconSymbolData.critType
  id: critType
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: critType
  nameWithType: IconSymbol.IconSymbolData.critType
  fullName: IconSymbol.IconSymbolData.critType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.IconSymbolData.critType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate.Type critType
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public critType As CreatureTemplate.Type
- uid: Global.IconSymbol.IconSymbolData.intData
  commentId: F:Global.IconSymbol.IconSymbolData.intData
  id: intData
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: intData
  nameWithType: IconSymbol.IconSymbolData.intData
  fullName: IconSymbol.IconSymbolData.intData
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.IconSymbolData.intData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int intData
    return:
      type: System.Int32
    content.vb: Public intData As Integer
- uid: Global.IconSymbol.IconSymbolData.itemType
  commentId: F:Global.IconSymbol.IconSymbolData.itemType
  id: itemType
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: itemType
  nameWithType: IconSymbol.IconSymbolData.itemType
  fullName: IconSymbol.IconSymbolData.itemType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.IconSymbolData.itemType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractPhysicalObject.AbstractObjectType itemType
    return:
      type: Global.AbstractPhysicalObject.AbstractObjectType
    content.vb: Public itemType As AbstractPhysicalObject.AbstractObjectType
- uid: Global.IconSymbol.IconSymbolData.#ctor(CreatureTemplate.Type,AbstractPhysicalObject.AbstractObjectType,System.Int32)
  commentId: M:Global.IconSymbol.IconSymbolData.#ctor(CreatureTemplate.Type,AbstractPhysicalObject.AbstractObjectType,System.Int32)
  id: '#ctor(CreatureTemplate.Type,AbstractPhysicalObject.AbstractObjectType,System.Int32)'
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: IconSymbolData(Type, AbstractObjectType, int)
  nameWithType: IconSymbol.IconSymbolData.IconSymbolData(CreatureTemplate.Type, AbstractPhysicalObject.AbstractObjectType, int)
  fullName: IconSymbol.IconSymbolData.IconSymbolData(CreatureTemplate.Type, AbstractPhysicalObject.AbstractObjectType, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>IconSymbol.IconSymbolData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IconSymbolData(CreatureTemplate.Type critType, AbstractPhysicalObject.AbstractObjectType itemType, int intData)
    parameters:
    - id: critType
      type: Global.CreatureTemplate.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>critType</parameter>
            <parameter>M:IconSymbol.IconSymbolData.#ctor(CreatureTemplate.Type,AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
          </include>
        </markup>
    - id: itemType
      type: Global.AbstractPhysicalObject.AbstractObjectType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>itemType</parameter>
            <parameter>M:IconSymbol.IconSymbolData.#ctor(CreatureTemplate.Type,AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
          </include>
        </markup>
    - id: intData
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intData</parameter>
            <parameter>M:IconSymbol.IconSymbolData.#ctor(CreatureTemplate.Type,AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(critType As CreatureTemplate.Type, itemType As AbstractPhysicalObject.AbstractObjectType, intData As Integer)
  overload: Global.IconSymbol.IconSymbolData.#ctor*
  nameWithType.vb: IconSymbol.IconSymbolData.New(CreatureTemplate.Type, AbstractPhysicalObject.AbstractObjectType, Integer)
  fullName.vb: IconSymbol.IconSymbolData.New(CreatureTemplate.Type, AbstractPhysicalObject.AbstractObjectType, Integer)
  name.vb: New(Type, AbstractObjectType, Integer)
- uid: Global.IconSymbol.IconSymbolData.ToString
  commentId: M:Global.IconSymbol.IconSymbolData.ToString
  id: ToString
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IconSymbol.IconSymbolData.ToString()
  fullName: IconSymbol.IconSymbolData.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.IconSymbolData.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IconSymbol.IconSymbolData.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Global.IconSymbol.IconSymbolData.ToString*
- uid: Global.IconSymbol.IconSymbolData.IconSymbolDataFromString(System.String)
  commentId: M:Global.IconSymbol.IconSymbolData.IconSymbolDataFromString(System.String)
  id: IconSymbolDataFromString(System.String)
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: IconSymbolDataFromString(string)
  nameWithType: IconSymbol.IconSymbolData.IconSymbolDataFromString(string)
  fullName: IconSymbol.IconSymbolData.IconSymbolDataFromString(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.IconSymbolData.IconSymbolDataFromString(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IconSymbol.IconSymbolData IconSymbolDataFromString(string s)
    parameters:
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:IconSymbol.IconSymbolData.IconSymbolDataFromString(System.String)</parameter>
          </include>
        </markup>
    return:
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IconSymbol.IconSymbolData.IconSymbolDataFromString(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IconSymbolDataFromString(s As String) As IconSymbol.IconSymbolData
  overload: Global.IconSymbol.IconSymbolData.IconSymbolDataFromString*
  nameWithType.vb: IconSymbol.IconSymbolData.IconSymbolDataFromString(String)
  fullName.vb: IconSymbol.IconSymbolData.IconSymbolDataFromString(String)
  name.vb: IconSymbolDataFromString(String)
- uid: Global.IconSymbol.IconSymbolData.Equals(System.Object)
  commentId: M:Global.IconSymbol.IconSymbolData.Equals(System.Object)
  id: Equals(System.Object)
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: IconSymbol.IconSymbolData.Equals(object)
  fullName: IconSymbol.IconSymbolData.Equals(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.IconSymbolData.Equals(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:IconSymbol.IconSymbolData.Equals(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IconSymbol.IconSymbolData.Equals(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Global.IconSymbol.IconSymbolData.Equals*
  nameWithType.vb: IconSymbol.IconSymbolData.Equals(Object)
  fullName.vb: IconSymbol.IconSymbolData.Equals(Object)
  name.vb: Equals(Object)
- uid: Global.IconSymbol.IconSymbolData.Equals(IconSymbol.IconSymbolData)
  commentId: M:Global.IconSymbol.IconSymbolData.Equals(IconSymbol.IconSymbolData)
  id: Equals(IconSymbol.IconSymbolData)
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: Equals(IconSymbolData)
  nameWithType: IconSymbol.IconSymbolData.Equals(IconSymbol.IconSymbolData)
  fullName: IconSymbol.IconSymbolData.Equals(IconSymbol.IconSymbolData)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.IconSymbolData.Equals(IconSymbol.IconSymbolData)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Equals(IconSymbol.IconSymbolData data)
    parameters:
    - id: data
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:IconSymbol.IconSymbolData.Equals(IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IconSymbol.IconSymbolData.Equals(IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    content.vb: Public Function Equals(data As IconSymbol.IconSymbolData) As Boolean
  overload: Global.IconSymbol.IconSymbolData.Equals*
- uid: Global.IconSymbol.IconSymbolData.GetHashCode
  commentId: M:Global.IconSymbol.IconSymbolData.GetHashCode
  id: GetHashCode
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: IconSymbol.IconSymbolData.GetHashCode()
  fullName: IconSymbol.IconSymbolData.GetHashCode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.IconSymbolData.GetHashCode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IconSymbol.IconSymbolData.GetHashCode</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Global.IconSymbol.IconSymbolData.GetHashCode*
- uid: Global.IconSymbol.IconSymbolData.op_Equality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)
  commentId: M:Global.IconSymbol.IconSymbolData.op_Equality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)
  id: op_Equality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: operator ==(IconSymbolData, IconSymbolData)
  nameWithType: IconSymbol.IconSymbolData.operator ==(IconSymbol.IconSymbolData, IconSymbol.IconSymbolData)
  fullName: IconSymbol.IconSymbolData.operator ==(IconSymbol.IconSymbolData, IconSymbol.IconSymbolData)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.IconSymbolData.op_Equality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator ==(IconSymbol.IconSymbolData a, IconSymbol.IconSymbolData b)
    parameters:
    - id: a
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:IconSymbol.IconSymbolData.op_Equality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    - id: b
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:IconSymbol.IconSymbolData.op_Equality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IconSymbol.IconSymbolData.op_Equality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator =(a As IconSymbol.IconSymbolData, b As IconSymbol.IconSymbolData) As Boolean
  overload: Global.IconSymbol.IconSymbolData.op_Equality*
  nameWithType.vb: IconSymbol.IconSymbolData.=(IconSymbol.IconSymbolData, IconSymbol.IconSymbolData)
  fullName.vb: IconSymbol.IconSymbolData.=(IconSymbol.IconSymbolData, IconSymbol.IconSymbolData)
  name.vb: =(IconSymbolData, IconSymbolData)
- uid: Global.IconSymbol.IconSymbolData.op_Inequality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)
  commentId: M:Global.IconSymbol.IconSymbolData.op_Inequality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)
  id: op_Inequality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)
  parent: Global.IconSymbol.IconSymbolData
  langs:
  - csharp
  - vb
  name: operator !=(IconSymbolData, IconSymbolData)
  nameWithType: IconSymbol.IconSymbolData.operator !=(IconSymbol.IconSymbolData, IconSymbol.IconSymbolData)
  fullName: IconSymbol.IconSymbolData.operator !=(IconSymbol.IconSymbolData, IconSymbol.IconSymbolData)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.IconSymbolData.op_Inequality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator !=(IconSymbol.IconSymbolData a, IconSymbol.IconSymbolData b)
    parameters:
    - id: a
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:IconSymbol.IconSymbolData.op_Inequality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    - id: b
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:IconSymbol.IconSymbolData.op_Inequality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IconSymbol.IconSymbolData.op_Inequality(IconSymbol.IconSymbolData,IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator <>(a As IconSymbol.IconSymbolData, b As IconSymbol.IconSymbolData) As Boolean
  overload: Global.IconSymbol.IconSymbolData.op_Inequality*
  nameWithType.vb: IconSymbol.IconSymbolData.<>(IconSymbol.IconSymbolData, IconSymbol.IconSymbolData)
  fullName.vb: IconSymbol.IconSymbolData.<>(IconSymbol.IconSymbolData, IconSymbol.IconSymbolData)
  name.vb: <>(IconSymbolData, IconSymbolData)
references:
- uid: Global
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.CreatureTemplate.Type
  commentId: T:Global.CreatureTemplate.Type
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.Type
  nameWithType: CreatureTemplate.Type
  fullName: CreatureTemplate.Type
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.AbstractPhysicalObject.AbstractObjectType
  commentId: T:Global.AbstractPhysicalObject.AbstractObjectType
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject.AbstractObjectType
  nameWithType: AbstractPhysicalObject.AbstractObjectType
  fullName: AbstractPhysicalObject.AbstractObjectType
  spec.csharp:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
  spec.vb:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
- uid: Global.IconSymbol.IconSymbolData.#ctor*
  commentId: Overload:Global.IconSymbol.IconSymbolData.#ctor
  isExternal: true
  href: Global.IconSymbol.IconSymbolData.html#IconSymbol_IconSymbolData__ctor_CreatureTemplate_Type_AbstractPhysicalObject_AbstractObjectType_System_Int32_
  name: IconSymbolData
  nameWithType: IconSymbol.IconSymbolData.IconSymbolData
  fullName: IconSymbol.IconSymbolData.IconSymbolData
  nameWithType.vb: IconSymbol.IconSymbolData.New
  fullName.vb: IconSymbol.IconSymbolData.New
  name.vb: New
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Global.IconSymbol.IconSymbolData.ToString*
  commentId: Overload:Global.IconSymbol.IconSymbolData.ToString
  isExternal: true
  href: Global.IconSymbol.IconSymbolData.html#IconSymbol_IconSymbolData_ToString
  name: ToString
  nameWithType: IconSymbol.IconSymbolData.ToString
  fullName: IconSymbol.IconSymbolData.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: Global.IconSymbol.IconSymbolData.IconSymbolDataFromString*
  commentId: Overload:Global.IconSymbol.IconSymbolData.IconSymbolDataFromString
  isExternal: true
  href: Global.IconSymbol.IconSymbolData.html#IconSymbol_IconSymbolData_IconSymbolDataFromString_System_String_
  name: IconSymbolDataFromString
  nameWithType: IconSymbol.IconSymbolData.IconSymbolDataFromString
  fullName: IconSymbol.IconSymbolData.IconSymbolDataFromString
- uid: Global.IconSymbol.IconSymbolData
  commentId: T:Global.IconSymbol.IconSymbolData
  isExternal: true
  href: IconSymbol.html
  name: IconSymbol.IconSymbolData
  nameWithType: IconSymbol.IconSymbolData
  fullName: IconSymbol.IconSymbolData
  spec.csharp:
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  spec.vb:
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.IconSymbol.IconSymbolData.Equals*
  commentId: Overload:Global.IconSymbol.IconSymbolData.Equals
  isExternal: true
  href: Global.IconSymbol.IconSymbolData.html#IconSymbol_IconSymbolData_Equals_System_Object_
  name: Equals
  nameWithType: IconSymbol.IconSymbolData.Equals
  fullName: IconSymbol.IconSymbolData.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Global.IconSymbol.IconSymbolData.GetHashCode*
  commentId: Overload:Global.IconSymbol.IconSymbolData.GetHashCode
  isExternal: true
  href: Global.IconSymbol.IconSymbolData.html#IconSymbol_IconSymbolData_GetHashCode
  name: GetHashCode
  nameWithType: IconSymbol.IconSymbolData.GetHashCode
  fullName: IconSymbol.IconSymbolData.GetHashCode
- uid: Global.IconSymbol.IconSymbolData.op_Equality*
  commentId: Overload:Global.IconSymbol.IconSymbolData.op_Equality
  isExternal: true
  href: Global.IconSymbol.IconSymbolData.html#IconSymbol_IconSymbolData_op_Equality_IconSymbol_IconSymbolData_IconSymbol_IconSymbolData_
  name: operator ==
  nameWithType: IconSymbol.IconSymbolData.operator ==
  fullName: IconSymbol.IconSymbolData.operator ==
  nameWithType.vb: IconSymbol.IconSymbolData.=
  fullName.vb: IconSymbol.IconSymbolData.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.IconSymbol.IconSymbolData.op_Equality*
    name: ==
    isExternal: true
    href: Global.IconSymbol.IconSymbolData.html#IconSymbol_IconSymbolData_op_Equality_IconSymbol_IconSymbolData_IconSymbol_IconSymbolData_
- uid: Global.IconSymbol.IconSymbolData.op_Inequality*
  commentId: Overload:Global.IconSymbol.IconSymbolData.op_Inequality
  isExternal: true
  href: Global.IconSymbol.IconSymbolData.html#IconSymbol_IconSymbolData_op_Inequality_IconSymbol_IconSymbolData_IconSymbol_IconSymbolData_
  name: operator !=
  nameWithType: IconSymbol.IconSymbolData.operator !=
  fullName: IconSymbol.IconSymbolData.operator !=
  nameWithType.vb: IconSymbol.IconSymbolData.<>
  fullName.vb: IconSymbol.IconSymbolData.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.IconSymbol.IconSymbolData.op_Inequality*
    name: '!='
    isExternal: true
    href: Global.IconSymbol.IconSymbolData.html#IconSymbol_IconSymbolData_op_Inequality_IconSymbol_IconSymbolData_IconSymbol_IconSymbolData_
