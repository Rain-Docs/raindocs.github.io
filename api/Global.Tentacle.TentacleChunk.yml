### YamlMime:ManagedReference
items:
- uid: Global.Tentacle.TentacleChunk
  commentId: T:Global.Tentacle.TentacleChunk
  id: Tentacle.TentacleChunk
  parent: Global
  children:
  - Global.Tentacle.TentacleChunk.#ctor(Tentacle,System.Int32,System.Single,System.Single)
  - Global.Tentacle.TentacleChunk.CreateDebugSprites
  - Global.Tentacle.TentacleChunk.PhaseToSegment
  - Global.Tentacle.TentacleChunk.Reset
  - Global.Tentacle.TentacleChunk.RopeActive
  - Global.Tentacle.TentacleChunk.StuckPos
  - Global.Tentacle.TentacleChunk.StuckRect
  - Global.Tentacle.TentacleChunk.Update
  - Global.Tentacle.TentacleChunk.afterPhaseStuckPos
  - Global.Tentacle.TentacleChunk.collideWithTerrain
  - Global.Tentacle.TentacleChunk.contactPoint
  - Global.Tentacle.TentacleChunk.currentSegment
  - Global.Tentacle.TentacleChunk.currentSegmentTrail
  - Global.Tentacle.TentacleChunk.lastContactPoint
  - Global.Tentacle.TentacleChunk.lastPos
  - Global.Tentacle.TentacleChunk.lockInPosition
  - Global.Tentacle.TentacleChunk.phase
  - Global.Tentacle.TentacleChunk.phaseAttempts
  - Global.Tentacle.TentacleChunk.phaseFrom
  - Global.Tentacle.TentacleChunk.phasesToSameLocation
  - Global.Tentacle.TentacleChunk.pos
  - Global.Tentacle.TentacleChunk.rad
  - Global.Tentacle.TentacleChunk.rope
  - Global.Tentacle.TentacleChunk.stretchedFac
  - Global.Tentacle.TentacleChunk.stretchedRad
  - Global.Tentacle.TentacleChunk.tPos
  - Global.Tentacle.TentacleChunk.tentacle
  - Global.Tentacle.TentacleChunk.tentacleIndex
  - Global.Tentacle.TentacleChunk.tp
  - Global.Tentacle.TentacleChunk.vel
  langs:
  - csharp
  - vb
  name: Tentacle.TentacleChunk
  nameWithType: Tentacle.TentacleChunk
  fullName: Tentacle.TentacleChunk
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Tentacle.TentacleChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Tentacle.TentacleChunk
    content.vb: Public Class Tentacle.TentacleChunk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Tentacle.TentacleChunk.pos
  commentId: F:Global.Tentacle.TentacleChunk.pos
  id: pos
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: Tentacle.TentacleChunk.pos
  fullName: Tentacle.TentacleChunk.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Global.Tentacle.TentacleChunk.vel
  commentId: F:Global.Tentacle.TentacleChunk.vel
  id: vel
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: vel
  nameWithType: Tentacle.TentacleChunk.vel
  fullName: Tentacle.TentacleChunk.vel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.vel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 vel
    return:
      type: UnityEngine.Vector2
    content.vb: Public vel As Vector2
- uid: Global.Tentacle.TentacleChunk.rad
  commentId: F:Global.Tentacle.TentacleChunk.rad
  id: rad
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: Tentacle.TentacleChunk.rad
  fullName: Tentacle.TentacleChunk.rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad
    return:
      type: System.Single
    content.vb: Public rad As Single
- uid: Global.Tentacle.TentacleChunk.lastPos
  commentId: F:Global.Tentacle.TentacleChunk.lastPos
  id: lastPos
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: Tentacle.TentacleChunk.lastPos
  fullName: Tentacle.TentacleChunk.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: Global.Tentacle.TentacleChunk.lastContactPoint
  commentId: F:Global.Tentacle.TentacleChunk.lastContactPoint
  id: lastContactPoint
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: lastContactPoint
  nameWithType: Tentacle.TentacleChunk.lastContactPoint
  fullName: Tentacle.TentacleChunk.lastContactPoint
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.lastContactPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 lastContactPoint
    return:
      type: RWCustom.IntVector2
    content.vb: Public lastContactPoint As IntVector2
- uid: Global.Tentacle.TentacleChunk.contactPoint
  commentId: F:Global.Tentacle.TentacleChunk.contactPoint
  id: contactPoint
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: contactPoint
  nameWithType: Tentacle.TentacleChunk.contactPoint
  fullName: Tentacle.TentacleChunk.contactPoint
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.contactPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 contactPoint
    return:
      type: RWCustom.IntVector2
    content.vb: Public contactPoint As IntVector2
- uid: Global.Tentacle.TentacleChunk.tentacle
  commentId: F:Global.Tentacle.TentacleChunk.tentacle
  id: tentacle
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: tentacle
  nameWithType: Tentacle.TentacleChunk.tentacle
  fullName: Tentacle.TentacleChunk.tentacle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.tentacle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tentacle tentacle
    return:
      type: Global.Tentacle
    content.vb: Public tentacle As Tentacle
- uid: Global.Tentacle.TentacleChunk.tPos
  commentId: F:Global.Tentacle.TentacleChunk.tPos
  id: tPos
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: tPos
  nameWithType: Tentacle.TentacleChunk.tPos
  fullName: Tentacle.TentacleChunk.tPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.tPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tPos
    return:
      type: System.Single
    content.vb: Public tPos As Single
- uid: Global.Tentacle.TentacleChunk.tentacleIndex
  commentId: F:Global.Tentacle.TentacleChunk.tentacleIndex
  id: tentacleIndex
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: tentacleIndex
  nameWithType: Tentacle.TentacleChunk.tentacleIndex
  fullName: Tentacle.TentacleChunk.tentacleIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.tentacleIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int tentacleIndex
    return:
      type: System.Int32
    content.vb: Public tentacleIndex As Integer
- uid: Global.Tentacle.TentacleChunk.lockInPosition
  commentId: F:Global.Tentacle.TentacleChunk.lockInPosition
  id: lockInPosition
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: lockInPosition
  nameWithType: Tentacle.TentacleChunk.lockInPosition
  fullName: Tentacle.TentacleChunk.lockInPosition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.lockInPosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lockInPosition
    return:
      type: System.Single
    content.vb: Public lockInPosition As Single
- uid: Global.Tentacle.TentacleChunk.phaseFrom
  commentId: F:Global.Tentacle.TentacleChunk.phaseFrom
  id: phaseFrom
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: phaseFrom
  nameWithType: Tentacle.TentacleChunk.phaseFrom
  fullName: Tentacle.TentacleChunk.phaseFrom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.phaseFrom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 phaseFrom
    return:
      type: UnityEngine.Vector2
    content.vb: Public phaseFrom As Vector2
- uid: Global.Tentacle.TentacleChunk.phasesToSameLocation
  commentId: F:Global.Tentacle.TentacleChunk.phasesToSameLocation
  id: phasesToSameLocation
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: phasesToSameLocation
  nameWithType: Tentacle.TentacleChunk.phasesToSameLocation
  fullName: Tentacle.TentacleChunk.phasesToSameLocation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.phasesToSameLocation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int phasesToSameLocation
    return:
      type: System.Int32
    content.vb: Public phasesToSameLocation As Integer
- uid: Global.Tentacle.TentacleChunk.afterPhaseStuckPos
  commentId: F:Global.Tentacle.TentacleChunk.afterPhaseStuckPos
  id: afterPhaseStuckPos
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: afterPhaseStuckPos
  nameWithType: Tentacle.TentacleChunk.afterPhaseStuckPos
  fullName: Tentacle.TentacleChunk.afterPhaseStuckPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.afterPhaseStuckPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 afterPhaseStuckPos
    return:
      type: RWCustom.IntVector2
    content.vb: Public afterPhaseStuckPos As IntVector2
- uid: Global.Tentacle.TentacleChunk.phase
  commentId: F:Global.Tentacle.TentacleChunk.phase
  id: phase
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: phase
  nameWithType: Tentacle.TentacleChunk.phase
  fullName: Tentacle.TentacleChunk.phase
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.phase</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float phase
    return:
      type: System.Single
    content.vb: Public phase As Single
- uid: Global.Tentacle.TentacleChunk.currentSegmentTrail
  commentId: F:Global.Tentacle.TentacleChunk.currentSegmentTrail
  id: currentSegmentTrail
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: currentSegmentTrail
  nameWithType: Tentacle.TentacleChunk.currentSegmentTrail
  fullName: Tentacle.TentacleChunk.currentSegmentTrail
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.currentSegmentTrail</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IntVector2> currentSegmentTrail
    return:
      type: System.Collections.Generic.List{RWCustom.IntVector2}
    content.vb: Public currentSegmentTrail As List(Of IntVector2)
- uid: Global.Tentacle.TentacleChunk.collideWithTerrain
  commentId: F:Global.Tentacle.TentacleChunk.collideWithTerrain
  id: collideWithTerrain
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: collideWithTerrain
  nameWithType: Tentacle.TentacleChunk.collideWithTerrain
  fullName: Tentacle.TentacleChunk.collideWithTerrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.collideWithTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool collideWithTerrain
    return:
      type: System.Boolean
    content.vb: Public collideWithTerrain As Boolean
- uid: Global.Tentacle.TentacleChunk.phaseAttempts
  commentId: F:Global.Tentacle.TentacleChunk.phaseAttempts
  id: phaseAttempts
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: phaseAttempts
  nameWithType: Tentacle.TentacleChunk.phaseAttempts
  fullName: Tentacle.TentacleChunk.phaseAttempts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.phaseAttempts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int phaseAttempts
    return:
      type: System.Int32
    content.vb: Public phaseAttempts As Integer
- uid: Global.Tentacle.TentacleChunk.stretchedFac
  commentId: F:Global.Tentacle.TentacleChunk.stretchedFac
  id: stretchedFac
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: stretchedFac
  nameWithType: Tentacle.TentacleChunk.stretchedFac
  fullName: Tentacle.TentacleChunk.stretchedFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.stretchedFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float stretchedFac
    return:
      type: System.Single
    content.vb: Public stretchedFac As Single
- uid: Global.Tentacle.TentacleChunk.rope
  commentId: F:Global.Tentacle.TentacleChunk.rope
  id: rope
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: rope
  nameWithType: Tentacle.TentacleChunk.rope
  fullName: Tentacle.TentacleChunk.rope
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tentacle.TentacleChunk.rope</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Rope rope
    return:
      type: Global.Rope
    content.vb: Public rope As Rope
- uid: Global.Tentacle.TentacleChunk.#ctor(Tentacle,System.Int32,System.Single,System.Single)
  commentId: M:Global.Tentacle.TentacleChunk.#ctor(Tentacle,System.Int32,System.Single,System.Single)
  id: '#ctor(Tentacle,System.Int32,System.Single,System.Single)'
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: TentacleChunk(Tentacle, int, float, float)
  nameWithType: Tentacle.TentacleChunk.TentacleChunk(Tentacle, int, float, float)
  fullName: Tentacle.TentacleChunk.TentacleChunk(Tentacle, int, float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Tentacle.TentacleChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TentacleChunk(Tentacle tentacle, int tentacleIndex, float tPos, float rad)
    parameters:
    - id: tentacle
      type: Global.Tentacle
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tentacle</parameter>
            <parameter>M:Tentacle.TentacleChunk.#ctor(Tentacle,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: tentacleIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tentacleIndex</parameter>
            <parameter>M:Tentacle.TentacleChunk.#ctor(Tentacle,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: tPos
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tPos</parameter>
            <parameter>M:Tentacle.TentacleChunk.#ctor(Tentacle,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:Tentacle.TentacleChunk.#ctor(Tentacle,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(tentacle As Tentacle, tentacleIndex As Integer, tPos As Single, rad As Single)
  overload: Global.Tentacle.TentacleChunk.#ctor*
  nameWithType.vb: Tentacle.TentacleChunk.New(Tentacle, Integer, Single, Single)
  fullName.vb: Tentacle.TentacleChunk.New(Tentacle, Integer, Single, Single)
  name.vb: New(Tentacle, Integer, Single, Single)
- uid: Global.Tentacle.TentacleChunk.Reset
  commentId: M:Global.Tentacle.TentacleChunk.Reset
  id: Reset
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Tentacle.TentacleChunk.Reset()
  fullName: Tentacle.TentacleChunk.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tentacle.TentacleChunk.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.Tentacle.TentacleChunk.Reset*
- uid: Global.Tentacle.TentacleChunk.Update
  commentId: M:Global.Tentacle.TentacleChunk.Update
  id: Update
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Tentacle.TentacleChunk.Update()
  fullName: Tentacle.TentacleChunk.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tentacle.TentacleChunk.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.Tentacle.TentacleChunk.Update*
- uid: Global.Tentacle.TentacleChunk.PhaseToSegment
  commentId: M:Global.Tentacle.TentacleChunk.PhaseToSegment
  id: PhaseToSegment
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: PhaseToSegment()
  nameWithType: Tentacle.TentacleChunk.PhaseToSegment()
  fullName: Tentacle.TentacleChunk.PhaseToSegment()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tentacle.TentacleChunk.PhaseToSegment</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PhaseToSegment()
    content.vb: Public Sub PhaseToSegment()
  overload: Global.Tentacle.TentacleChunk.PhaseToSegment*
- uid: Global.Tentacle.TentacleChunk.CreateDebugSprites
  commentId: M:Global.Tentacle.TentacleChunk.CreateDebugSprites
  id: CreateDebugSprites
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: CreateDebugSprites()
  nameWithType: Tentacle.TentacleChunk.CreateDebugSprites()
  fullName: Tentacle.TentacleChunk.CreateDebugSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tentacle.TentacleChunk.CreateDebugSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CreateDebugSprites()
    content.vb: Public Sub CreateDebugSprites()
  overload: Global.Tentacle.TentacleChunk.CreateDebugSprites*
- uid: Global.Tentacle.TentacleChunk.currentSegment
  commentId: P:Global.Tentacle.TentacleChunk.currentSegment
  id: currentSegment
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: currentSegment
  nameWithType: Tentacle.TentacleChunk.currentSegment
  fullName: Tentacle.TentacleChunk.currentSegment
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Tentacle.TentacleChunk.currentSegment</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int currentSegment { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property currentSegment As Integer
  overload: Global.Tentacle.TentacleChunk.currentSegment*
- uid: Global.Tentacle.TentacleChunk.StuckPos
  commentId: P:Global.Tentacle.TentacleChunk.StuckPos
  id: StuckPos
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: StuckPos
  nameWithType: Tentacle.TentacleChunk.StuckPos
  fullName: Tentacle.TentacleChunk.StuckPos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Tentacle.TentacleChunk.StuckPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 StuckPos { get; }
    parameters: []
    return:
      type: RWCustom.IntVector2
    content.vb: Public ReadOnly Property StuckPos As IntVector2
  overload: Global.Tentacle.TentacleChunk.StuckPos*
- uid: Global.Tentacle.TentacleChunk.StuckRect
  commentId: P:Global.Tentacle.TentacleChunk.StuckRect
  id: StuckRect
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: StuckRect
  nameWithType: Tentacle.TentacleChunk.StuckRect
  fullName: Tentacle.TentacleChunk.StuckRect
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Tentacle.TentacleChunk.StuckRect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FloatRect StuckRect { get; }
    parameters: []
    return:
      type: Global.FloatRect
    content.vb: Public ReadOnly Property StuckRect As FloatRect
  overload: Global.Tentacle.TentacleChunk.StuckRect*
- uid: Global.Tentacle.TentacleChunk.tp
  commentId: P:Global.Tentacle.TentacleChunk.tp
  id: tp
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: tp
  nameWithType: Tentacle.TentacleChunk.tp
  fullName: Tentacle.TentacleChunk.tp
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Tentacle.TentacleChunk.tp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tentacle.TentacleProps tp { get; }
    parameters: []
    return:
      type: Global.Tentacle.TentacleProps
    content.vb: Public ReadOnly Property tp As Tentacle.TentacleProps
  overload: Global.Tentacle.TentacleChunk.tp*
- uid: Global.Tentacle.TentacleChunk.stretchedRad
  commentId: P:Global.Tentacle.TentacleChunk.stretchedRad
  id: stretchedRad
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: stretchedRad
  nameWithType: Tentacle.TentacleChunk.stretchedRad
  fullName: Tentacle.TentacleChunk.stretchedRad
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Tentacle.TentacleChunk.stretchedRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float stretchedRad { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property stretchedRad As Single
  overload: Global.Tentacle.TentacleChunk.stretchedRad*
- uid: Global.Tentacle.TentacleChunk.RopeActive
  commentId: P:Global.Tentacle.TentacleChunk.RopeActive
  id: RopeActive
  parent: Global.Tentacle.TentacleChunk
  langs:
  - csharp
  - vb
  name: RopeActive
  nameWithType: Tentacle.TentacleChunk.RopeActive
  fullName: Tentacle.TentacleChunk.RopeActive
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Tentacle.TentacleChunk.RopeActive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool RopeActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property RopeActive As Boolean
  overload: Global.Tentacle.TentacleChunk.RopeActive*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.Tentacle
  commentId: T:Global.Tentacle
  isExternal: true
  href: Tentacle.html
  name: Tentacle
  nameWithType: Tentacle
  fullName: Tentacle
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{RWCustom.IntVector2}
  commentId: T:System.Collections.Generic.List{RWCustom.IntVector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IntVector2>
  nameWithType: List<IntVector2>
  fullName: System.Collections.Generic.List<RWCustom.IntVector2>
  nameWithType.vb: List(Of IntVector2)
  fullName.vb: System.Collections.Generic.List(Of RWCustom.IntVector2)
  name.vb: List(Of IntVector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Rope
  commentId: T:Global.Rope
  isExternal: true
  href: Rope.html
  name: Rope
  nameWithType: Rope
  fullName: Rope
- uid: Global.Tentacle.TentacleChunk.#ctor*
  commentId: Overload:Global.Tentacle.TentacleChunk.#ctor
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk__ctor_Tentacle_System_Int32_System_Single_System_Single_
  name: TentacleChunk
  nameWithType: Tentacle.TentacleChunk.TentacleChunk
  fullName: Tentacle.TentacleChunk.TentacleChunk
  nameWithType.vb: Tentacle.TentacleChunk.New
  fullName.vb: Tentacle.TentacleChunk.New
  name.vb: New
- uid: Global.Tentacle.TentacleChunk.Reset*
  commentId: Overload:Global.Tentacle.TentacleChunk.Reset
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk_Reset
  name: Reset
  nameWithType: Tentacle.TentacleChunk.Reset
  fullName: Tentacle.TentacleChunk.Reset
- uid: Global.Tentacle.TentacleChunk.Update*
  commentId: Overload:Global.Tentacle.TentacleChunk.Update
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk_Update
  name: Update
  nameWithType: Tentacle.TentacleChunk.Update
  fullName: Tentacle.TentacleChunk.Update
- uid: Global.Tentacle.TentacleChunk.PhaseToSegment*
  commentId: Overload:Global.Tentacle.TentacleChunk.PhaseToSegment
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk_PhaseToSegment
  name: PhaseToSegment
  nameWithType: Tentacle.TentacleChunk.PhaseToSegment
  fullName: Tentacle.TentacleChunk.PhaseToSegment
- uid: Global.Tentacle.TentacleChunk.CreateDebugSprites*
  commentId: Overload:Global.Tentacle.TentacleChunk.CreateDebugSprites
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk_CreateDebugSprites
  name: CreateDebugSprites
  nameWithType: Tentacle.TentacleChunk.CreateDebugSprites
  fullName: Tentacle.TentacleChunk.CreateDebugSprites
- uid: Global.Tentacle.TentacleChunk.currentSegment*
  commentId: Overload:Global.Tentacle.TentacleChunk.currentSegment
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk_currentSegment
  name: currentSegment
  nameWithType: Tentacle.TentacleChunk.currentSegment
  fullName: Tentacle.TentacleChunk.currentSegment
- uid: Global.Tentacle.TentacleChunk.StuckPos*
  commentId: Overload:Global.Tentacle.TentacleChunk.StuckPos
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk_StuckPos
  name: StuckPos
  nameWithType: Tentacle.TentacleChunk.StuckPos
  fullName: Tentacle.TentacleChunk.StuckPos
- uid: Global.Tentacle.TentacleChunk.StuckRect*
  commentId: Overload:Global.Tentacle.TentacleChunk.StuckRect
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk_StuckRect
  name: StuckRect
  nameWithType: Tentacle.TentacleChunk.StuckRect
  fullName: Tentacle.TentacleChunk.StuckRect
- uid: Global.FloatRect
  commentId: T:Global.FloatRect
  isExternal: true
  href: FloatRect.html
  name: FloatRect
  nameWithType: FloatRect
  fullName: FloatRect
- uid: Global.Tentacle.TentacleChunk.tp*
  commentId: Overload:Global.Tentacle.TentacleChunk.tp
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk_tp
  name: tp
  nameWithType: Tentacle.TentacleChunk.tp
  fullName: Tentacle.TentacleChunk.tp
- uid: Global.Tentacle.TentacleProps
  commentId: T:Global.Tentacle.TentacleProps
  isExternal: true
  href: Tentacle.html
  name: Tentacle.TentacleProps
  nameWithType: Tentacle.TentacleProps
  fullName: Tentacle.TentacleProps
  spec.csharp:
  - uid: Global.Tentacle
    name: Tentacle
    isExternal: true
    href: Tentacle.html
  - name: .
  - uid: Global.Tentacle.TentacleProps
    name: TentacleProps
    isExternal: true
    href: Tentacle.TentacleProps.html
  spec.vb:
  - uid: Global.Tentacle
    name: Tentacle
    isExternal: true
    href: Tentacle.html
  - name: .
  - uid: Global.Tentacle.TentacleProps
    name: TentacleProps
    isExternal: true
    href: Tentacle.TentacleProps.html
- uid: Global.Tentacle.TentacleChunk.stretchedRad*
  commentId: Overload:Global.Tentacle.TentacleChunk.stretchedRad
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk_stretchedRad
  name: stretchedRad
  nameWithType: Tentacle.TentacleChunk.stretchedRad
  fullName: Tentacle.TentacleChunk.stretchedRad
- uid: Global.Tentacle.TentacleChunk.RopeActive*
  commentId: Overload:Global.Tentacle.TentacleChunk.RopeActive
  isExternal: true
  href: Global.Tentacle.TentacleChunk.html#Tentacle_TentacleChunk_RopeActive
  name: RopeActive
  nameWithType: Tentacle.TentacleChunk.RopeActive
  fullName: Tentacle.TentacleChunk.RopeActive
