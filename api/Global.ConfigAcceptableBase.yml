### YamlMime:ManagedReference
items:
- uid: Global.ConfigAcceptableBase
  commentId: T:Global.ConfigAcceptableBase
  id: ConfigAcceptableBase
  parent: Global
  children:
  - Global.ConfigAcceptableBase.#ctor(System.Type)
  - Global.ConfigAcceptableBase.Clamp(System.Object)
  - Global.ConfigAcceptableBase.IsValid(System.Object)
  - Global.ConfigAcceptableBase.ToDescriptionString
  - Global.ConfigAcceptableBase.ValueType
  langs:
  - csharp
  - vb
  name: ConfigAcceptableBase
  nameWithType: ConfigAcceptableBase
  fullName: ConfigAcceptableBase
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ConfigAcceptableBase</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class ConfigAcceptableBase
    content.vb: Public MustInherit Class ConfigAcceptableBase
  inheritance:
  - System.Object
  derivedClasses:
  - Global.ConfigAcceptableList`1
  - Global.ConfigAcceptableRange`1
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ConfigAcceptableBase.ValueType
  commentId: F:Global.ConfigAcceptableBase.ValueType
  id: ValueType
  parent: Global.ConfigAcceptableBase
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: ConfigAcceptableBase.ValueType
  fullName: ConfigAcceptableBase.ValueType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ConfigAcceptableBase.ValueType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly Type ValueType
    return:
      type: System.Type
    content.vb: Public ReadOnly ValueType As Type
- uid: Global.ConfigAcceptableBase.#ctor(System.Type)
  commentId: M:Global.ConfigAcceptableBase.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: Global.ConfigAcceptableBase
  langs:
  - csharp
  - vb
  name: ConfigAcceptableBase(Type)
  nameWithType: ConfigAcceptableBase.ConfigAcceptableBase(Type)
  fullName: ConfigAcceptableBase.ConfigAcceptableBase(System.Type)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ConfigAcceptableBase</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected ConfigAcceptableBase(Type valueType)
    parameters:
    - id: valueType
      type: System.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>valueType</parameter>
            <parameter>M:ConfigAcceptableBase.#ctor(System.Type)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub New(valueType As Type)
  overload: Global.ConfigAcceptableBase.#ctor*
  nameWithType.vb: ConfigAcceptableBase.New(Type)
  fullName.vb: ConfigAcceptableBase.New(System.Type)
  name.vb: New(Type)
- uid: Global.ConfigAcceptableBase.Clamp(System.Object)
  commentId: M:Global.ConfigAcceptableBase.Clamp(System.Object)
  id: Clamp(System.Object)
  parent: Global.ConfigAcceptableBase
  langs:
  - csharp
  - vb
  name: Clamp(object)
  nameWithType: ConfigAcceptableBase.Clamp(object)
  fullName: ConfigAcceptableBase.Clamp(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ConfigAcceptableBase.Clamp(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract object Clamp(object value)
    parameters:
    - id: value
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:ConfigAcceptableBase.Clamp(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ConfigAcceptableBase.Clamp(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public MustOverride Function Clamp(value As Object) As Object
  overload: Global.ConfigAcceptableBase.Clamp*
  nameWithType.vb: ConfigAcceptableBase.Clamp(Object)
  fullName.vb: ConfigAcceptableBase.Clamp(Object)
  name.vb: Clamp(Object)
- uid: Global.ConfigAcceptableBase.IsValid(System.Object)
  commentId: M:Global.ConfigAcceptableBase.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: Global.ConfigAcceptableBase
  langs:
  - csharp
  - vb
  name: IsValid(object)
  nameWithType: ConfigAcceptableBase.IsValid(object)
  fullName: ConfigAcceptableBase.IsValid(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ConfigAcceptableBase.IsValid(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract bool IsValid(object value)
    parameters:
    - id: value
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:ConfigAcceptableBase.IsValid(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ConfigAcceptableBase.IsValid(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public MustOverride Function IsValid(value As Object) As Boolean
  overload: Global.ConfigAcceptableBase.IsValid*
  nameWithType.vb: ConfigAcceptableBase.IsValid(Object)
  fullName.vb: ConfigAcceptableBase.IsValid(Object)
  name.vb: IsValid(Object)
- uid: Global.ConfigAcceptableBase.ToDescriptionString
  commentId: M:Global.ConfigAcceptableBase.ToDescriptionString
  id: ToDescriptionString
  parent: Global.ConfigAcceptableBase
  langs:
  - csharp
  - vb
  name: ToDescriptionString()
  nameWithType: ConfigAcceptableBase.ToDescriptionString()
  fullName: ConfigAcceptableBase.ToDescriptionString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ConfigAcceptableBase.ToDescriptionString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract string ToDescriptionString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ConfigAcceptableBase.ToDescriptionString</parameter>
          </include>
        </markup>
    content.vb: Public MustOverride Function ToDescriptionString() As String
  overload: Global.ConfigAcceptableBase.ToDescriptionString*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Global.ConfigAcceptableBase.#ctor*
  commentId: Overload:Global.ConfigAcceptableBase.#ctor
  isExternal: true
  href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase__ctor_System_Type_
  name: ConfigAcceptableBase
  nameWithType: ConfigAcceptableBase.ConfigAcceptableBase
  fullName: ConfigAcceptableBase.ConfigAcceptableBase
  nameWithType.vb: ConfigAcceptableBase.New
  fullName.vb: ConfigAcceptableBase.New
  name.vb: New
- uid: Global.ConfigAcceptableBase.Clamp*
  commentId: Overload:Global.ConfigAcceptableBase.Clamp
  isExternal: true
  href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_Clamp_System_Object_
  name: Clamp
  nameWithType: ConfigAcceptableBase.Clamp
  fullName: ConfigAcceptableBase.Clamp
- uid: Global.ConfigAcceptableBase.IsValid*
  commentId: Overload:Global.ConfigAcceptableBase.IsValid
  isExternal: true
  href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_IsValid_System_Object_
  name: IsValid
  nameWithType: ConfigAcceptableBase.IsValid
  fullName: ConfigAcceptableBase.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ConfigAcceptableBase.ToDescriptionString*
  commentId: Overload:Global.ConfigAcceptableBase.ToDescriptionString
  isExternal: true
  href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_ToDescriptionString
  name: ToDescriptionString
  nameWithType: ConfigAcceptableBase.ToDescriptionString
  fullName: ConfigAcceptableBase.ToDescriptionString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
