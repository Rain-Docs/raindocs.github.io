### YamlMime:ManagedReference
items:
- uid: Modding.Expedition.CustomPerks
  commentId: T:Modding.Expedition.CustomPerks
  id: CustomPerks
  parent: Modding.Expedition
  children:
  - Modding.Expedition.CustomPerks.CustomPerkGroups
  - Modding.Expedition.CustomPerks.PerkForID(System.String)
  - Modding.Expedition.CustomPerks.Register(Modding.Expedition.CustomPerk[])
  - Modding.Expedition.CustomPerks.RegisteredPerks
  langs:
  - csharp
  - vb
  name: CustomPerks
  nameWithType: CustomPerks
  fullName: Modding.Expedition.CustomPerks
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Modding.Expedition.CustomPerks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class CustomPerks
    content.vb: Public Module CustomPerks
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Modding.Expedition.CustomPerks.RegisteredPerks
  commentId: F:Modding.Expedition.CustomPerks.RegisteredPerks
  id: RegisteredPerks
  parent: Modding.Expedition.CustomPerks
  langs:
  - csharp
  - vb
  name: RegisteredPerks
  nameWithType: CustomPerks.RegisteredPerks
  fullName: Modding.Expedition.CustomPerks.RegisteredPerks
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Modding.Expedition.CustomPerks.RegisteredPerks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly List<CustomPerk> RegisteredPerks
    return:
      type: System.Collections.Generic.List{Modding.Expedition.CustomPerk}
    content.vb: Public Shared ReadOnly RegisteredPerks As List(Of CustomPerk)
- uid: Modding.Expedition.CustomPerks.PerkForID(System.String)
  commentId: M:Modding.Expedition.CustomPerks.PerkForID(System.String)
  id: PerkForID(System.String)
  parent: Modding.Expedition.CustomPerks
  langs:
  - csharp
  - vb
  name: PerkForID(string)
  nameWithType: CustomPerks.PerkForID(string)
  fullName: Modding.Expedition.CustomPerks.PerkForID(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Modding.Expedition.CustomPerks.PerkForID(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CustomPerk PerkForID(string id)
    parameters:
    - id: id
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Modding.Expedition.CustomPerks.PerkForID(System.String)</parameter>
          </include>
        </markup>
    return:
      type: Modding.Expedition.CustomPerk
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Modding.Expedition.CustomPerks.PerkForID(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function PerkForID(id As String) As CustomPerk
  overload: Modding.Expedition.CustomPerks.PerkForID*
  nameWithType.vb: CustomPerks.PerkForID(String)
  fullName.vb: Modding.Expedition.CustomPerks.PerkForID(String)
  name.vb: PerkForID(String)
- uid: Modding.Expedition.CustomPerks.Register(Modding.Expedition.CustomPerk[])
  commentId: M:Modding.Expedition.CustomPerks.Register(Modding.Expedition.CustomPerk[])
  id: Register(Modding.Expedition.CustomPerk[])
  parent: Modding.Expedition.CustomPerks
  langs:
  - csharp
  - vb
  name: Register(params CustomPerk[])
  nameWithType: CustomPerks.Register(params CustomPerk[])
  fullName: Modding.Expedition.CustomPerks.Register(params Modding.Expedition.CustomPerk[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Modding.Expedition.CustomPerks.Register(Modding.Expedition.CustomPerk[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void Register(params CustomPerk[] perks)
    parameters:
    - id: perks
      type: Modding.Expedition.CustomPerk[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>perks</parameter>
            <parameter>M:Modding.Expedition.CustomPerks.Register(Modding.Expedition.CustomPerk[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub Register(ParamArray perks As CustomPerk())
  overload: Modding.Expedition.CustomPerks.Register*
  nameWithType.vb: CustomPerks.Register(ParamArray CustomPerk())
  fullName.vb: Modding.Expedition.CustomPerks.Register(ParamArray Modding.Expedition.CustomPerk())
  name.vb: Register(ParamArray CustomPerk())
- uid: Modding.Expedition.CustomPerks.CustomPerkGroups
  commentId: P:Modding.Expedition.CustomPerks.CustomPerkGroups
  id: CustomPerkGroups
  parent: Modding.Expedition.CustomPerks
  langs:
  - csharp
  - vb
  name: CustomPerkGroups
  nameWithType: CustomPerks.CustomPerkGroups
  fullName: Modding.Expedition.CustomPerks.CustomPerkGroups
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Modding.Expedition.CustomPerks.CustomPerkGroups</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> CustomPerkGroups { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared ReadOnly Property CustomPerkGroups As List(Of String)
  overload: Modding.Expedition.CustomPerks.CustomPerkGroups*
references:
- uid: Modding.Expedition
  commentId: N:Modding.Expedition
  isExternal: true
  href: Modding.html
  name: Modding.Expedition
  nameWithType: Modding.Expedition
  fullName: Modding.Expedition
  spec.csharp:
  - uid: Modding
    name: Modding
    isExternal: true
    href: Modding.html
  - name: .
  - uid: Modding.Expedition
    name: Expedition
    isExternal: true
    href: Modding.Expedition.html
  spec.vb:
  - uid: Modding
    name: Modding
    isExternal: true
    href: Modding.html
  - name: .
  - uid: Modding.Expedition
    name: Expedition
    isExternal: true
    href: Modding.Expedition.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Modding.Expedition.CustomPerk}
  commentId: T:System.Collections.Generic.List{Modding.Expedition.CustomPerk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CustomPerk>
  nameWithType: List<CustomPerk>
  fullName: System.Collections.Generic.List<Modding.Expedition.CustomPerk>
  nameWithType.vb: List(Of CustomPerk)
  fullName.vb: System.Collections.Generic.List(Of Modding.Expedition.CustomPerk)
  name.vb: List(Of CustomPerk)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Modding.Expedition.CustomPerk
    name: CustomPerk
    isExternal: true
    href: Modding.Expedition.CustomPerk.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Modding.Expedition.CustomPerk
    name: CustomPerk
    isExternal: true
    href: Modding.Expedition.CustomPerk.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Modding.Expedition.CustomPerks.PerkForID*
  commentId: Overload:Modding.Expedition.CustomPerks.PerkForID
  isExternal: true
  href: Modding.Expedition.CustomPerks.html#Modding_Expedition_CustomPerks_PerkForID_System_String_
  name: PerkForID
  nameWithType: CustomPerks.PerkForID
  fullName: Modding.Expedition.CustomPerks.PerkForID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Modding.Expedition.CustomPerk
  commentId: T:Modding.Expedition.CustomPerk
  parent: Modding.Expedition
  isExternal: true
  href: Modding.Expedition.CustomPerk.html
  name: CustomPerk
  nameWithType: CustomPerk
  fullName: Modding.Expedition.CustomPerk
- uid: Modding.Expedition.CustomPerks.Register*
  commentId: Overload:Modding.Expedition.CustomPerks.Register
  isExternal: true
  href: Modding.Expedition.CustomPerks.html#Modding_Expedition_CustomPerks_Register_Modding_Expedition_CustomPerk___
  name: Register
  nameWithType: CustomPerks.Register
  fullName: Modding.Expedition.CustomPerks.Register
- uid: Modding.Expedition.CustomPerk[]
  isExternal: true
  href: Modding.Expedition.CustomPerk.html
  name: CustomPerk[]
  nameWithType: CustomPerk[]
  fullName: Modding.Expedition.CustomPerk[]
  nameWithType.vb: CustomPerk()
  fullName.vb: Modding.Expedition.CustomPerk()
  name.vb: CustomPerk()
  spec.csharp:
  - uid: Modding.Expedition.CustomPerk
    name: CustomPerk
    isExternal: true
    href: Modding.Expedition.CustomPerk.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Modding.Expedition.CustomPerk
    name: CustomPerk
    isExternal: true
    href: Modding.Expedition.CustomPerk.html
  - name: (
  - name: )
- uid: Modding.Expedition.CustomPerks.CustomPerkGroups*
  commentId: Overload:Modding.Expedition.CustomPerks.CustomPerkGroups
  isExternal: true
  href: Modding.Expedition.CustomPerks.html#Modding_Expedition_CustomPerks_CustomPerkGroups
  name: CustomPerkGroups
  nameWithType: CustomPerks.CustomPerkGroups
  fullName: Modding.Expedition.CustomPerks.CustomPerkGroups
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
