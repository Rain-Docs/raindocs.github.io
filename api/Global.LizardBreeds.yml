### YamlMime:ManagedReference
items:
- uid: Global.LizardBreeds
  commentId: T:Global.LizardBreeds
  id: LizardBreeds
  parent: Global
  children:
  - Global.LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate)
  - Global.LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)
  langs:
  - csharp
  - vb
  name: LizardBreeds
  nameWithType: LizardBreeds
  fullName: LizardBreeds
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LizardBreeds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class LizardBreeds
    content.vb: Public Module LizardBreeds
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)
  commentId: M:Global.LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)
  id: BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)
  parent: Global.LizardBreeds
  langs:
  - csharp
  - vb
  name: BreedTemplate(Type, CreatureTemplate, CreatureTemplate, CreatureTemplate, CreatureTemplate)
  nameWithType: LizardBreeds.BreedTemplate(CreatureTemplate.Type, CreatureTemplate, CreatureTemplate, CreatureTemplate, CreatureTemplate)
  fullName: LizardBreeds.BreedTemplate(CreatureTemplate.Type, CreatureTemplate, CreatureTemplate, CreatureTemplate, CreatureTemplate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate BreedTemplate(CreatureTemplate.Type type, CreatureTemplate lizardAncestor, CreatureTemplate pinkTemplate, CreatureTemplate blueTemplate, CreatureTemplate greenTemplate)
    parameters:
    - id: type
      type: Global.CreatureTemplate.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)</parameter>
          </include>
        </markup>
    - id: lizardAncestor
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lizardAncestor</parameter>
            <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)</parameter>
          </include>
        </markup>
    - id: pinkTemplate
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pinkTemplate</parameter>
            <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)</parameter>
          </include>
        </markup>
    - id: blueTemplate
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>blueTemplate</parameter>
            <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)</parameter>
          </include>
        </markup>
    - id: greenTemplate
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>greenTemplate</parameter>
            <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)</parameter>
          </include>
        </markup>
    return:
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate,CreatureTemplate,CreatureTemplate)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function BreedTemplate(type As CreatureTemplate.Type, lizardAncestor As CreatureTemplate, pinkTemplate As CreatureTemplate, blueTemplate As CreatureTemplate, greenTemplate As CreatureTemplate) As CreatureTemplate
  overload: Global.LizardBreeds.BreedTemplate*
- uid: Global.LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate)
  commentId: M:Global.LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate)
  id: BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate)
  parent: Global.LizardBreeds
  langs:
  - csharp
  - vb
  name: BreedTemplate(Type, CreatureTemplate, CreatureTemplate)
  nameWithType: LizardBreeds.BreedTemplate(CreatureTemplate.Type, CreatureTemplate, CreatureTemplate)
  fullName: LizardBreeds.BreedTemplate(CreatureTemplate.Type, CreatureTemplate, CreatureTemplate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate BreedTemplate(CreatureTemplate.Type type, CreatureTemplate lizardAncestor, CreatureTemplate SalamanderTemplate)
    parameters:
    - id: type
      type: Global.CreatureTemplate.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate)</parameter>
          </include>
        </markup>
    - id: lizardAncestor
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lizardAncestor</parameter>
            <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate)</parameter>
          </include>
        </markup>
    - id: SalamanderTemplate
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>SalamanderTemplate</parameter>
            <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate)</parameter>
          </include>
        </markup>
    return:
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardBreeds.BreedTemplate(CreatureTemplate.Type,CreatureTemplate,CreatureTemplate)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function BreedTemplate(type As CreatureTemplate.Type, lizardAncestor As CreatureTemplate, SalamanderTemplate As CreatureTemplate) As CreatureTemplate
  overload: Global.LizardBreeds.BreedTemplate*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.LizardBreeds.BreedTemplate*
  commentId: Overload:Global.LizardBreeds.BreedTemplate
  isExternal: true
  href: Global.LizardBreeds.html#LizardBreeds_BreedTemplate_CreatureTemplate_Type_CreatureTemplate_CreatureTemplate_CreatureTemplate_CreatureTemplate_
  name: BreedTemplate
  nameWithType: LizardBreeds.BreedTemplate
  fullName: LizardBreeds.BreedTemplate
- uid: Global.CreatureTemplate.Type
  commentId: T:Global.CreatureTemplate.Type
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.Type
  nameWithType: CreatureTemplate.Type
  fullName: CreatureTemplate.Type
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
- uid: Global.CreatureTemplate
  commentId: T:Global.CreatureTemplate
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate
  nameWithType: CreatureTemplate
  fullName: CreatureTemplate
