### YamlMime:ManagedReference
items:
- uid: Global.YellowAI.YellowPack
  commentId: T:Global.YellowAI.YellowPack
  id: YellowAI.YellowPack
  parent: Global
  children:
  - Global.YellowAI.YellowPack.#ctor(AbstractCreature)
  - Global.YellowAI.YellowPack.AddLizard(AbstractCreature)
  - Global.YellowAI.YellowPack.FindLeader
  - Global.YellowAI.YellowPack.LeaderDominance
  - Global.YellowAI.YellowPack.PackLeader
  - Global.YellowAI.YellowPack.RemoveLizard(AbstractCreature)
  - Global.YellowAI.YellowPack.RemoveLizard(System.Int32)
  - Global.YellowAI.YellowPack.Update
  - Global.YellowAI.YellowPack.members
  - Global.YellowAI.YellowPack.packName
  langs:
  - csharp
  - vb
  name: YellowAI.YellowPack
  nameWithType: YellowAI.YellowPack
  fullName: YellowAI.YellowPack
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:YellowAI.YellowPack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class YellowAI.YellowPack
    content.vb: Public Class YellowAI.YellowPack
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.YellowAI.YellowPack.packName
  commentId: F:Global.YellowAI.YellowPack.packName
  id: packName
  parent: Global.YellowAI.YellowPack
  langs:
  - csharp
  - vb
  name: packName
  nameWithType: YellowAI.YellowPack.packName
  fullName: YellowAI.YellowPack.packName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:YellowAI.YellowPack.packName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string packName
    return:
      type: System.String
    content.vb: Public packName As String
- uid: Global.YellowAI.YellowPack.members
  commentId: F:Global.YellowAI.YellowPack.members
  id: members
  parent: Global.YellowAI.YellowPack
  langs:
  - csharp
  - vb
  name: members
  nameWithType: YellowAI.YellowPack.members
  fullName: YellowAI.YellowPack.members
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:YellowAI.YellowPack.members</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<YellowAI.YellowPack.PackMember> members
    return:
      type: System.Collections.Generic.List{YellowAI.YellowPack.PackMember}
    content.vb: Public members As List(Of YellowAI.YellowPack.PackMember)
- uid: Global.YellowAI.YellowPack.#ctor(AbstractCreature)
  commentId: M:Global.YellowAI.YellowPack.#ctor(AbstractCreature)
  id: '#ctor(AbstractCreature)'
  parent: Global.YellowAI.YellowPack
  langs:
  - csharp
  - vb
  name: YellowPack(AbstractCreature)
  nameWithType: YellowAI.YellowPack.YellowPack(AbstractCreature)
  fullName: YellowAI.YellowPack.YellowPack(AbstractCreature)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>YellowAI.YellowPack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public YellowPack(AbstractCreature firstLizard)
    parameters:
    - id: firstLizard
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstLizard</parameter>
            <parameter>M:YellowAI.YellowPack.#ctor(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(firstLizard As AbstractCreature)
  overload: Global.YellowAI.YellowPack.#ctor*
  nameWithType.vb: YellowAI.YellowPack.New(AbstractCreature)
  fullName.vb: YellowAI.YellowPack.New(AbstractCreature)
  name.vb: New(AbstractCreature)
- uid: Global.YellowAI.YellowPack.Update
  commentId: M:Global.YellowAI.YellowPack.Update
  id: Update
  parent: Global.YellowAI.YellowPack
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: YellowAI.YellowPack.Update()
  fullName: YellowAI.YellowPack.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:YellowAI.YellowPack.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.YellowAI.YellowPack.Update*
- uid: Global.YellowAI.YellowPack.AddLizard(AbstractCreature)
  commentId: M:Global.YellowAI.YellowPack.AddLizard(AbstractCreature)
  id: AddLizard(AbstractCreature)
  parent: Global.YellowAI.YellowPack
  langs:
  - csharp
  - vb
  name: AddLizard(AbstractCreature)
  nameWithType: YellowAI.YellowPack.AddLizard(AbstractCreature)
  fullName: YellowAI.YellowPack.AddLizard(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:YellowAI.YellowPack.AddLizard(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddLizard(AbstractCreature newLizard)
    parameters:
    - id: newLizard
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newLizard</parameter>
            <parameter>M:YellowAI.YellowPack.AddLizard(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddLizard(newLizard As AbstractCreature)
  overload: Global.YellowAI.YellowPack.AddLizard*
- uid: Global.YellowAI.YellowPack.RemoveLizard(AbstractCreature)
  commentId: M:Global.YellowAI.YellowPack.RemoveLizard(AbstractCreature)
  id: RemoveLizard(AbstractCreature)
  parent: Global.YellowAI.YellowPack
  langs:
  - csharp
  - vb
  name: RemoveLizard(AbstractCreature)
  nameWithType: YellowAI.YellowPack.RemoveLizard(AbstractCreature)
  fullName: YellowAI.YellowPack.RemoveLizard(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:YellowAI.YellowPack.RemoveLizard(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveLizard(AbstractCreature removeLizard)
    parameters:
    - id: removeLizard
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>removeLizard</parameter>
            <parameter>M:YellowAI.YellowPack.RemoveLizard(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveLizard(removeLizard As AbstractCreature)
  overload: Global.YellowAI.YellowPack.RemoveLizard*
- uid: Global.YellowAI.YellowPack.RemoveLizard(System.Int32)
  commentId: M:Global.YellowAI.YellowPack.RemoveLizard(System.Int32)
  id: RemoveLizard(System.Int32)
  parent: Global.YellowAI.YellowPack
  langs:
  - csharp
  - vb
  name: RemoveLizard(int)
  nameWithType: YellowAI.YellowPack.RemoveLizard(int)
  fullName: YellowAI.YellowPack.RemoveLizard(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:YellowAI.YellowPack.RemoveLizard(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveLizard(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:YellowAI.YellowPack.RemoveLizard(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveLizard(index As Integer)
  overload: Global.YellowAI.YellowPack.RemoveLizard*
  nameWithType.vb: YellowAI.YellowPack.RemoveLizard(Integer)
  fullName.vb: YellowAI.YellowPack.RemoveLizard(Integer)
  name.vb: RemoveLizard(Integer)
- uid: Global.YellowAI.YellowPack.FindLeader
  commentId: M:Global.YellowAI.YellowPack.FindLeader
  id: FindLeader
  parent: Global.YellowAI.YellowPack
  langs:
  - csharp
  - vb
  name: FindLeader()
  nameWithType: YellowAI.YellowPack.FindLeader()
  fullName: YellowAI.YellowPack.FindLeader()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:YellowAI.YellowPack.FindLeader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FindLeader()
    content.vb: Public Sub FindLeader()
  overload: Global.YellowAI.YellowPack.FindLeader*
- uid: Global.YellowAI.YellowPack.PackLeader
  commentId: P:Global.YellowAI.YellowPack.PackLeader
  id: PackLeader
  parent: Global.YellowAI.YellowPack
  langs:
  - csharp
  - vb
  name: PackLeader
  nameWithType: YellowAI.YellowPack.PackLeader
  fullName: YellowAI.YellowPack.PackLeader
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:YellowAI.YellowPack.PackLeader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractCreature PackLeader { get; }
    parameters: []
    return:
      type: Global.AbstractCreature
    content.vb: Public ReadOnly Property PackLeader As AbstractCreature
  overload: Global.YellowAI.YellowPack.PackLeader*
- uid: Global.YellowAI.YellowPack.LeaderDominance
  commentId: P:Global.YellowAI.YellowPack.LeaderDominance
  id: LeaderDominance
  parent: Global.YellowAI.YellowPack
  langs:
  - csharp
  - vb
  name: LeaderDominance
  nameWithType: YellowAI.YellowPack.LeaderDominance
  fullName: YellowAI.YellowPack.LeaderDominance
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:YellowAI.YellowPack.LeaderDominance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float LeaderDominance { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LeaderDominance As Single
  overload: Global.YellowAI.YellowPack.LeaderDominance*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{YellowAI.YellowPack.PackMember}
  commentId: T:System.Collections.Generic.List{YellowAI.YellowPack.PackMember}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<YellowAI.YellowPack.PackMember>
  nameWithType: List<YellowAI.YellowPack.PackMember>
  fullName: System.Collections.Generic.List<YellowAI.YellowPack.PackMember>
  nameWithType.vb: List(Of YellowAI.YellowPack.PackMember)
  fullName.vb: System.Collections.Generic.List(Of YellowAI.YellowPack.PackMember)
  name.vb: List(Of YellowAI.YellowPack.PackMember)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.YellowAI
    name: YellowAI
    isExternal: true
    href: YellowAI.html
  - name: .
  - uid: Global.YellowAI.YellowPack
    name: YellowPack
    isExternal: true
    href: YellowAI.YellowPack.html
  - name: .
  - uid: Global.YellowAI.YellowPack.PackMember
    name: PackMember
    isExternal: true
    href: YellowAI.YellowPack.PackMember.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.YellowAI
    name: YellowAI
    isExternal: true
    href: YellowAI.html
  - name: .
  - uid: Global.YellowAI.YellowPack
    name: YellowPack
    isExternal: true
    href: YellowAI.YellowPack.html
  - name: .
  - uid: Global.YellowAI.YellowPack.PackMember
    name: PackMember
    isExternal: true
    href: YellowAI.YellowPack.PackMember.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.YellowAI.YellowPack.#ctor*
  commentId: Overload:Global.YellowAI.YellowPack.#ctor
  isExternal: true
  href: Global.YellowAI.YellowPack.html#YellowAI_YellowPack__ctor_AbstractCreature_
  name: YellowPack
  nameWithType: YellowAI.YellowPack.YellowPack
  fullName: YellowAI.YellowPack.YellowPack
  nameWithType.vb: YellowAI.YellowPack.New
  fullName.vb: YellowAI.YellowPack.New
  name.vb: New
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.YellowAI.YellowPack.Update*
  commentId: Overload:Global.YellowAI.YellowPack.Update
  isExternal: true
  href: Global.YellowAI.YellowPack.html#YellowAI_YellowPack_Update
  name: Update
  nameWithType: YellowAI.YellowPack.Update
  fullName: YellowAI.YellowPack.Update
- uid: Global.YellowAI.YellowPack.AddLizard*
  commentId: Overload:Global.YellowAI.YellowPack.AddLizard
  isExternal: true
  href: Global.YellowAI.YellowPack.html#YellowAI_YellowPack_AddLizard_AbstractCreature_
  name: AddLizard
  nameWithType: YellowAI.YellowPack.AddLizard
  fullName: YellowAI.YellowPack.AddLizard
- uid: Global.YellowAI.YellowPack.RemoveLizard*
  commentId: Overload:Global.YellowAI.YellowPack.RemoveLizard
  isExternal: true
  href: Global.YellowAI.YellowPack.html#YellowAI_YellowPack_RemoveLizard_AbstractCreature_
  name: RemoveLizard
  nameWithType: YellowAI.YellowPack.RemoveLizard
  fullName: YellowAI.YellowPack.RemoveLizard
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.YellowAI.YellowPack.FindLeader*
  commentId: Overload:Global.YellowAI.YellowPack.FindLeader
  isExternal: true
  href: Global.YellowAI.YellowPack.html#YellowAI_YellowPack_FindLeader
  name: FindLeader
  nameWithType: YellowAI.YellowPack.FindLeader
  fullName: YellowAI.YellowPack.FindLeader
- uid: Global.YellowAI.YellowPack.PackLeader*
  commentId: Overload:Global.YellowAI.YellowPack.PackLeader
  isExternal: true
  href: Global.YellowAI.YellowPack.html#YellowAI_YellowPack_PackLeader
  name: PackLeader
  nameWithType: YellowAI.YellowPack.PackLeader
  fullName: YellowAI.YellowPack.PackLeader
- uid: Global.YellowAI.YellowPack.LeaderDominance*
  commentId: Overload:Global.YellowAI.YellowPack.LeaderDominance
  isExternal: true
  href: Global.YellowAI.YellowPack.html#YellowAI_YellowPack_LeaderDominance
  name: LeaderDominance
  nameWithType: YellowAI.YellowPack.LeaderDominance
  fullName: YellowAI.YellowPack.LeaderDominance
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
