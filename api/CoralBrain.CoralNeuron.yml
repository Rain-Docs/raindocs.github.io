### YamlMime:ManagedReference
items:
- uid: CoralBrain.CoralNeuron
  commentId: T:CoralBrain.CoralNeuron
  id: CoralNeuron
  parent: CoralBrain
  children:
  - CoralBrain.CoralNeuron.#ctor(CoralBrain.CoralNeuronSystem,Room,System.Single,System.Nullable{UnityEngine.Vector2},System.Nullable{UnityEngine.Vector2})
  - CoralBrain.CoralNeuron.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - CoralBrain.CoralNeuron.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - CoralBrain.CoralNeuron.BeingClimbedOn(Creature)
  - CoralBrain.CoralNeuron.CanHostCircle
  - CoralBrain.CoralNeuron.CircleCenter(System.Int32,System.Single)
  - CoralBrain.CoralNeuron.ConnectionPos(System.Int32,System.Single)
  - CoralBrain.CoralNeuron.CurrentlyClimbable
  - CoralBrain.CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - CoralBrain.CoralNeuron.HostingCircleFromRoom
  - CoralBrain.CoralNeuron.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - CoralBrain.CoralNeuron.Mass(System.Int32)
  - CoralBrain.CoralNeuron.MeshColor(System.Single)
  - CoralBrain.CoralNeuron.OwnerRoom
  - CoralBrain.CoralNeuron.Pos(System.Int32)
  - CoralBrain.CoralNeuron.Push(System.Int32,UnityEngine.Vector2)
  - CoralBrain.CoralNeuron.Rad(System.Int32)
  - CoralBrain.CoralNeuron.ResetDir(System.Int32)
  - CoralBrain.CoralNeuron.TotalPositions
  - CoralBrain.CoralNeuron.Update(System.Boolean)
  - CoralBrain.CoralNeuron.bumpPings
  - CoralBrain.CoralNeuron.bumps
  - CoralBrain.CoralNeuron.conRad
  - CoralBrain.CoralNeuron.mycelia
  - CoralBrain.CoralNeuron.posA
  - CoralBrain.CoralNeuron.posB
  - CoralBrain.CoralNeuron.rootDirA
  - CoralBrain.CoralNeuron.rootDirB
  - CoralBrain.CoralNeuron.segments
  - CoralBrain.CoralNeuron.system
  langs:
  - csharp
  - vb
  name: CoralNeuron
  nameWithType: CoralNeuron
  fullName: CoralBrain.CoralNeuron
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CoralBrain.CoralNeuron</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class CoralNeuron : UpdatableAndDeletable, IClimbableVine, IDrawable, IOwnMycelia, IOwnProjectedCircles'
    content.vb: Public Class CoralNeuron Inherits UpdatableAndDeletable Implements IClimbableVine, IDrawable, IOwnMycelia, IOwnProjectedCircles
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  implements:
  - Global.IClimbableVine
  - Global.IDrawable
  - Global.IOwnMycelia
  - Global.IOwnProjectedCircles
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: CoralBrain.CoralNeuron.system
  commentId: F:CoralBrain.CoralNeuron.system
  id: system
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: system
  nameWithType: CoralNeuron.system
  fullName: CoralBrain.CoralNeuron.system
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralNeuron.system</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralNeuronSystem system
    return:
      type: CoralBrain.CoralNeuronSystem
    content.vb: Public system As CoralNeuronSystem
- uid: CoralBrain.CoralNeuron.segments
  commentId: F:CoralBrain.CoralNeuron.segments
  id: segments
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: segments
  nameWithType: CoralNeuron.segments
  fullName: CoralBrain.CoralNeuron.segments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralNeuron.segments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[,] segments
    return:
      type: UnityEngine.Vector2[,]
    content.vb: Public segments As Vector2(,)
- uid: CoralBrain.CoralNeuron.conRad
  commentId: F:CoralBrain.CoralNeuron.conRad
  id: conRad
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: conRad
  nameWithType: CoralNeuron.conRad
  fullName: CoralBrain.CoralNeuron.conRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralNeuron.conRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float conRad
    return:
      type: System.Single
    content.vb: Public conRad As Single
- uid: CoralBrain.CoralNeuron.bumps
  commentId: F:CoralBrain.CoralNeuron.bumps
  id: bumps
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: bumps
  nameWithType: CoralNeuron.bumps
  fullName: CoralBrain.CoralNeuron.bumps
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralNeuron.bumps</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] bumps
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public bumps As Vector2()
- uid: CoralBrain.CoralNeuron.bumpPings
  commentId: F:CoralBrain.CoralNeuron.bumpPings
  id: bumpPings
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: bumpPings
  nameWithType: CoralNeuron.bumpPings
  fullName: CoralBrain.CoralNeuron.bumpPings
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralNeuron.bumpPings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] bumpPings
    return:
      type: System.Single[,]
    content.vb: Public bumpPings As Single(,)
- uid: CoralBrain.CoralNeuron.posA
  commentId: F:CoralBrain.CoralNeuron.posA
  id: posA
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: posA
  nameWithType: CoralNeuron.posA
  fullName: CoralBrain.CoralNeuron.posA
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralNeuron.posA</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? posA
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public posA As Vector2?
- uid: CoralBrain.CoralNeuron.posB
  commentId: F:CoralBrain.CoralNeuron.posB
  id: posB
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: posB
  nameWithType: CoralNeuron.posB
  fullName: CoralBrain.CoralNeuron.posB
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralNeuron.posB</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? posB
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public posB As Vector2?
- uid: CoralBrain.CoralNeuron.rootDirA
  commentId: F:CoralBrain.CoralNeuron.rootDirA
  id: rootDirA
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: rootDirA
  nameWithType: CoralNeuron.rootDirA
  fullName: CoralBrain.CoralNeuron.rootDirA
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralNeuron.rootDirA</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? rootDirA
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public rootDirA As Vector2?
- uid: CoralBrain.CoralNeuron.rootDirB
  commentId: F:CoralBrain.CoralNeuron.rootDirB
  id: rootDirB
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: rootDirB
  nameWithType: CoralNeuron.rootDirB
  fullName: CoralBrain.CoralNeuron.rootDirB
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralNeuron.rootDirB</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? rootDirB
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public rootDirB As Vector2?
- uid: CoralBrain.CoralNeuron.mycelia
  commentId: F:CoralBrain.CoralNeuron.mycelia
  id: mycelia
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: mycelia
  nameWithType: CoralNeuron.mycelia
  fullName: CoralBrain.CoralNeuron.mycelia
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralNeuron.mycelia</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Mycelium[,] mycelia
    return:
      type: CoralBrain.Mycelium[,]
    content.vb: Public mycelia As Mycelium(,)
- uid: CoralBrain.CoralNeuron.MeshColor(System.Single)
  commentId: M:CoralBrain.CoralNeuron.MeshColor(System.Single)
  id: MeshColor(System.Single)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: MeshColor(float)
  nameWithType: CoralNeuron.MeshColor(float)
  fullName: CoralBrain.CoralNeuron.MeshColor(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.MeshColor(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color MeshColor(float f)
    parameters:
    - id: f
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>f</parameter>
            <parameter>M:CoralBrain.CoralNeuron.MeshColor(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.MeshColor(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function MeshColor(f As Single) As Color
  overload: CoralBrain.CoralNeuron.MeshColor*
  nameWithType.vb: CoralNeuron.MeshColor(Single)
  fullName.vb: CoralBrain.CoralNeuron.MeshColor(Single)
  name.vb: MeshColor(Single)
- uid: CoralBrain.CoralNeuron.#ctor(CoralBrain.CoralNeuronSystem,Room,System.Single,System.Nullable{UnityEngine.Vector2},System.Nullable{UnityEngine.Vector2})
  commentId: M:CoralBrain.CoralNeuron.#ctor(CoralBrain.CoralNeuronSystem,Room,System.Single,System.Nullable{UnityEngine.Vector2},System.Nullable{UnityEngine.Vector2})
  id: '#ctor(CoralBrain.CoralNeuronSystem,Room,System.Single,System.Nullable{UnityEngine.Vector2},System.Nullable{UnityEngine.Vector2})'
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: CoralNeuron(CoralNeuronSystem, Room, float, Vector2?, Vector2?)
  nameWithType: CoralNeuron.CoralNeuron(CoralNeuronSystem, Room, float, Vector2?, Vector2?)
  fullName: CoralBrain.CoralNeuron.CoralNeuron(CoralBrain.CoralNeuronSystem, Room, float, UnityEngine.Vector2?, UnityEngine.Vector2?)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CoralBrain.CoralNeuron</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralNeuron(CoralNeuronSystem system, Room room, float length, Vector2? posA, Vector2? posB)
    parameters:
    - id: system
      type: CoralBrain.CoralNeuronSystem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>system</parameter>
            <parameter>M:CoralBrain.CoralNeuron.#ctor(CoralBrain.CoralNeuronSystem,Room,System.Single,System.Nullable{UnityEngine.Vector2},System.Nullable{UnityEngine.Vector2})</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:CoralBrain.CoralNeuron.#ctor(CoralBrain.CoralNeuronSystem,Room,System.Single,System.Nullable{UnityEngine.Vector2},System.Nullable{UnityEngine.Vector2})</parameter>
          </include>
        </markup>
    - id: length
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:CoralBrain.CoralNeuron.#ctor(CoralBrain.CoralNeuronSystem,Room,System.Single,System.Nullable{UnityEngine.Vector2},System.Nullable{UnityEngine.Vector2})</parameter>
          </include>
        </markup>
    - id: posA
      type: System.Nullable{UnityEngine.Vector2}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>posA</parameter>
            <parameter>M:CoralBrain.CoralNeuron.#ctor(CoralBrain.CoralNeuronSystem,Room,System.Single,System.Nullable{UnityEngine.Vector2},System.Nullable{UnityEngine.Vector2})</parameter>
          </include>
        </markup>
    - id: posB
      type: System.Nullable{UnityEngine.Vector2}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>posB</parameter>
            <parameter>M:CoralBrain.CoralNeuron.#ctor(CoralBrain.CoralNeuronSystem,Room,System.Single,System.Nullable{UnityEngine.Vector2},System.Nullable{UnityEngine.Vector2})</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(system As CoralNeuronSystem, room As Room, length As Single, posA As Vector2?, posB As Vector2?)
  overload: CoralBrain.CoralNeuron.#ctor*
  nameWithType.vb: CoralNeuron.New(CoralNeuronSystem, Room, Single, Vector2?, Vector2?)
  fullName.vb: CoralBrain.CoralNeuron.New(CoralBrain.CoralNeuronSystem, Room, Single, UnityEngine.Vector2?, UnityEngine.Vector2?)
  name.vb: New(CoralNeuronSystem, Room, Single, Vector2?, Vector2?)
- uid: CoralBrain.CoralNeuron.Update(System.Boolean)
  commentId: M:CoralBrain.CoralNeuron.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: CoralNeuron.Update(bool)
  fullName: CoralBrain.CoralNeuron.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:CoralBrain.CoralNeuron.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: CoralBrain.CoralNeuron.Update*
  nameWithType.vb: CoralNeuron.Update(Boolean)
  fullName.vb: CoralBrain.CoralNeuron.Update(Boolean)
  name.vb: Update(Boolean)
- uid: CoralBrain.CoralNeuron.Pos(System.Int32)
  commentId: M:CoralBrain.CoralNeuron.Pos(System.Int32)
  id: Pos(System.Int32)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: Pos(int)
  nameWithType: CoralNeuron.Pos(int)
  fullName: CoralBrain.CoralNeuron.Pos(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.Pos(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 Pos(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralNeuron.Pos(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.Pos(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Pos(index As Integer) As Vector2
  overload: CoralBrain.CoralNeuron.Pos*
  implements:
  - Global.IClimbableVine.Pos(System.Int32)
  nameWithType.vb: CoralNeuron.Pos(Integer)
  fullName.vb: CoralBrain.CoralNeuron.Pos(Integer)
  name.vb: Pos(Integer)
- uid: CoralBrain.CoralNeuron.TotalPositions
  commentId: M:CoralBrain.CoralNeuron.TotalPositions
  id: TotalPositions
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: TotalPositions()
  nameWithType: CoralNeuron.TotalPositions()
  fullName: CoralBrain.CoralNeuron.TotalPositions()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.TotalPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TotalPositions()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.TotalPositions</parameter>
          </include>
        </markup>
    content.vb: Public Function TotalPositions() As Integer
  overload: CoralBrain.CoralNeuron.TotalPositions*
  implements:
  - Global.IClimbableVine.TotalPositions
- uid: CoralBrain.CoralNeuron.Rad(System.Int32)
  commentId: M:CoralBrain.CoralNeuron.Rad(System.Int32)
  id: Rad(System.Int32)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: Rad(int)
  nameWithType: CoralNeuron.Rad(int)
  fullName: CoralBrain.CoralNeuron.Rad(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.Rad(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Rad(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralNeuron.Rad(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.Rad(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Rad(index As Integer) As Single
  overload: CoralBrain.CoralNeuron.Rad*
  implements:
  - Global.IClimbableVine.Rad(System.Int32)
  nameWithType.vb: CoralNeuron.Rad(Integer)
  fullName.vb: CoralBrain.CoralNeuron.Rad(Integer)
  name.vb: Rad(Integer)
- uid: CoralBrain.CoralNeuron.Mass(System.Int32)
  commentId: M:CoralBrain.CoralNeuron.Mass(System.Int32)
  id: Mass(System.Int32)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: Mass(int)
  nameWithType: CoralNeuron.Mass(int)
  fullName: CoralBrain.CoralNeuron.Mass(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.Mass(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Mass(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralNeuron.Mass(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.Mass(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Mass(index As Integer) As Single
  overload: CoralBrain.CoralNeuron.Mass*
  implements:
  - Global.IClimbableVine.Mass(System.Int32)
  nameWithType.vb: CoralNeuron.Mass(Integer)
  fullName.vb: CoralBrain.CoralNeuron.Mass(Integer)
  name.vb: Mass(Integer)
- uid: CoralBrain.CoralNeuron.Push(System.Int32,UnityEngine.Vector2)
  commentId: M:CoralBrain.CoralNeuron.Push(System.Int32,UnityEngine.Vector2)
  id: Push(System.Int32,UnityEngine.Vector2)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: Push(int, Vector2)
  nameWithType: CoralNeuron.Push(int, Vector2)
  fullName: CoralBrain.CoralNeuron.Push(int, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.Push(System.Int32,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Push(int index, Vector2 movement)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralNeuron.Push(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: movement
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>movement</parameter>
            <parameter>M:CoralBrain.CoralNeuron.Push(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Push(index As Integer, movement As Vector2)
  overload: CoralBrain.CoralNeuron.Push*
  implements:
  - Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  nameWithType.vb: CoralNeuron.Push(Integer, Vector2)
  fullName.vb: CoralBrain.CoralNeuron.Push(Integer, UnityEngine.Vector2)
  name.vb: Push(Integer, Vector2)
- uid: CoralBrain.CoralNeuron.BeingClimbedOn(Creature)
  commentId: M:CoralBrain.CoralNeuron.BeingClimbedOn(Creature)
  id: BeingClimbedOn(Creature)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: BeingClimbedOn(Creature)
  nameWithType: CoralNeuron.BeingClimbedOn(Creature)
  fullName: CoralBrain.CoralNeuron.BeingClimbedOn(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.BeingClimbedOn(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void BeingClimbedOn(Creature crit)
    parameters:
    - id: crit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:CoralBrain.CoralNeuron.BeingClimbedOn(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub BeingClimbedOn(crit As Creature)
  overload: CoralBrain.CoralNeuron.BeingClimbedOn*
  implements:
  - Global.IClimbableVine.BeingClimbedOn(Creature)
- uid: CoralBrain.CoralNeuron.CurrentlyClimbable
  commentId: M:CoralBrain.CoralNeuron.CurrentlyClimbable
  id: CurrentlyClimbable
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: CurrentlyClimbable()
  nameWithType: CoralNeuron.CurrentlyClimbable()
  fullName: CoralBrain.CoralNeuron.CurrentlyClimbable()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.CurrentlyClimbable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CurrentlyClimbable()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.CurrentlyClimbable</parameter>
          </include>
        </markup>
    content.vb: Public Function CurrentlyClimbable() As Boolean
  overload: CoralBrain.CoralNeuron.CurrentlyClimbable*
  implements:
  - Global.IClimbableVine.CurrentlyClimbable
- uid: CoralBrain.CoralNeuron.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:CoralBrain.CoralNeuron.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: CoralNeuron.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: CoralBrain.CoralNeuron.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CoralBrain.CoralNeuron.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CoralBrain.CoralNeuron.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: CoralBrain.CoralNeuron.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: CoralBrain.CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:CoralBrain.CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: CoralBrain.CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CoralBrain.CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CoralBrain.CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:CoralBrain.CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:CoralBrain.CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: CoralBrain.CoralNeuron.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: CoralBrain.CoralNeuron.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: CoralBrain.CoralNeuron.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:CoralBrain.CoralNeuron.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: CoralNeuron.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: CoralBrain.CoralNeuron.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CoralBrain.CoralNeuron.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CoralBrain.CoralNeuron.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:CoralBrain.CoralNeuron.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: CoralBrain.CoralNeuron.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: CoralBrain.CoralNeuron.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:CoralBrain.CoralNeuron.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: CoralNeuron.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: CoralBrain.CoralNeuron.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CoralBrain.CoralNeuron.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CoralBrain.CoralNeuron.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:CoralBrain.CoralNeuron.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: CoralBrain.CoralNeuron.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: CoralBrain.CoralNeuron.ConnectionPos(System.Int32,System.Single)
  commentId: M:CoralBrain.CoralNeuron.ConnectionPos(System.Int32,System.Single)
  id: ConnectionPos(System.Int32,System.Single)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: ConnectionPos(int, float)
  nameWithType: CoralNeuron.ConnectionPos(int, float)
  fullName: CoralBrain.CoralNeuron.ConnectionPos(int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.ConnectionPos(System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 ConnectionPos(int index, float timeStacker)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralNeuron.ConnectionPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:CoralBrain.CoralNeuron.ConnectionPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.ConnectionPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function ConnectionPos(index As Integer, timeStacker As Single) As Vector2
  overload: CoralBrain.CoralNeuron.ConnectionPos*
  implements:
  - Global.IOwnMycelia.ConnectionPos(System.Int32,System.Single)
  nameWithType.vb: CoralNeuron.ConnectionPos(Integer, Single)
  fullName.vb: CoralBrain.CoralNeuron.ConnectionPos(Integer, Single)
  name.vb: ConnectionPos(Integer, Single)
- uid: CoralBrain.CoralNeuron.ResetDir(System.Int32)
  commentId: M:CoralBrain.CoralNeuron.ResetDir(System.Int32)
  id: ResetDir(System.Int32)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: ResetDir(int)
  nameWithType: CoralNeuron.ResetDir(int)
  fullName: CoralBrain.CoralNeuron.ResetDir(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.ResetDir(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 ResetDir(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralNeuron.ResetDir(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.ResetDir(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ResetDir(index As Integer) As Vector2
  overload: CoralBrain.CoralNeuron.ResetDir*
  implements:
  - Global.IOwnMycelia.ResetDir(System.Int32)
  nameWithType.vb: CoralNeuron.ResetDir(Integer)
  fullName.vb: CoralBrain.CoralNeuron.ResetDir(Integer)
  name.vb: ResetDir(Integer)
- uid: CoralBrain.CoralNeuron.CircleCenter(System.Int32,System.Single)
  commentId: M:CoralBrain.CoralNeuron.CircleCenter(System.Int32,System.Single)
  id: CircleCenter(System.Int32,System.Single)
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: CircleCenter(int, float)
  nameWithType: CoralNeuron.CircleCenter(int, float)
  fullName: CoralBrain.CoralNeuron.CircleCenter(int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.CircleCenter(System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 CircleCenter(int index, float timeStacker)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralNeuron.CircleCenter(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:CoralBrain.CoralNeuron.CircleCenter(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.CircleCenter(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function CircleCenter(index As Integer, timeStacker As Single) As Vector2
  overload: CoralBrain.CoralNeuron.CircleCenter*
  implements:
  - Global.IOwnProjectedCircles.CircleCenter(System.Int32,System.Single)
  nameWithType.vb: CoralNeuron.CircleCenter(Integer, Single)
  fullName.vb: CoralBrain.CoralNeuron.CircleCenter(Integer, Single)
  name.vb: CircleCenter(Integer, Single)
- uid: CoralBrain.CoralNeuron.HostingCircleFromRoom
  commentId: M:CoralBrain.CoralNeuron.HostingCircleFromRoom
  id: HostingCircleFromRoom
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: HostingCircleFromRoom()
  nameWithType: CoralNeuron.HostingCircleFromRoom()
  fullName: CoralBrain.CoralNeuron.HostingCircleFromRoom()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.HostingCircleFromRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room HostingCircleFromRoom()
    return:
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.HostingCircleFromRoom</parameter>
          </include>
        </markup>
    content.vb: Public Function HostingCircleFromRoom() As Room
  overload: CoralBrain.CoralNeuron.HostingCircleFromRoom*
  implements:
  - Global.IOwnProjectedCircles.HostingCircleFromRoom
- uid: CoralBrain.CoralNeuron.CanHostCircle
  commentId: M:CoralBrain.CoralNeuron.CanHostCircle
  id: CanHostCircle
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: CanHostCircle()
  nameWithType: CoralNeuron.CanHostCircle()
  fullName: CoralBrain.CoralNeuron.CanHostCircle()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralNeuron.CanHostCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanHostCircle()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralNeuron.CanHostCircle</parameter>
          </include>
        </markup>
    content.vb: Public Function CanHostCircle() As Boolean
  overload: CoralBrain.CoralNeuron.CanHostCircle*
  implements:
  - Global.IOwnProjectedCircles.CanHostCircle
- uid: CoralBrain.CoralNeuron.OwnerRoom
  commentId: P:CoralBrain.CoralNeuron.OwnerRoom
  id: OwnerRoom
  parent: CoralBrain.CoralNeuron
  langs:
  - csharp
  - vb
  name: OwnerRoom
  nameWithType: CoralNeuron.OwnerRoom
  fullName: CoralBrain.CoralNeuron.OwnerRoom
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CoralBrain.CoralNeuron.OwnerRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room OwnerRoom { get; }
    parameters: []
    return:
      type: Global.Room
    content.vb: Public ReadOnly Property OwnerRoom As Room
  overload: CoralBrain.CoralNeuron.OwnerRoom*
  implements:
  - Global.IOwnMycelia.OwnerRoom
references:
- uid: CoralBrain
  commentId: N:CoralBrain
  isExternal: true
  href: CoralBrain.html
  name: CoralBrain
  nameWithType: CoralBrain
  fullName: CoralBrain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IClimbableVine
  commentId: T:Global.IClimbableVine
  isExternal: true
  href: IClimbableVine.html
  name: IClimbableVine
  nameWithType: IClimbableVine
  fullName: IClimbableVine
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.IOwnMycelia
  commentId: T:Global.IOwnMycelia
  isExternal: true
  href: IOwnMycelia.html
  name: IOwnMycelia
  nameWithType: IOwnMycelia
  fullName: IOwnMycelia
- uid: Global.IOwnProjectedCircles
  commentId: T:Global.IOwnProjectedCircles
  isExternal: true
  href: IOwnProjectedCircles.html
  name: IOwnProjectedCircles
  nameWithType: IOwnProjectedCircles
  fullName: IOwnProjectedCircles
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CoralBrain.CoralNeuronSystem
  commentId: T:CoralBrain.CoralNeuronSystem
  parent: CoralBrain
  isExternal: true
  href: CoralBrain.CoralNeuronSystem.html
  name: CoralNeuronSystem
  nameWithType: CoralNeuronSystem
  fullName: CoralBrain.CoralNeuronSystem
- uid: UnityEngine.Vector2[,]
  isExternal: true
  name: Vector2[,]
  nameWithType: Vector2[,]
  fullName: UnityEngine.Vector2[,]
  nameWithType.vb: Vector2(,)
  fullName.vb: UnityEngine.Vector2(,)
  name.vb: Vector2(,)
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: ','
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: System.Single[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[,]
  nameWithType: float[,]
  fullName: float[,]
  nameWithType.vb: Single(,)
  fullName.vb: Single(,)
  name.vb: Single(,)
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: ','
  - name: )
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: CoralBrain.Mycelium[,]
  isExternal: true
  href: CoralBrain.Mycelium.html
  name: Mycelium[,]
  nameWithType: Mycelium[,]
  fullName: CoralBrain.Mycelium[,]
  nameWithType.vb: Mycelium(,)
  fullName.vb: CoralBrain.Mycelium(,)
  name.vb: Mycelium(,)
  spec.csharp:
  - uid: CoralBrain.Mycelium
    name: Mycelium
    isExternal: true
    href: CoralBrain.Mycelium.html
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: CoralBrain.Mycelium
    name: Mycelium
    isExternal: true
    href: CoralBrain.Mycelium.html
  - name: (
  - name: ','
  - name: )
- uid: CoralBrain.CoralNeuron.MeshColor*
  commentId: Overload:CoralBrain.CoralNeuron.MeshColor
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_MeshColor_System_Single_
  name: MeshColor
  nameWithType: CoralNeuron.MeshColor
  fullName: CoralBrain.CoralNeuron.MeshColor
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: CoralBrain.CoralNeuron.#ctor*
  commentId: Overload:CoralBrain.CoralNeuron.#ctor
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron__ctor_CoralBrain_CoralNeuronSystem_Room_System_Single_System_Nullable_UnityEngine_Vector2__System_Nullable_UnityEngine_Vector2__
  name: CoralNeuron
  nameWithType: CoralNeuron.CoralNeuron
  fullName: CoralBrain.CoralNeuron.CoralNeuron
  nameWithType.vb: CoralNeuron.New
  fullName.vb: CoralBrain.CoralNeuron.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: CoralBrain.CoralNeuron.Update*
  commentId: Overload:CoralBrain.CoralNeuron.Update
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_Update_System_Boolean_
  name: Update
  nameWithType: CoralNeuron.Update
  fullName: CoralBrain.CoralNeuron.Update
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CoralBrain.CoralNeuron.Pos*
  commentId: Overload:CoralBrain.CoralNeuron.Pos
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_Pos_System_Int32_
  name: Pos
  nameWithType: CoralNeuron.Pos
  fullName: CoralBrain.CoralNeuron.Pos
- uid: Global.IClimbableVine.Pos(System.Int32)
  commentId: M:Global.IClimbableVine.Pos(System.Int32)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Pos_System_Int32_
  name: Pos(int)
  nameWithType: IClimbableVine.Pos(int)
  fullName: IClimbableVine.Pos(int)
  nameWithType.vb: IClimbableVine.Pos(Integer)
  fullName.vb: IClimbableVine.Pos(Integer)
  name.vb: Pos(Integer)
  spec.csharp:
  - uid: Global.IClimbableVine.Pos(System.Int32)
    name: Pos
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Pos_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Pos(System.Int32)
    name: Pos
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Pos_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: CoralBrain.CoralNeuron.TotalPositions*
  commentId: Overload:CoralBrain.CoralNeuron.TotalPositions
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_TotalPositions
  name: TotalPositions
  nameWithType: CoralNeuron.TotalPositions
  fullName: CoralBrain.CoralNeuron.TotalPositions
- uid: Global.IClimbableVine.TotalPositions
  commentId: M:Global.IClimbableVine.TotalPositions
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_TotalPositions
  name: TotalPositions()
  nameWithType: IClimbableVine.TotalPositions()
  fullName: IClimbableVine.TotalPositions()
  spec.csharp:
  - uid: Global.IClimbableVine.TotalPositions
    name: TotalPositions
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_TotalPositions
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.TotalPositions
    name: TotalPositions
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_TotalPositions
  - name: (
  - name: )
- uid: CoralBrain.CoralNeuron.Rad*
  commentId: Overload:CoralBrain.CoralNeuron.Rad
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_Rad_System_Int32_
  name: Rad
  nameWithType: CoralNeuron.Rad
  fullName: CoralBrain.CoralNeuron.Rad
- uid: Global.IClimbableVine.Rad(System.Int32)
  commentId: M:Global.IClimbableVine.Rad(System.Int32)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Rad_System_Int32_
  name: Rad(int)
  nameWithType: IClimbableVine.Rad(int)
  fullName: IClimbableVine.Rad(int)
  nameWithType.vb: IClimbableVine.Rad(Integer)
  fullName.vb: IClimbableVine.Rad(Integer)
  name.vb: Rad(Integer)
  spec.csharp:
  - uid: Global.IClimbableVine.Rad(System.Int32)
    name: Rad
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Rad_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Rad(System.Int32)
    name: Rad
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Rad_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: CoralBrain.CoralNeuron.Mass*
  commentId: Overload:CoralBrain.CoralNeuron.Mass
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_Mass_System_Int32_
  name: Mass
  nameWithType: CoralNeuron.Mass
  fullName: CoralBrain.CoralNeuron.Mass
- uid: Global.IClimbableVine.Mass(System.Int32)
  commentId: M:Global.IClimbableVine.Mass(System.Int32)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Mass_System_Int32_
  name: Mass(int)
  nameWithType: IClimbableVine.Mass(int)
  fullName: IClimbableVine.Mass(int)
  nameWithType.vb: IClimbableVine.Mass(Integer)
  fullName.vb: IClimbableVine.Mass(Integer)
  name.vb: Mass(Integer)
  spec.csharp:
  - uid: Global.IClimbableVine.Mass(System.Int32)
    name: Mass
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Mass_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Mass(System.Int32)
    name: Mass
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Mass_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: CoralBrain.CoralNeuron.Push*
  commentId: Overload:CoralBrain.CoralNeuron.Push
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_Push_System_Int32_UnityEngine_Vector2_
  name: Push
  nameWithType: CoralNeuron.Push
  fullName: CoralBrain.CoralNeuron.Push
- uid: Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  commentId: M:Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Push_System_Int32_UnityEngine_Vector2_
  name: Push(int, Vector2)
  nameWithType: IClimbableVine.Push(int, Vector2)
  fullName: IClimbableVine.Push(int, UnityEngine.Vector2)
  nameWithType.vb: IClimbableVine.Push(Integer, Vector2)
  fullName.vb: IClimbableVine.Push(Integer, UnityEngine.Vector2)
  name.vb: Push(Integer, Vector2)
  spec.csharp:
  - uid: Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
    name: Push
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Push_System_Int32_UnityEngine_Vector2_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
    name: Push
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Push_System_Int32_UnityEngine_Vector2_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: CoralBrain.CoralNeuron.BeingClimbedOn*
  commentId: Overload:CoralBrain.CoralNeuron.BeingClimbedOn
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_BeingClimbedOn_Creature_
  name: BeingClimbedOn
  nameWithType: CoralNeuron.BeingClimbedOn
  fullName: CoralBrain.CoralNeuron.BeingClimbedOn
- uid: Global.IClimbableVine.BeingClimbedOn(Creature)
  commentId: M:Global.IClimbableVine.BeingClimbedOn(Creature)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_BeingClimbedOn_Creature_
  name: BeingClimbedOn(Creature)
  nameWithType: IClimbableVine.BeingClimbedOn(Creature)
  fullName: IClimbableVine.BeingClimbedOn(Creature)
  spec.csharp:
  - uid: Global.IClimbableVine.BeingClimbedOn(Creature)
    name: BeingClimbedOn
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_BeingClimbedOn_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.BeingClimbedOn(Creature)
    name: BeingClimbedOn
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_BeingClimbedOn_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: CoralBrain.CoralNeuron.CurrentlyClimbable*
  commentId: Overload:CoralBrain.CoralNeuron.CurrentlyClimbable
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_CurrentlyClimbable
  name: CurrentlyClimbable
  nameWithType: CoralNeuron.CurrentlyClimbable
  fullName: CoralBrain.CoralNeuron.CurrentlyClimbable
- uid: Global.IClimbableVine.CurrentlyClimbable
  commentId: M:Global.IClimbableVine.CurrentlyClimbable
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_CurrentlyClimbable
  name: CurrentlyClimbable()
  nameWithType: IClimbableVine.CurrentlyClimbable()
  fullName: IClimbableVine.CurrentlyClimbable()
  spec.csharp:
  - uid: Global.IClimbableVine.CurrentlyClimbable
    name: CurrentlyClimbable
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_CurrentlyClimbable
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.CurrentlyClimbable
    name: CurrentlyClimbable
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_CurrentlyClimbable
  - name: (
  - name: )
- uid: CoralBrain.CoralNeuron.InitiateSprites*
  commentId: Overload:CoralBrain.CoralNeuron.InitiateSprites
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: CoralNeuron.InitiateSprites
  fullName: CoralBrain.CoralNeuron.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: CoralBrain.CoralNeuron.DrawSprites*
  commentId: Overload:CoralBrain.CoralNeuron.DrawSprites
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: CoralNeuron.DrawSprites
  fullName: CoralBrain.CoralNeuron.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: CoralBrain.CoralNeuron.ApplyPalette*
  commentId: Overload:CoralBrain.CoralNeuron.ApplyPalette
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: CoralNeuron.ApplyPalette
  fullName: CoralBrain.CoralNeuron.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: CoralBrain.CoralNeuron.AddToContainer*
  commentId: Overload:CoralBrain.CoralNeuron.AddToContainer
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: CoralNeuron.AddToContainer
  fullName: CoralBrain.CoralNeuron.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: CoralBrain.CoralNeuron.ConnectionPos*
  commentId: Overload:CoralBrain.CoralNeuron.ConnectionPos
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_ConnectionPos_System_Int32_System_Single_
  name: ConnectionPos
  nameWithType: CoralNeuron.ConnectionPos
  fullName: CoralBrain.CoralNeuron.ConnectionPos
- uid: Global.IOwnMycelia.ConnectionPos(System.Int32,System.Single)
  commentId: M:Global.IOwnMycelia.ConnectionPos(System.Int32,System.Single)
  parent: Global.IOwnMycelia
  isExternal: true
  href: Global.IOwnMycelia.html#IOwnMycelia_ConnectionPos_System_Int32_System_Single_
  name: ConnectionPos(int, float)
  nameWithType: IOwnMycelia.ConnectionPos(int, float)
  fullName: IOwnMycelia.ConnectionPos(int, float)
  nameWithType.vb: IOwnMycelia.ConnectionPos(Integer, Single)
  fullName.vb: IOwnMycelia.ConnectionPos(Integer, Single)
  name.vb: ConnectionPos(Integer, Single)
  spec.csharp:
  - uid: Global.IOwnMycelia.ConnectionPos(System.Int32,System.Single)
    name: ConnectionPos
    isExternal: true
    href: Global.IOwnMycelia.html#IOwnMycelia_ConnectionPos_System_Int32_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.IOwnMycelia.ConnectionPos(System.Int32,System.Single)
    name: ConnectionPos
    isExternal: true
    href: Global.IOwnMycelia.html#IOwnMycelia_ConnectionPos_System_Int32_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: CoralBrain.CoralNeuron.ResetDir*
  commentId: Overload:CoralBrain.CoralNeuron.ResetDir
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_ResetDir_System_Int32_
  name: ResetDir
  nameWithType: CoralNeuron.ResetDir
  fullName: CoralBrain.CoralNeuron.ResetDir
- uid: Global.IOwnMycelia.ResetDir(System.Int32)
  commentId: M:Global.IOwnMycelia.ResetDir(System.Int32)
  parent: Global.IOwnMycelia
  isExternal: true
  href: Global.IOwnMycelia.html#IOwnMycelia_ResetDir_System_Int32_
  name: ResetDir(int)
  nameWithType: IOwnMycelia.ResetDir(int)
  fullName: IOwnMycelia.ResetDir(int)
  nameWithType.vb: IOwnMycelia.ResetDir(Integer)
  fullName.vb: IOwnMycelia.ResetDir(Integer)
  name.vb: ResetDir(Integer)
  spec.csharp:
  - uid: Global.IOwnMycelia.ResetDir(System.Int32)
    name: ResetDir
    isExternal: true
    href: Global.IOwnMycelia.html#IOwnMycelia_ResetDir_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.IOwnMycelia.ResetDir(System.Int32)
    name: ResetDir
    isExternal: true
    href: Global.IOwnMycelia.html#IOwnMycelia_ResetDir_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: CoralBrain.CoralNeuron.CircleCenter*
  commentId: Overload:CoralBrain.CoralNeuron.CircleCenter
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_CircleCenter_System_Int32_System_Single_
  name: CircleCenter
  nameWithType: CoralNeuron.CircleCenter
  fullName: CoralBrain.CoralNeuron.CircleCenter
- uid: Global.IOwnProjectedCircles.CircleCenter(System.Int32,System.Single)
  commentId: M:Global.IOwnProjectedCircles.CircleCenter(System.Int32,System.Single)
  parent: Global.IOwnProjectedCircles
  isExternal: true
  href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CircleCenter_System_Int32_System_Single_
  name: CircleCenter(int, float)
  nameWithType: IOwnProjectedCircles.CircleCenter(int, float)
  fullName: IOwnProjectedCircles.CircleCenter(int, float)
  nameWithType.vb: IOwnProjectedCircles.CircleCenter(Integer, Single)
  fullName.vb: IOwnProjectedCircles.CircleCenter(Integer, Single)
  name.vb: CircleCenter(Integer, Single)
  spec.csharp:
  - uid: Global.IOwnProjectedCircles.CircleCenter(System.Int32,System.Single)
    name: CircleCenter
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CircleCenter_System_Int32_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.IOwnProjectedCircles.CircleCenter(System.Int32,System.Single)
    name: CircleCenter
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CircleCenter_System_Int32_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: CoralBrain.CoralNeuron.HostingCircleFromRoom*
  commentId: Overload:CoralBrain.CoralNeuron.HostingCircleFromRoom
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_HostingCircleFromRoom
  name: HostingCircleFromRoom
  nameWithType: CoralNeuron.HostingCircleFromRoom
  fullName: CoralBrain.CoralNeuron.HostingCircleFromRoom
- uid: Global.IOwnProjectedCircles.HostingCircleFromRoom
  commentId: M:Global.IOwnProjectedCircles.HostingCircleFromRoom
  parent: Global.IOwnProjectedCircles
  isExternal: true
  href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_HostingCircleFromRoom
  name: HostingCircleFromRoom()
  nameWithType: IOwnProjectedCircles.HostingCircleFromRoom()
  fullName: IOwnProjectedCircles.HostingCircleFromRoom()
  spec.csharp:
  - uid: Global.IOwnProjectedCircles.HostingCircleFromRoom
    name: HostingCircleFromRoom
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_HostingCircleFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IOwnProjectedCircles.HostingCircleFromRoom
    name: HostingCircleFromRoom
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_HostingCircleFromRoom
  - name: (
  - name: )
- uid: CoralBrain.CoralNeuron.CanHostCircle*
  commentId: Overload:CoralBrain.CoralNeuron.CanHostCircle
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_CanHostCircle
  name: CanHostCircle
  nameWithType: CoralNeuron.CanHostCircle
  fullName: CoralBrain.CoralNeuron.CanHostCircle
- uid: Global.IOwnProjectedCircles.CanHostCircle
  commentId: M:Global.IOwnProjectedCircles.CanHostCircle
  parent: Global.IOwnProjectedCircles
  isExternal: true
  href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CanHostCircle
  name: CanHostCircle()
  nameWithType: IOwnProjectedCircles.CanHostCircle()
  fullName: IOwnProjectedCircles.CanHostCircle()
  spec.csharp:
  - uid: Global.IOwnProjectedCircles.CanHostCircle
    name: CanHostCircle
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CanHostCircle
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IOwnProjectedCircles.CanHostCircle
    name: CanHostCircle
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CanHostCircle
  - name: (
  - name: )
- uid: CoralBrain.CoralNeuron.OwnerRoom*
  commentId: Overload:CoralBrain.CoralNeuron.OwnerRoom
  isExternal: true
  href: CoralBrain.CoralNeuron.html#CoralBrain_CoralNeuron_OwnerRoom
  name: OwnerRoom
  nameWithType: CoralNeuron.OwnerRoom
  fullName: CoralBrain.CoralNeuron.OwnerRoom
- uid: Global.IOwnMycelia.OwnerRoom
  commentId: P:Global.IOwnMycelia.OwnerRoom
  parent: Global.IOwnMycelia
  isExternal: true
  href: Global.IOwnMycelia.html#IOwnMycelia_OwnerRoom
  name: OwnerRoom
  nameWithType: IOwnMycelia.OwnerRoom
  fullName: IOwnMycelia.OwnerRoom
