### YamlMime:ManagedReference
items:
- uid: Global.SelectionMenu
  commentId: T:Global.SelectionMenu
  id: SelectionMenu
  parent: Global
  children:
  - Global.SelectionMenu.#ctor(System.String,System.String[])
  - Global.SelectionMenu.Select
  - Global.SelectionMenu.Update
  - Global.SelectionMenu.headline
  - Global.SelectionMenu.items
  - Global.SelectionMenu.label
  - Global.SelectionMenu.lastEnterKey
  - Global.SelectionMenu.lastVert
  - Global.SelectionMenu.selectedItem
  langs:
  - csharp
  - vb
  name: SelectionMenu
  nameWithType: SelectionMenu
  fullName: SelectionMenu
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SelectionMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class SelectionMenu
    content.vb: Public Class SelectionMenu
  inheritance:
  - System.Object
  derivedClasses:
  - Global.RegionSelectMenu
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.SelectionMenu.selectedItem
  commentId: F:Global.SelectionMenu.selectedItem
  id: selectedItem
  parent: Global.SelectionMenu
  langs:
  - csharp
  - vb
  name: selectedItem
  nameWithType: SelectionMenu.selectedItem
  fullName: SelectionMenu.selectedItem
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SelectionMenu.selectedItem</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int selectedItem
    return:
      type: System.Int32
    content.vb: Public selectedItem As Integer
- uid: Global.SelectionMenu.items
  commentId: F:Global.SelectionMenu.items
  id: items
  parent: Global.SelectionMenu
  langs:
  - csharp
  - vb
  name: items
  nameWithType: SelectionMenu.items
  fullName: SelectionMenu.items
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SelectionMenu.items</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] items
    return:
      type: System.String[]
    content.vb: Public items As String()
- uid: Global.SelectionMenu.headline
  commentId: F:Global.SelectionMenu.headline
  id: headline
  parent: Global.SelectionMenu
  langs:
  - csharp
  - vb
  name: headline
  nameWithType: SelectionMenu.headline
  fullName: SelectionMenu.headline
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SelectionMenu.headline</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string headline
    return:
      type: System.String
    content.vb: Public headline As String
- uid: Global.SelectionMenu.lastVert
  commentId: F:Global.SelectionMenu.lastVert
  id: lastVert
  parent: Global.SelectionMenu
  langs:
  - csharp
  - vb
  name: lastVert
  nameWithType: SelectionMenu.lastVert
  fullName: SelectionMenu.lastVert
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SelectionMenu.lastVert</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lastVert
    return:
      type: System.Int32
    content.vb: Public lastVert As Integer
- uid: Global.SelectionMenu.lastEnterKey
  commentId: F:Global.SelectionMenu.lastEnterKey
  id: lastEnterKey
  parent: Global.SelectionMenu
  langs:
  - csharp
  - vb
  name: lastEnterKey
  nameWithType: SelectionMenu.lastEnterKey
  fullName: SelectionMenu.lastEnterKey
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SelectionMenu.lastEnterKey</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool lastEnterKey
    return:
      type: System.Boolean
    content.vb: Public lastEnterKey As Boolean
- uid: Global.SelectionMenu.label
  commentId: F:Global.SelectionMenu.label
  id: label
  parent: Global.SelectionMenu
  langs:
  - csharp
  - vb
  name: label
  nameWithType: SelectionMenu.label
  fullName: SelectionMenu.label
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SelectionMenu.label</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FLabel label
    return:
      type: Global.FLabel
    content.vb: Public label As FLabel
- uid: Global.SelectionMenu.#ctor(System.String,System.String[])
  commentId: M:Global.SelectionMenu.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: Global.SelectionMenu
  langs:
  - csharp
  - vb
  name: SelectionMenu(string, string[])
  nameWithType: SelectionMenu.SelectionMenu(string, string[])
  fullName: SelectionMenu.SelectionMenu(string, string[])
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SelectionMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SelectionMenu(string headline, string[] items)
    parameters:
    - id: headline
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>headline</parameter>
            <parameter>M:SelectionMenu.#ctor(System.String,System.String[])</parameter>
          </include>
        </markup>
    - id: items
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:SelectionMenu.#ctor(System.String,System.String[])</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(headline As String, items As String())
  overload: Global.SelectionMenu.#ctor*
  nameWithType.vb: SelectionMenu.New(String, String())
  fullName.vb: SelectionMenu.New(String, String())
  name.vb: New(String, String())
- uid: Global.SelectionMenu.Update
  commentId: M:Global.SelectionMenu.Update
  id: Update
  parent: Global.SelectionMenu
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: SelectionMenu.Update()
  fullName: SelectionMenu.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SelectionMenu.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.SelectionMenu.Update*
- uid: Global.SelectionMenu.Select
  commentId: M:Global.SelectionMenu.Select
  id: Select
  parent: Global.SelectionMenu
  langs:
  - csharp
  - vb
  name: Select()
  nameWithType: SelectionMenu.Select()
  fullName: SelectionMenu.Select()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SelectionMenu.Select</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void Select()
    content.vb: Protected Overridable Sub [Select]()
  overload: Global.SelectionMenu.Select*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FLabel
  commentId: T:Global.FLabel
  isExternal: true
  href: FLabel.html
  name: FLabel
  nameWithType: FLabel
  fullName: FLabel
- uid: Global.SelectionMenu.#ctor*
  commentId: Overload:Global.SelectionMenu.#ctor
  isExternal: true
  href: Global.SelectionMenu.html#SelectionMenu__ctor_System_String_System_String___
  name: SelectionMenu
  nameWithType: SelectionMenu.SelectionMenu
  fullName: SelectionMenu.SelectionMenu
  nameWithType.vb: SelectionMenu.New
  fullName.vb: SelectionMenu.New
  name.vb: New
- uid: Global.SelectionMenu.Update*
  commentId: Overload:Global.SelectionMenu.Update
  isExternal: true
  href: Global.SelectionMenu.html#SelectionMenu_Update
  name: Update
  nameWithType: SelectionMenu.Update
  fullName: SelectionMenu.Update
- uid: Global.SelectionMenu.Select*
  commentId: Overload:Global.SelectionMenu.Select
  isExternal: true
  href: Global.SelectionMenu.html#SelectionMenu_Select
  name: Select
  nameWithType: SelectionMenu.Select
  fullName: SelectionMenu.Select
