### YamlMime:ManagedReference
items:
- uid: Global.RXCircle
  commentId: T:Global.RXCircle
  id: RXCircle
  parent: Global
  children:
  - Global.RXCircle.#ctor(UnityEngine.Vector2,System.Single)
  - Global.RXCircle.CheckIntersectWithCircle(RXCircle)
  - Global.RXCircle.CheckIntersectWithRect(UnityEngine.Rect)
  - Global.RXCircle.center
  - Global.RXCircle.radius
  - Global.RXCircle.radiusSquared
  langs:
  - csharp
  - vb
  name: RXCircle
  nameWithType: RXCircle
  fullName: RXCircle
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RXCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class RXCircle
    content.vb: Public Class RXCircle
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RXCircle.center
  commentId: F:Global.RXCircle.center
  id: center
  parent: Global.RXCircle
  langs:
  - csharp
  - vb
  name: center
  nameWithType: RXCircle.center
  fullName: RXCircle.center
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RXCircle.center</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 center
    return:
      type: UnityEngine.Vector2
    content.vb: Public center As Vector2
- uid: Global.RXCircle.radius
  commentId: F:Global.RXCircle.radius
  id: radius
  parent: Global.RXCircle
  langs:
  - csharp
  - vb
  name: radius
  nameWithType: RXCircle.radius
  fullName: RXCircle.radius
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RXCircle.radius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float radius
    return:
      type: System.Single
    content.vb: Public radius As Single
- uid: Global.RXCircle.radiusSquared
  commentId: F:Global.RXCircle.radiusSquared
  id: radiusSquared
  parent: Global.RXCircle
  langs:
  - csharp
  - vb
  name: radiusSquared
  nameWithType: RXCircle.radiusSquared
  fullName: RXCircle.radiusSquared
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RXCircle.radiusSquared</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float radiusSquared
    return:
      type: System.Single
    content.vb: Public radiusSquared As Single
- uid: Global.RXCircle.#ctor(UnityEngine.Vector2,System.Single)
  commentId: M:Global.RXCircle.#ctor(UnityEngine.Vector2,System.Single)
  id: '#ctor(UnityEngine.Vector2,System.Single)'
  parent: Global.RXCircle
  langs:
  - csharp
  - vb
  name: RXCircle(Vector2, float)
  nameWithType: RXCircle.RXCircle(Vector2, float)
  fullName: RXCircle.RXCircle(UnityEngine.Vector2, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RXCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RXCircle(Vector2 center, float radius)
    parameters:
    - id: center
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>center</parameter>
            <parameter>M:RXCircle.#ctor(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: radius
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>radius</parameter>
            <parameter>M:RXCircle.#ctor(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(center As Vector2, radius As Single)
  overload: Global.RXCircle.#ctor*
  nameWithType.vb: RXCircle.New(Vector2, Single)
  fullName.vb: RXCircle.New(UnityEngine.Vector2, Single)
  name.vb: New(Vector2, Single)
- uid: Global.RXCircle.CheckIntersectWithRect(UnityEngine.Rect)
  commentId: M:Global.RXCircle.CheckIntersectWithRect(UnityEngine.Rect)
  id: CheckIntersectWithRect(UnityEngine.Rect)
  parent: Global.RXCircle
  langs:
  - csharp
  - vb
  name: CheckIntersectWithRect(Rect)
  nameWithType: RXCircle.CheckIntersectWithRect(Rect)
  fullName: RXCircle.CheckIntersectWithRect(UnityEngine.Rect)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXCircle.CheckIntersectWithRect(UnityEngine.Rect)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CheckIntersectWithRect(Rect rect)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXCircle.CheckIntersectWithRect(UnityEngine.Rect)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXCircle.CheckIntersectWithRect(UnityEngine.Rect)</parameter>
          </include>
        </markup>
    content.vb: Public Function CheckIntersectWithRect(rect As Rect) As Boolean
  overload: Global.RXCircle.CheckIntersectWithRect*
- uid: Global.RXCircle.CheckIntersectWithCircle(RXCircle)
  commentId: M:Global.RXCircle.CheckIntersectWithCircle(RXCircle)
  id: CheckIntersectWithCircle(RXCircle)
  parent: Global.RXCircle
  langs:
  - csharp
  - vb
  name: CheckIntersectWithCircle(RXCircle)
  nameWithType: RXCircle.CheckIntersectWithCircle(RXCircle)
  fullName: RXCircle.CheckIntersectWithCircle(RXCircle)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXCircle.CheckIntersectWithCircle(RXCircle)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CheckIntersectWithCircle(RXCircle circle)
    parameters:
    - id: circle
      type: Global.RXCircle
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>circle</parameter>
            <parameter>M:RXCircle.CheckIntersectWithCircle(RXCircle)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXCircle.CheckIntersectWithCircle(RXCircle)</parameter>
          </include>
        </markup>
    content.vb: Public Function CheckIntersectWithCircle(circle As RXCircle) As Boolean
  overload: Global.RXCircle.CheckIntersectWithCircle*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.RXCircle.#ctor*
  commentId: Overload:Global.RXCircle.#ctor
  isExternal: true
  href: Global.RXCircle.html#RXCircle__ctor_UnityEngine_Vector2_System_Single_
  name: RXCircle
  nameWithType: RXCircle.RXCircle
  fullName: RXCircle.RXCircle
  nameWithType.vb: RXCircle.New
  fullName.vb: RXCircle.New
  name.vb: New
- uid: Global.RXCircle.CheckIntersectWithRect*
  commentId: Overload:Global.RXCircle.CheckIntersectWithRect
  isExternal: true
  href: Global.RXCircle.html#RXCircle_CheckIntersectWithRect_UnityEngine_Rect_
  name: CheckIntersectWithRect
  nameWithType: RXCircle.CheckIntersectWithRect
  fullName: RXCircle.CheckIntersectWithRect
- uid: UnityEngine.Rect
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.RXCircle.CheckIntersectWithCircle*
  commentId: Overload:Global.RXCircle.CheckIntersectWithCircle
  isExternal: true
  href: Global.RXCircle.html#RXCircle_CheckIntersectWithCircle_RXCircle_
  name: CheckIntersectWithCircle
  nameWithType: RXCircle.CheckIntersectWithCircle
  fullName: RXCircle.CheckIntersectWithCircle
- uid: Global.RXCircle
  commentId: T:Global.RXCircle
  isExternal: true
  href: RXCircle.html
  name: RXCircle
  nameWithType: RXCircle
  fullName: RXCircle
