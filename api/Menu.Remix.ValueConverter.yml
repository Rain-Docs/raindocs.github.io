### YamlMime:ManagedReference
items:
- uid: Menu.Remix.ValueConverter
  commentId: T:Menu.Remix.ValueConverter
  id: ValueConverter
  parent: Menu.Remix
  children:
  - Menu.Remix.ValueConverter.CanConvert(System.Type)
  - Menu.Remix.ValueConverter.ConvertToString(System.Object,System.Type)
  - Menu.Remix.ValueConverter.ConvertToString``1(``0)
  - Menu.Remix.ValueConverter.ConvertToValue(System.String,System.Type)
  - Menu.Remix.ValueConverter.ConvertToValue``1(System.String)
  - Menu.Remix.ValueConverter.GetConverter(System.Type)
  - Menu.Remix.ValueConverter.GetSupportedTypes
  - Menu.Remix.ValueConverter.GetTypeCategory(System.Type)
  - Menu.Remix.ValueConverter.GetTypeCategory``1
  langs:
  - csharp
  - vb
  name: ValueConverter
  nameWithType: ValueConverter
  fullName: Menu.Remix.ValueConverter
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Remix.ValueConverter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class ValueConverter
    content.vb: Public Module ValueConverter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.Remix.ValueConverter.ConvertToString(System.Object,System.Type)
  commentId: M:Menu.Remix.ValueConverter.ConvertToString(System.Object,System.Type)
  id: ConvertToString(System.Object,System.Type)
  parent: Menu.Remix.ValueConverter
  langs:
  - csharp
  - vb
  name: ConvertToString(object, Type)
  nameWithType: ValueConverter.ConvertToString(object, Type)
  fullName: Menu.Remix.ValueConverter.ConvertToString(object, System.Type)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.ValueConverter.ConvertToString(System.Object,System.Type)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string ConvertToString(object value, Type valueType)
    parameters:
    - id: value
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToString(System.Object,System.Type)</parameter>
          </include>
        </markup>
    - id: valueType
      type: System.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>valueType</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToString(System.Object,System.Type)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToString(System.Object,System.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ConvertToString(value As Object, valueType As Type) As String
  overload: Menu.Remix.ValueConverter.ConvertToString*
  nameWithType.vb: ValueConverter.ConvertToString(Object, Type)
  fullName.vb: Menu.Remix.ValueConverter.ConvertToString(Object, System.Type)
  name.vb: ConvertToString(Object, Type)
- uid: Menu.Remix.ValueConverter.ConvertToString``1(``0)
  commentId: M:Menu.Remix.ValueConverter.ConvertToString``1(``0)
  id: ConvertToString``1(``0)
  parent: Menu.Remix.ValueConverter
  langs:
  - csharp
  - vb
  name: ConvertToString<T>(T)
  nameWithType: ValueConverter.ConvertToString<T>(T)
  fullName: Menu.Remix.ValueConverter.ConvertToString<T>(T)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.ValueConverter.ConvertToString``1(``0)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string ConvertToString<T>(T value)
    parameters:
    - id: value
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToString``1(``0)</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToString``1(``0)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToString``1(``0)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ConvertToString(Of T)(value As T) As String
  overload: Menu.Remix.ValueConverter.ConvertToString*
  nameWithType.vb: ValueConverter.ConvertToString(Of T)(T)
  fullName.vb: Menu.Remix.ValueConverter.ConvertToString(Of T)(T)
  name.vb: ConvertToString(Of T)(T)
- uid: Menu.Remix.ValueConverter.ConvertToValue``1(System.String)
  commentId: M:Menu.Remix.ValueConverter.ConvertToValue``1(System.String)
  id: ConvertToValue``1(System.String)
  parent: Menu.Remix.ValueConverter
  langs:
  - csharp
  - vb
  name: ConvertToValue<T>(string)
  nameWithType: ValueConverter.ConvertToValue<T>(string)
  fullName: Menu.Remix.ValueConverter.ConvertToValue<T>(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.ValueConverter.ConvertToValue``1(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static T ConvertToValue<T>(string value)
    parameters:
    - id: value
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToValue``1(System.String)</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToValue``1(System.String)</parameter>
          </include>
        </markup>
    return:
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToValue``1(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ConvertToValue(Of T)(value As String) As T
  overload: Menu.Remix.ValueConverter.ConvertToValue*
  nameWithType.vb: ValueConverter.ConvertToValue(Of T)(String)
  fullName.vb: Menu.Remix.ValueConverter.ConvertToValue(Of T)(String)
  name.vb: ConvertToValue(Of T)(String)
- uid: Menu.Remix.ValueConverter.ConvertToValue(System.String,System.Type)
  commentId: M:Menu.Remix.ValueConverter.ConvertToValue(System.String,System.Type)
  id: ConvertToValue(System.String,System.Type)
  parent: Menu.Remix.ValueConverter
  langs:
  - csharp
  - vb
  name: ConvertToValue(string, Type)
  nameWithType: ValueConverter.ConvertToValue(string, Type)
  fullName: Menu.Remix.ValueConverter.ConvertToValue(string, System.Type)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.ValueConverter.ConvertToValue(System.String,System.Type)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static object ConvertToValue(string value, Type valueType)
    parameters:
    - id: value
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToValue(System.String,System.Type)</parameter>
          </include>
        </markup>
    - id: valueType
      type: System.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>valueType</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToValue(System.String,System.Type)</parameter>
          </include>
        </markup>
    return:
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.ValueConverter.ConvertToValue(System.String,System.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ConvertToValue(value As String, valueType As Type) As Object
  overload: Menu.Remix.ValueConverter.ConvertToValue*
  nameWithType.vb: ValueConverter.ConvertToValue(String, Type)
  fullName.vb: Menu.Remix.ValueConverter.ConvertToValue(String, System.Type)
  name.vb: ConvertToValue(String, Type)
- uid: Menu.Remix.ValueConverter.GetConverter(System.Type)
  commentId: M:Menu.Remix.ValueConverter.GetConverter(System.Type)
  id: GetConverter(System.Type)
  parent: Menu.Remix.ValueConverter
  langs:
  - csharp
  - vb
  name: GetConverter(Type)
  nameWithType: ValueConverter.GetConverter(Type)
  fullName: Menu.Remix.ValueConverter.GetConverter(System.Type)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.ValueConverter.GetConverter(System.Type)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static ValueConverter.Converter GetConverter(Type valueType)
    parameters:
    - id: valueType
      type: System.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>valueType</parameter>
            <parameter>M:Menu.Remix.ValueConverter.GetConverter(System.Type)</parameter>
          </include>
        </markup>
    return:
      type: Menu.Remix.ValueConverter.Converter
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.ValueConverter.GetConverter(System.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetConverter(valueType As Type) As ValueConverter.Converter
  overload: Menu.Remix.ValueConverter.GetConverter*
- uid: Menu.Remix.ValueConverter.CanConvert(System.Type)
  commentId: M:Menu.Remix.ValueConverter.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: Menu.Remix.ValueConverter
  langs:
  - csharp
  - vb
  name: CanConvert(Type)
  nameWithType: ValueConverter.CanConvert(Type)
  fullName: Menu.Remix.ValueConverter.CanConvert(System.Type)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.ValueConverter.CanConvert(System.Type)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool CanConvert(Type type)
    parameters:
    - id: type
      type: System.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Menu.Remix.ValueConverter.CanConvert(System.Type)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.ValueConverter.CanConvert(System.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CanConvert(type As Type) As Boolean
  overload: Menu.Remix.ValueConverter.CanConvert*
- uid: Menu.Remix.ValueConverter.GetSupportedTypes
  commentId: M:Menu.Remix.ValueConverter.GetSupportedTypes
  id: GetSupportedTypes
  parent: Menu.Remix.ValueConverter
  langs:
  - csharp
  - vb
  name: GetSupportedTypes()
  nameWithType: ValueConverter.GetSupportedTypes()
  fullName: Menu.Remix.ValueConverter.GetSupportedTypes()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.ValueConverter.GetSupportedTypes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IEnumerable<Type> GetSupportedTypes()
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.ValueConverter.GetSupportedTypes</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetSupportedTypes() As IEnumerable(Of Type)
  overload: Menu.Remix.ValueConverter.GetSupportedTypes*
- uid: Menu.Remix.ValueConverter.GetTypeCategory(System.Type)
  commentId: M:Menu.Remix.ValueConverter.GetTypeCategory(System.Type)
  id: GetTypeCategory(System.Type)
  parent: Menu.Remix.ValueConverter
  langs:
  - csharp
  - vb
  name: GetTypeCategory(Type)
  nameWithType: ValueConverter.GetTypeCategory(Type)
  fullName: Menu.Remix.ValueConverter.GetTypeCategory(System.Type)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.ValueConverter.GetTypeCategory(System.Type)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static ValueConverter.TypeCategory GetTypeCategory(Type type)
    parameters:
    - id: type
      type: System.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Menu.Remix.ValueConverter.GetTypeCategory(System.Type)</parameter>
          </include>
        </markup>
    return:
      type: Menu.Remix.ValueConverter.TypeCategory
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.ValueConverter.GetTypeCategory(System.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetTypeCategory(type As Type) As ValueConverter.TypeCategory
  overload: Menu.Remix.ValueConverter.GetTypeCategory*
- uid: Menu.Remix.ValueConverter.GetTypeCategory``1
  commentId: M:Menu.Remix.ValueConverter.GetTypeCategory``1
  id: GetTypeCategory``1
  parent: Menu.Remix.ValueConverter
  langs:
  - csharp
  - vb
  name: GetTypeCategory<T>()
  nameWithType: ValueConverter.GetTypeCategory<T>()
  fullName: Menu.Remix.ValueConverter.GetTypeCategory<T>()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.ValueConverter.GetTypeCategory``1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static ValueConverter.TypeCategory GetTypeCategory<T>()
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Menu.Remix.ValueConverter.GetTypeCategory``1</parameter>
          </include>
        </markup>
    return:
      type: Menu.Remix.ValueConverter.TypeCategory
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.ValueConverter.GetTypeCategory``1</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetTypeCategory(Of T)() As ValueConverter.TypeCategory
  overload: Menu.Remix.ValueConverter.GetTypeCategory*
  nameWithType.vb: ValueConverter.GetTypeCategory(Of T)()
  fullName.vb: Menu.Remix.ValueConverter.GetTypeCategory(Of T)()
  name.vb: GetTypeCategory(Of T)()
references:
- uid: Menu.Remix
  commentId: N:Menu.Remix
  isExternal: true
  href: Menu.html
  name: Menu.Remix
  nameWithType: Menu.Remix
  fullName: Menu.Remix
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Menu.Remix.ValueConverter.ConvertToString*
  commentId: Overload:Menu.Remix.ValueConverter.ConvertToString
  isExternal: true
  href: Menu.Remix.ValueConverter.html#Menu_Remix_ValueConverter_ConvertToString_System_Object_System_Type_
  name: ConvertToString
  nameWithType: ValueConverter.ConvertToString
  fullName: Menu.Remix.ValueConverter.ConvertToString
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Menu.Remix.ValueConverter.ConvertToValue*
  commentId: Overload:Menu.Remix.ValueConverter.ConvertToValue
  isExternal: true
  href: Menu.Remix.ValueConverter.html#Menu_Remix_ValueConverter_ConvertToValue__1_System_String_
  name: ConvertToValue
  nameWithType: ValueConverter.ConvertToValue
  fullName: Menu.Remix.ValueConverter.ConvertToValue
- uid: Menu.Remix.ValueConverter.GetConverter*
  commentId: Overload:Menu.Remix.ValueConverter.GetConverter
  isExternal: true
  href: Menu.Remix.ValueConverter.html#Menu_Remix_ValueConverter_GetConverter_System_Type_
  name: GetConverter
  nameWithType: ValueConverter.GetConverter
  fullName: Menu.Remix.ValueConverter.GetConverter
- uid: Menu.Remix.ValueConverter.Converter
  commentId: T:Menu.Remix.ValueConverter.Converter
  parent: Menu.Remix
  isExternal: true
  href: Menu.Remix.ValueConverter.html
  name: ValueConverter.Converter
  nameWithType: ValueConverter.Converter
  fullName: Menu.Remix.ValueConverter.Converter
  spec.csharp:
  - uid: Menu.Remix.ValueConverter
    name: ValueConverter
    isExternal: true
    href: Menu.Remix.ValueConverter.html
  - name: .
  - uid: Menu.Remix.ValueConverter.Converter
    name: Converter
    isExternal: true
    href: Menu.Remix.ValueConverter.Converter.html
  spec.vb:
  - uid: Menu.Remix.ValueConverter
    name: ValueConverter
    isExternal: true
    href: Menu.Remix.ValueConverter.html
  - name: .
  - uid: Menu.Remix.ValueConverter.Converter
    name: Converter
    isExternal: true
    href: Menu.Remix.ValueConverter.Converter.html
- uid: Menu.Remix.ValueConverter.CanConvert*
  commentId: Overload:Menu.Remix.ValueConverter.CanConvert
  isExternal: true
  href: Menu.Remix.ValueConverter.html#Menu_Remix_ValueConverter_CanConvert_System_Type_
  name: CanConvert
  nameWithType: ValueConverter.CanConvert
  fullName: Menu.Remix.ValueConverter.CanConvert
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Menu.Remix.ValueConverter.GetSupportedTypes*
  commentId: Overload:Menu.Remix.ValueConverter.GetSupportedTypes
  isExternal: true
  href: Menu.Remix.ValueConverter.html#Menu_Remix_ValueConverter_GetSupportedTypes
  name: GetSupportedTypes
  nameWithType: ValueConverter.GetSupportedTypes
  fullName: Menu.Remix.ValueConverter.GetSupportedTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Menu.Remix.ValueConverter.GetTypeCategory*
  commentId: Overload:Menu.Remix.ValueConverter.GetTypeCategory
  isExternal: true
  href: Menu.Remix.ValueConverter.html#Menu_Remix_ValueConverter_GetTypeCategory_System_Type_
  name: GetTypeCategory
  nameWithType: ValueConverter.GetTypeCategory
  fullName: Menu.Remix.ValueConverter.GetTypeCategory
- uid: Menu.Remix.ValueConverter.TypeCategory
  commentId: T:Menu.Remix.ValueConverter.TypeCategory
  parent: Menu.Remix
  isExternal: true
  href: Menu.Remix.ValueConverter.html
  name: ValueConverter.TypeCategory
  nameWithType: ValueConverter.TypeCategory
  fullName: Menu.Remix.ValueConverter.TypeCategory
  spec.csharp:
  - uid: Menu.Remix.ValueConverter
    name: ValueConverter
    isExternal: true
    href: Menu.Remix.ValueConverter.html
  - name: .
  - uid: Menu.Remix.ValueConverter.TypeCategory
    name: TypeCategory
    isExternal: true
    href: Menu.Remix.ValueConverter.TypeCategory.html
  spec.vb:
  - uid: Menu.Remix.ValueConverter
    name: ValueConverter
    isExternal: true
    href: Menu.Remix.ValueConverter.html
  - name: .
  - uid: Menu.Remix.ValueConverter.TypeCategory
    name: TypeCategory
    isExternal: true
    href: Menu.Remix.ValueConverter.TypeCategory.html
