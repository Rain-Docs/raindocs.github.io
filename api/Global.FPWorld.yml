### YamlMime:ManagedReference
items:
- uid: Global.FPWorld
  commentId: T:Global.FPWorld
  id: FPWorld
  parent: Global
  children:
  - Global.FPWorld.Create(System.Single)
  - Global.FPWorld.Init(System.Single)
  - Global.FPWorld.instance
  langs:
  - csharp
  - vb
  name: FPWorld
  nameWithType: FPWorld
  fullName: FPWorld
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FPWorld</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class FPWorld : MonoBehaviour'
    content.vb: Public Class FPWorld Inherits MonoBehaviour
  inheritance:
  - System.Object
- uid: Global.FPWorld.instance
  commentId: F:Global.FPWorld.instance
  id: instance
  parent: Global.FPWorld
  langs:
  - csharp
  - vb
  name: instance
  nameWithType: FPWorld.instance
  fullName: FPWorld.instance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FPWorld.instance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static FPWorld instance
    return:
      type: Global.FPWorld
    content.vb: Public Shared instance As FPWorld
- uid: Global.FPWorld.Create(System.Single)
  commentId: M:Global.FPWorld.Create(System.Single)
  id: Create(System.Single)
  parent: Global.FPWorld
  langs:
  - csharp
  - vb
  name: Create(float)
  nameWithType: FPWorld.Create(float)
  fullName: FPWorld.Create(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPWorld.Create(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static FPWorld Create(float metersToPointsRatio)
    parameters:
    - id: metersToPointsRatio
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metersToPointsRatio</parameter>
            <parameter>M:FPWorld.Create(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.FPWorld
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPWorld.Create(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Create(metersToPointsRatio As Single) As FPWorld
  overload: Global.FPWorld.Create*
  nameWithType.vb: FPWorld.Create(Single)
  fullName.vb: FPWorld.Create(Single)
  name.vb: Create(Single)
- uid: Global.FPWorld.Init(System.Single)
  commentId: M:Global.FPWorld.Init(System.Single)
  id: Init(System.Single)
  parent: Global.FPWorld
  langs:
  - csharp
  - vb
  name: Init(float)
  nameWithType: FPWorld.Init(float)
  fullName: FPWorld.Init(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPWorld.Init(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void Init(float metersToPointsRatio)
    parameters:
    - id: metersToPointsRatio
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>metersToPointsRatio</parameter>
            <parameter>M:FPWorld.Init(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub Init(metersToPointsRatio As Single)
  overload: Global.FPWorld.Init*
  nameWithType.vb: FPWorld.Init(Single)
  fullName.vb: FPWorld.Init(Single)
  name.vb: Init(Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FPWorld
  commentId: T:Global.FPWorld
  isExternal: true
  href: FPWorld.html
  name: FPWorld
  nameWithType: FPWorld
  fullName: FPWorld
- uid: Global.FPWorld.Create*
  commentId: Overload:Global.FPWorld.Create
  isExternal: true
  href: Global.FPWorld.html#FPWorld_Create_System_Single_
  name: Create
  nameWithType: FPWorld.Create
  fullName: FPWorld.Create
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.FPWorld.Init*
  commentId: Overload:Global.FPWorld.Init
  isExternal: true
  href: Global.FPWorld.html#FPWorld_Init_System_Single_
  name: Init
  nameWithType: FPWorld.Init
  fullName: FPWorld.Init
